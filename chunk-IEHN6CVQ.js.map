{"version":3,"sources":["src/app/store/profile/profile.selectors.ts","src/app/modules/splitwise/create-group-dialog/create-group-dialog.component.ts","src/app/modules/splitwise/create-group-dialog/create-group-dialog.component.html","src/app/modules/splitwise/store/splitwise.actions.ts","src/app/modules/splitwise/store/splitwise.selectors.ts","src/app/util/models/splitwise.model.ts","src/app/modules/splitwise/add-member-dialog/add-member-dialog.component.ts","src/app/modules/splitwise/add-member-dialog/add-member-dialog.component.html","src/app/modules/splitwise/group/group.component.ts","src/app/modules/splitwise/group/group.component.html","src/app/modules/splitwise/splitwise.component.ts","src/app/modules/splitwise/splitwise.component.html","src/app/modules/splitwise/edit-transaction-dialog/edit-transaction-dialog.component.ts","src/app/modules/splitwise/edit-transaction-dialog/edit-transaction-dialog.component.html","src/app/util/service/date.service.ts","src/app/util/service/haptic-feedback.service.ts","src/app/modules/splitwise/services/splitwise.service.ts","src/app/util/service/currency.service.ts","node_modules/@angular/cdk/fesm2022/accordion.mjs","node_modules/@angular/material/fesm2022/expansion.mjs","src/app/modules/splitwise/group-details/group-details.component.ts","src/app/modules/splitwise/group-details/group-details.component.html","src/app/modules/splitwise/members/members.component.ts","src/app/modules/splitwise/members/members.component.html","src/app/modules/splitwise/members-page/members-page.component.ts","src/app/modules/splitwise/members-page/members-page.component.html","src/app/modules/splitwise/splitwise-routing.module.ts","node_modules/@angular/material/fesm2022/list.mjs","node_modules/@angular/material/fesm2022/button-toggle.mjs","node_modules/@ngrx/effects/fesm2022/ngrx-effects.mjs","src/app/modules/splitwise/store/splitwise.state.ts","src/app/modules/splitwise/store/splitwise.reducer.ts","src/app/modules/splitwise/store/splitwise.effects.ts","src/app/util/components/loader/loader.component.ts","src/app/util/components/loader/loader.component.html","src/app/util/service/translation.service.ts","src/app/util/pipes/translate.pipe.ts","src/app/util/pipes/currency.pipe.ts","src/app/modules/splitwise/splitwise.module.ts"],"sourcesContent":["import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { ProfileState } from './profile.state';\n\nexport const selectProfileState = createFeatureSelector<ProfileState>('profile');\n\nexport const selectProfile = createSelector(\n  selectProfileState,\n  (state: ProfileState) => state.profile\n);\n\nexport const selectProfileLoading = createSelector(\n  selectProfileState,\n  (state: ProfileState) => state.loading\n);\n\nexport const selectProfileError = createSelector(\n  selectProfileState,\n  (state: ProfileState) => state.error\n);\n\nexport const selectUserPreferences = createSelector(\n  selectProfile,\n  (profile) => profile?.preferences\n);\n\nexport const selectUserCurrency = createSelector(\n  selectUserPreferences,\n  (preferences) => preferences?.defaultCurrency\n);\n\nexport const selectUserLanguage = createSelector(\n  selectUserPreferences,\n  (preferences) => preferences?.language\n);\n\nexport const selectUserTimezone = createSelector(\n  selectUserPreferences,\n  (preferences) => preferences?.timezone\n);\n\nexport const selectUserNotifications = createSelector(\n  selectUserPreferences,\n  (preferences) => preferences?.notifications\n);\n\nexport const selectUserEmailUpdates = createSelector(\n  selectUserPreferences,\n  (preferences) => preferences?.emailUpdates\n);\n\nexport const selectUserBudgetAlerts = createSelector(\n  selectUserPreferences,\n  (preferences) => preferences?.budgetAlerts\n); ","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Auth } from '@angular/fire/auth';\nimport { CreateGroupRequest } from 'src/app/util/models/splitwise.model';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/store/app.state';\nimport * as ProfileSelectors from 'src/app/store/profile/profile.selectors';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-create-group-dialog',\n  templateUrl: './create-group-dialog.component.html',\n  styleUrls: ['./create-group-dialog.component.scss']\n})\nexport class CreateGroupDialogComponent implements OnInit {\n  groupForm: FormGroup;\n  isSubmitting = false;\n  userCurrency$: Observable<string | undefined>;\n\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<CreateGroupDialogComponent>,\n    private auth: Auth,\n    private store: Store<AppState>\n  ) {\n    this.userCurrency$ = this.store.select(ProfileSelectors.selectUserCurrency);\n    this.groupForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\n      description: ['', [Validators.maxLength(200)]],\n      initialMembers: [[]]\n    });\n  }\n\n  ngOnInit(): void {\n    // Currency will be set from user's profile preference in onSubmit\n  }\n\n  async onSubmit(): Promise<void> {\n    if (this.groupForm.valid && !this.isSubmitting) {\n      this.isSubmitting = true;\n\n      try {\n        const formData = this.groupForm.value;\n        const userCurrency = this.store.select(ProfileSelectors.selectUserCurrency);\n        \n        // Get the current currency value\n        let currency = 'USD'; // Default fallback\n        userCurrency.subscribe(curr => {\n          if (curr) {\n            currency = curr;\n          }\n        }).unsubscribe();\n\n        const request: CreateGroupRequest = {\n          name: formData.name.trim(),\n          description: formData.description?.trim() || '',\n          currency: currency,\n          initialMembers: formData.initialMembers || []\n        };\n\n        // Return the request to be handled by the parent component via NgRx\n        this.dialogRef.close(request);\n      } catch (error) {\n        console.error('Error creating group:', error);\n      } finally {\n        this.isSubmitting = false;\n      }\n    } else {\n      this.groupForm.markAllAsTouched();\n    }\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  getErrorMessage(controlName: string): string {\n    const control = this.groupForm.get(controlName);\n    if (control?.hasError('required')) {\n      return `${controlName.charAt(0).toUpperCase() + controlName.slice(1)} is required`;\n    }\n    if (control?.hasError('minlength')) {\n      return `${controlName.charAt(0).toUpperCase() + controlName.slice(1)} must be at least ${control.errors?.['minlength'].requiredLength} characters`;\n    }\n    if (control?.hasError('maxlength')) {\n      return `${controlName.charAt(0).toUpperCase() + controlName.slice(1)} must not exceed ${control.errors?.['maxlength'].requiredLength} characters`;\n    }\n    return '';\n  }\n\n\n} ","<!-- Mobile Header -->\n<div class=\"mobile-header\">\n  <div class=\"header-content\">\n    <div class=\"header-left\">\n      <button \n        mat-icon-button \n        type=\"button\" \n        (click)=\"onCancel()\" \n        matTooltip=\"Close\" \n        class=\"close-button mobile-only\"\n      >\n        <mat-icon>arrow_back</mat-icon>\n      </button>\n      <h6 class=\"header-title\">\n        Create New Group\n      </h6>\n    </div>\n    \n    <!-- Desktop Close Button -->\n    <button \n      mat-icon-button \n      type=\"button\" \n      (click)=\"onCancel()\" \n      matTooltip=\"Close\" \n      class=\"close-button desktop-only\"\n    >\n      <mat-icon>close</mat-icon>\n    </button>\n    \n    <!-- Create Button -->\n    <button \n      mat-raised-button \n      color=\"primary\" \n      (click)=\"onSubmit()\" \n      [disabled]=\"groupForm.invalid || isSubmitting\" \n      matTooltip=\"Create Group\" \n      class=\"save-button\"\n    >\n      <mat-spinner *ngIf=\"isSubmitting\" diameter=\"16\"></mat-spinner>\n      {{ isSubmitting ? 'Creating...' : 'Create' }}\n    </button>\n  </div>\n</div>\n\n<!-- Mobile Form Content -->\n<div class=\"mobile-content\">\n  <div class=\"form-container\">\n    <form [formGroup]=\"groupForm\" (ngSubmit)=\"onSubmit()\" class=\"group-form\">\n      \n      <!-- Group Name Field -->\n      <div class=\"form-field\">\n        <label class=\"field-label\">\n          <mat-icon class=\"field-icon\">group</mat-icon>\n          Group Name *\n        </label>\n        <input \n          type=\"text\" \n          formControlName=\"name\" \n          placeholder=\"Enter group name\"\n          autofocus\n          maxlength=\"50\"\n          class=\"form-input\"\n        />\n        <div class=\"field-footer\">\n          @if(groupForm.get('name')?.hasError('required') && groupForm.get('name')?.touched) {\n            <p class=\"error-message\">Group name is required</p>\n          }\n          @if(groupForm.get('name')?.hasError('minlength') && groupForm.get('name')?.touched) {\n            <p class=\"error-message\">Group name must be at least 2 characters</p>\n          }\n          @if(groupForm.get('name')?.hasError('maxlength') && groupForm.get('name')?.touched) {\n            <p class=\"error-message\">Group name must not exceed 50 characters</p>\n          }\n          <span class=\"character-count\">\n            {{ groupForm.get('name')?.value?.length || 0 }}/50\n          </span>\n        </div>\n      </div>\n\n      <!-- Description Field -->\n      <div class=\"form-field\">\n        <label class=\"field-label\">\n          <mat-icon class=\"field-icon\">description</mat-icon>\n          Description (Optional)\n        </label>\n        <textarea \n          formControlName=\"description\" \n          placeholder=\"Describe your group\"\n          maxlength=\"200\"\n          rows=\"3\"\n          class=\"form-input\"\n        ></textarea>\n        <div class=\"field-footer\">\n          @if(groupForm.get('description')?.hasError('maxlength') && groupForm.get('description')?.touched) {\n            <p class=\"error-message\">Description must not exceed 200 characters</p>\n          }\n          <span class=\"character-count\">\n            {{ groupForm.get('description')?.value?.length || 0 }}/200\n          </span>\n        </div>\n      </div>\n\n      <!-- Info Section -->\n      <div class=\"info-section\">\n        <mat-icon class=\"info-icon\">info</mat-icon>\n        <div class=\"info-content\">\n          <h4>What happens next?</h4>\n          <ul>\n            <li>You'll be added as the group admin</li>\n            <li>You can invite friends by email</li>\n            <li>Start adding shared expenses</li>\n            <li>Track who owes what to whom</li>\n          </ul>\n        </div>\n      </div>\n\n      <!-- Bottom Spacing for Mobile -->\n      <div class=\"bottom-spacing\"></div>\n    </form>\n  </div>\n</div> ","import { createAction, props } from '@ngrx/store';\nimport { SplitwiseGroup, GroupInvitation, SplitTransaction, SplitSettlement, CreateGroupRequest, AddMemberRequest, CreateSplitTransactionRequest } from '../../../util/models/splitwise.model';\n\n// Load Groups\nexport const loadGroups = createAction('[Splitwise] Load Groups');\nexport const loadGroupsSuccess = createAction(\n  '[Splitwise] Load Groups Success',\n  props<{ groups: SplitwiseGroup[] }>()\n);\nexport const loadGroupsFailure = createAction(\n  '[Splitwise] Load Groups Failure',\n  props<{ error: string }>()\n);\n\n// Load Group by ID\nexport const loadGroupById = createAction(\n  '[Splitwise] Load Group by ID',\n  props<{ groupId: string }>()\n);\nexport const loadGroupByIdSuccess = createAction(\n  '[Splitwise] Load Group by ID Success',\n  props<{ group: SplitwiseGroup }>()\n);\nexport const loadGroupByIdFailure = createAction(\n  '[Splitwise] Load Group by ID Failure',\n  props<{ error: string }>()\n);\n\n// Load Invitations\nexport const loadInvitations = createAction('[Splitwise] Load Invitations');\nexport const loadInvitationsSuccess = createAction(\n  '[Splitwise] Load Invitations Success',\n  props<{ invitations: GroupInvitation[] }>()\n);\nexport const loadInvitationsFailure = createAction(\n  '[Splitwise] Load Invitations Failure',\n  props<{ error: string }>()\n);\n\n// Create Group\nexport const createGroup = createAction(\n  '[Splitwise] Create Group',\n  props<{ request: CreateGroupRequest }>()\n);\nexport const createGroupSuccess = createAction(\n  '[Splitwise] Create Group Success',\n  props<{ group: SplitwiseGroup }>()\n);\nexport const createGroupFailure = createAction(\n  '[Splitwise] Create Group Failure',\n  props<{ error: string }>()\n);\n\n// Add Member\nexport const addMember = createAction(\n  '[Splitwise] Add Member',\n  props<{ groupId: string; request: AddMemberRequest }>()\n);\nexport const addMemberSuccess = createAction(\n  '[Splitwise] Add Member Success',\n  props<{ group: SplitwiseGroup }>()\n);\nexport const addMemberFailure = createAction(\n  '[Splitwise] Add Member Failure',\n  props<{ error: string }>()\n);\n\n// Accept Invitation\nexport const acceptInvitation = createAction(\n  '[Splitwise] Accept Invitation',\n  props<{ invitationId: string }>()\n);\nexport const acceptInvitationSuccess = createAction(\n  '[Splitwise] Accept Invitation Success',\n  props<{ invitationId: string }>()\n);\nexport const acceptInvitationFailure = createAction(\n  '[Splitwise] Accept Invitation Failure',\n  props<{ error: string }>()\n);\n\n// Decline Invitation\nexport const declineInvitation = createAction(\n  '[Splitwise] Decline Invitation',\n  props<{ invitationId: string }>()\n);\nexport const declineInvitationSuccess = createAction(\n  '[Splitwise] Decline Invitation Success',\n  props<{ invitationId: string }>()\n);\nexport const declineInvitationFailure = createAction(\n  '[Splitwise] Decline Invitation Failure',\n  props<{ error: string }>()\n);\n\n// Delete Group\nexport const deleteGroup = createAction(\n  '[Splitwise] Delete Group',\n  props<{ groupId: string }>()\n);\nexport const deleteGroupSuccess = createAction(\n  '[Splitwise] Delete Group Success',\n  props<{ groupId: string }>()\n);\nexport const deleteGroupFailure = createAction(\n  '[Splitwise] Delete Group Failure',\n  props<{ error: string }>()\n);\n\n// Select Group\nexport const selectGroup = createAction(\n  '[Splitwise] Select Group',\n  props<{ group: SplitwiseGroup | null }>()\n);\n\n// Load Transactions\nexport const loadTransactions = createAction(\n  '[Splitwise] Load Transactions',\n  props<{ groupId: string }>()\n);\nexport const loadTransactionsSuccess = createAction(\n  '[Splitwise] Load Transactions Success',\n  props<{ transactions: SplitTransaction[] }>()\n);\nexport const loadTransactionsFailure = createAction(\n  '[Splitwise] Load Transactions Failure',\n  props<{ error: string }>()\n);\n\n// Load Settlements\nexport const loadSettlements = createAction(\n  '[Splitwise] Load Settlements',\n  props<{ groupId: string }>()\n);\nexport const loadSettlementsSuccess = createAction(\n  '[Splitwise] Load Settlements Success',\n  props<{ settlements: SplitSettlement[] }>()\n);\nexport const loadSettlementsFailure = createAction(\n  '[Splitwise] Load Settlements Failure',\n  props<{ error: string }>()\n);\n\n// Create Split Transaction\nexport const createSplitTransaction = createAction(\n  '[Splitwise] Create Split Transaction',\n  props<{ request: CreateSplitTransactionRequest }>()\n);\nexport const createSplitTransactionSuccess = createAction(\n  '[Splitwise] Create Split Transaction Success',\n  props<{ transaction: SplitTransaction }>()\n);\nexport const createSplitTransactionFailure = createAction(\n  '[Splitwise] Create Split Transaction Failure',\n  props<{ error: string }>()\n);\n\n// Update Split Transaction\nexport const updateSplitTransaction = createAction(\n  '[Splitwise] Update Split Transaction',\n  props<{ groupId: string; transactionId: string; updates: any }>()\n);\nexport const updateSplitTransactionSuccess = createAction(\n  '[Splitwise] Update Split Transaction Success',\n  props<{ transaction: SplitTransaction }>()\n);\nexport const updateSplitTransactionFailure = createAction(\n  '[Splitwise] Update Split Transaction Failure',\n  props<{ error: string }>()\n);\n\n// Create Settlement\nexport const createSettlement = createAction(\n  '[Splitwise] Create Settlement',\n  props<{ groupId: string; fromUserId: string; toUserId: string; amount: number; notes?: string; originalTransactionId: string }>()\n);\nexport const createSettlementSuccess = createAction(\n  '[Splitwise] Create Settlement Success',\n  props<{ settlement: SplitSettlement }>()\n);\nexport const createSettlementFailure = createAction(\n  '[Splitwise] Create Settlement Failure',\n  props<{ error: string }>()\n);\n\n// Remove Member\nexport const removeMember = createAction(\n  '[Splitwise] Remove Member',\n  props<{ groupId: string; userId: string }>()\n);\nexport const removeMemberSuccess = createAction(\n  '[Splitwise] Remove Member Success',\n  props<{ groupId: string }>()\n);\nexport const removeMemberFailure = createAction(\n  '[Splitwise] Remove Member Failure',\n  props<{ error: string }>()\n);\n\n// Clear Error\nexport const clearError = createAction('[Splitwise] Clear Error'); ","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { SplitwiseState } from './splitwise.state';\n\nexport const selectSplitwiseFeature = createFeatureSelector<SplitwiseState>('splitwise');\n\nexport const selectSplitwiseState = createSelector(\n  selectSplitwiseFeature,\n  (state: SplitwiseState) => state\n);\n\nexport const selectGroups = createSelector(\n  selectSplitwiseFeature,\n  (state: SplitwiseState) => state.groups\n);\n\nexport const selectInvitations = createSelector(\n  selectSplitwiseFeature,\n  (state: SplitwiseState) => state.invitations\n);\n\nexport const selectTransactions = createSelector(\n  selectSplitwiseFeature,\n  (state: SplitwiseState) => state.transactions\n);\n\nexport const selectSettlements = createSelector(\n  selectSplitwiseFeature,\n  (state: SplitwiseState) => state.settlements\n);\n\nexport const selectSelectedGroup = createSelector(\n  selectSplitwiseFeature,\n  (state: SplitwiseState) => state.selectedGroup\n);\n\nexport const selectLoading = createSelector(\n  selectSplitwiseFeature,\n  (state: SplitwiseState) => state.loading\n);\n\nexport const selectError = createSelector(\n  selectSplitwiseFeature,\n  (state: SplitwiseState) => state.error\n);\n\n// Computed selectors\nexport const selectActiveGroups = createSelector(\n  selectGroups,\n  (groups) => groups.filter(group => group.isActive)\n);\n\nexport const selectPendingInvitations = createSelector(\n  selectInvitations,\n  (invitations) => invitations.filter(invitation => invitation.status === 'pending')\n);\n\nexport const selectGroupTransactions = createSelector(\n  selectTransactions,\n  selectSelectedGroup,\n  (transactions, selectedGroup) => {\n    if (!selectedGroup) return [];\n    return transactions.filter(t => t.groupId === selectedGroup.id);\n  }\n);\n\nexport const selectGroupSettlements = createSelector(\n  selectSettlements,\n  selectSelectedGroup,\n  (settlements, selectedGroup) => {\n    if (!selectedGroup) return [];\n    return settlements.filter(s => s.groupId === selectedGroup.id);\n  }\n);\n\nexport const selectGroupMemberCount = createSelector(\n  selectSelectedGroup,\n  (group) => group?.members.filter(member => member.isActive).length || 0\n);\n\nexport const selectCurrentUserRole = createSelector(\n  selectSelectedGroup,\n  (group) => {\n    // This would need to be enhanced to get the current user from auth state\n    // For now, returning empty string\n    return '';\n  }\n); ","import { Timestamp } from '@angular/fire/firestore';\nimport { TransactionType, SyncStatus } from '../config/enums';\n\n/**\n * Splitwise Group interface\n */\nexport interface SplitwiseGroup {\n  id?: string;\n  name: string;\n  description?: string;\n  createdBy: string;\n  members: GroupMember[];\n  currency: string;\n  createdAt: Date | Timestamp;\n  updatedAt: Date | Timestamp;\n  isActive: boolean;\n  syncStatus: SyncStatus;\n}\n\n/**\n * Group member interface\n */\nexport interface GroupMember {\n  userId: string;\n  email: string;\n  displayName: string;\n  photoURL?: string;\n  role: GroupMemberRole;\n  joinedAt: Date | Timestamp;\n  isActive: boolean;\n}\n\n/**\n * Group member roles\n */\nexport enum GroupMemberRole {\n  ADMIN = 'admin',\n  MEMBER = 'member'\n}\n\n/**\n * Split transaction interface\n */\nexport interface SplitTransaction {\n  id?: string;\n  groupId: string;\n  originalTransactionId?: string; // Reference to the original transaction\n  amount: number;\n  createdBy: string;\n  splits: TransactionSplit[];\n  totalAmount: number;\n  currency: string;\n  createdAt: Date | Timestamp;\n  updatedAt: Date | Timestamp;\n  syncStatus: SyncStatus;\n}\n\n/**\n * Individual split within a transaction\n */\nexport interface TransactionSplit {\n  userId: string;\n  email: string;\n  displayName: string;\n  amount: number;\n  percentage: number;\n  isPaid: boolean;\n  paidBy?: string; // Who actually paid this amount\n  paidAt?: Date | Timestamp;\n}\n\n/**\n * Split settlement interface\n */\nexport interface SplitSettlement {\n  id?: string;\n  groupId: string;\n  originalTransactionId: string; // Reference to the original transaction for cleanup\n  fromUserId: string;\n  toUserId: string;\n  amount: number;\n  currency: string;\n  status: SettlementStatus;\n  notes?: string;\n  settledAt?: Date | Timestamp;\n  createdAt: Date | Timestamp;\n  updatedAt: Date | Timestamp;\n}\n\n/**\n * Settlement status\n */\nexport enum SettlementStatus {\n  PENDING = 'pending',\n  COMPLETED = 'completed',\n  CANCELLED = 'cancelled'\n}\n\n/**\n * Group invitation interface\n */\nexport interface GroupInvitation {\n  id?: string;\n  groupId: string;\n  groupName: string;\n  invitedBy: string;\n  invitedByEmail: string;\n  invitedByDisplayName: string;\n  invitedEmail: string;\n  status: InvitationStatus;\n  expiresAt: Date | Timestamp;\n  createdAt: Date | Timestamp;\n  updatedAt: Date | Timestamp;\n}\n\n/**\n * Invitation status\n */\nexport enum InvitationStatus {\n  PENDING = 'pending',\n  ACCEPTED = 'accepted',\n  DECLINED = 'declined',\n  EXPIRED = 'expired'\n}\n\n/**\n * Group activity log\n */\nexport interface GroupActivity {\n  id?: string;\n  groupId: string;\n  userId: string;\n  userEmail: string;\n  userDisplayName: string;\n  action: GroupActivityAction;\n  details: any;\n  timestamp: Date | Timestamp;\n}\n\n/**\n * Group activity actions\n */\nexport enum GroupActivityAction {\n  GROUP_CREATED = 'group_created',\n  MEMBER_JOINED = 'member_joined',\n  MEMBER_LEFT = 'member_left',\n  TRANSACTION_ADDED = 'transaction_added',\n  TRANSACTION_UPDATED = 'transaction_updated',\n  TRANSACTION_DELETED = 'transaction_deleted',\n  SETTLEMENT_COMPLETED = 'settlement_completed',\n  INVITATION_SENT = 'invitation_sent',\n  INVITATION_ACCEPTED = 'invitation_accepted',\n  INVITATION_DECLINED = 'invitation_declined'\n}\n\n/**\n * Group summary statistics\n */\nexport interface GroupSummary {\n  groupId: string;\n  totalTransactions: number;\n  totalAmount: number;\n  averageAmount: number;\n  memberCount: number;\n  activeMemberCount: number;\n  pendingSettlements: number;\n  lastActivity: Date | Timestamp;\n}\n\n/**\n * Member balance summary\n */\nexport interface MemberBalance {\n  userId: string;\n  email: string;\n  displayName: string;\n  totalPaid: number;\n  totalOwed: number;\n  netBalance: number;\n  transactionCount: number;\n}\n\n/**\n * Create group request\n */\nexport interface CreateGroupRequest {\n  name: string;\n  description?: string;\n  currency: string;\n  initialMembers?: string[]; // Array of email addresses\n}\n\n/**\n * Update group request\n */\nexport interface UpdateGroupRequest {\n  name?: string;\n  description?: string;\n  currency?: string;\n}\n\n/**\n * Add member request\n */\nexport interface AddMemberRequest {\n  email: string;\n  role?: GroupMemberRole;\n}\n\n/**\n * Create split transaction request\n */\nexport interface CreateSplitTransactionRequest {\n  groupId: string;\n  originalTransactionId?: string; // Optional link to original transaction\n  amount: number;\n  splits: TransactionSplit [];\n}\n\n/**\n * Update split transaction request\n */\nexport interface UpdateSplitTransactionRequest {\n  payee?: string;\n  amount?: number;\n  type?: TransactionType;\n  date?: Date;\n  notes?: string;\n  categoryId?: string;\n  category?: string;\n  splits?: Omit<TransactionSplit, 'email' | 'displayName'>[];\n}\n\n/**\n * Settlement request\n */\nexport interface CreateSettlementRequest {\n  groupId: string;\n  originalTransactionId: string; // Reference to the original transaction\n  fromUserId: string;\n  toUserId: string;\n  amount: number;\n  notes?: string;\n} ","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\nimport { Auth } from '@angular/fire/auth';\nimport { SplitwiseGroup, AddMemberRequest, GroupMemberRole } from 'src/app/util/models/splitwise.model';\nimport { UserService } from 'src/app/util/service/user.service';\nimport { ConfirmDialogComponent } from 'src/app/util/components/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-add-member-dialog',\n  templateUrl: './add-member-dialog.component.html',\n  styleUrls: ['./add-member-dialog.component.scss']\n})\nexport class AddMemberDialogComponent implements OnInit {\n  memberForm: FormGroup;\n  isSubmitting = false;\n  group: SplitwiseGroup;\n  userExists = false;\n  checkingUser = false;\n\n  constructor(\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<AddMemberDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { group: SplitwiseGroup },\n    private auth: Auth,\n    private userService: UserService,\n    private dialog: MatDialog\n  ) {\n    this.group = data.group;\n    this.memberForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n\n  ngOnInit(): void {\n    // Focus on email field\n    setTimeout(() => {\n      const emailField = document.querySelector('input[formControlName=\"email\"]') as HTMLInputElement;\n      if (emailField) {\n        emailField.focus();\n      }\n    }, 100);\n  }\n\n  async onEmailChange(): Promise<void> {\n    const email = this.memberForm.get('email')?.value;\n\n    if (email && this.isEmailAlreadyMember(email)) {\n      this.memberForm.get('email')?.setErrors({ alreadyMember: true });\n      this.userExists = false;\n      return;\n    }\n\n    if (email && this.memberForm.get('email')?.valid) {\n      this.checkingUser = true;\n      try {\n        const user = await this.userService.findUserByEmail(email);\n        this.userExists = !!user;\n      } catch (error) {\n        console.error('Error checking user:', error);\n        this.userExists = false;\n      } finally {\n        this.checkingUser = false;\n      }\n    } else {\n      this.userExists = false;\n    }\n  }\n\n  async onSubmit(): Promise<void> {\n    if (this.memberForm.valid && !this.isSubmitting) {\n      this.isSubmitting = true;\n\n      try {\n        const formData = this.memberForm.value;\n        const request: AddMemberRequest = {\n          email: formData.email.trim().toLowerCase(),\n          role: GroupMemberRole.MEMBER\n        };\n\n        // Return the request to be handled by the parent component via NgRx\n        this.dialogRef.close(request);\n      } catch (error) {\n        console.error('Error adding member:', error);\n      } finally {\n        this.isSubmitting = false;\n      }\n    } else {\n      this.memberForm.markAllAsTouched();\n    }\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  getErrorMessage(controlName: string): string {\n    const control = this.memberForm.get(controlName);\n    if (control?.hasError('required')) {\n      return `${controlName.charAt(0).toUpperCase() + controlName.slice(1)} is required`;\n    }\n    if (control?.hasError('email')) {\n      return 'Please enter a valid email address';\n    }\n    if (control?.hasError('alreadyMember')) {\n      return 'This user is already a member of this group';\n    }\n    return '';\n  }\n\n  isEmailAlreadyMember(email: string): boolean {\n    return this.group.members.some(member =>\n      member.email.toLowerCase() === email.toLowerCase()\n    );\n  }\n\n  getRoleDisplayName(role: string): string {\n    const roleNames: { [key: string]: string } = {\n      'admin': 'Admin',\n      'member': 'Member'\n    };\n    return roleNames[role] || role;\n  }\n\n  getUserStatusText(): string {\n    if (this.checkingUser) {\n      return 'Checking if user exists...';\n    }\n    if (this.userExists) {\n      return '✓ User found in system - invitation will be sent immediately';\n    }\n    const email = this.memberForm.get('email')?.value;\n    if (email && this.memberForm.get('email')?.valid) {\n      return 'ℹ User not found - invitation will be sent when they register';\n    }\n    return '';\n  }\n\n  onDeleteMember(userId: string): void {\n    this.dialog.open(ConfirmDialogComponent, {\n      data: {\n        title: 'Delete Member',\n        message: 'Are you sure you want to delete this member? This action cannot be undone.',\n        confirmText: 'Delete',\n        cancelText: 'Cancel'\n      }\n    }).afterClosed().subscribe(result => {\n      if (result) {\n        this.dialogRef.close({ action: 'delete', userId });\n      }\n    });\n  }\n} ","<!-- Mobile Header -->\n<div class=\"mobile-header\">\n  <div class=\"header-content\">\n    <div class=\"header-left\">\n      <button \n        mat-icon-button \n        type=\"button\" \n        (click)=\"onCancel()\" \n        matTooltip=\"Close\" \n        class=\"close-button mobile-only\"\n      >\n        <mat-icon>arrow_back</mat-icon>\n      </button>\n      <h6 class=\"header-title\">\n        Add Member\n      </h6>\n    </div>\n    \n    <!-- Desktop Close Button -->\n    <button \n      mat-icon-button \n      type=\"button\" \n      (click)=\"onCancel()\" \n      matTooltip=\"Close\" \n      class=\"close-button desktop-only\"\n    >\n      <mat-icon>close</mat-icon>\n    </button>\n    \n    <!-- Save Button -->\n    <button \n      mat-raised-button \n      color=\"primary\" \n      (click)=\"onSubmit()\" \n      [disabled]=\"memberForm.invalid || isSubmitting\" \n      matTooltip=\"Add Member\" \n      class=\"save-button\"\n    >\n      <mat-spinner *ngIf=\"isSubmitting\" diameter=\"16\"></mat-spinner>\n      {{ isSubmitting ? 'Adding...' : 'Add' }}\n    </button>\n  </div>\n</div>\n\n<!-- Mobile Form Content -->\n<div class=\"mobile-content\">\n  <div class=\"form-container\">\n    <form [formGroup]=\"memberForm\" (ngSubmit)=\"onSubmit()\" class=\"member-form\">\n      \n      <!-- Email Field -->\n      <div class=\"form-field\">\n        <label class=\"field-label\">\n          <mat-icon class=\"field-icon\">email</mat-icon>\n          Email Address *\n        </label>\n        <input \n          type=\"email\" \n          formControlName=\"email\" \n          placeholder=\"Enter member's email address\"\n          (input)=\"onEmailChange()\"\n          autofocus\n          class=\"form-input\"\n        />\n        <div class=\"field-footer\">\n          @if(memberForm.get('email')?.hasError('required') && memberForm.get('email')?.touched) {\n            <p class=\"error-message\">Email is required</p>\n          }\n          @if(memberForm.get('email')?.hasError('email') && memberForm.get('email')?.touched) {\n            <p class=\"error-message\">Please enter a valid email address</p>\n          }\n          @if(memberForm.get('email')?.hasError('alreadyMember') && memberForm.get('email')?.touched) {\n            <p class=\"error-message\">This person is already a member of the group</p>\n          }\n          @if(getUserStatusText()) {\n            <p class=\"status-message\" [class.user-found]=\"userExists\" [class.user-not-found]=\"!userExists && !checkingUser\">\n              {{ getUserStatusText() }}\n            </p>\n          }\n        </div>\n      </div>\n\n\n\n      <!-- Current Members Section -->\n      <div class=\"form-field\">\n        <label class=\"field-label\">\n          <mat-icon class=\"field-icon\">people</mat-icon>\n          Current Members ({{ group.members.length }})\n        </label>\n        <div class=\"members-list\">\n          <div *ngFor=\"let member of group.members\" class=\"member-item\">\n            <div class=\"member-avatar\">\n              <img *ngIf=\"member.photoURL\" [src]=\"member.photoURL\" [alt]=\"member.displayName\">\n              <mat-icon *ngIf=\"!member.photoURL\">person</mat-icon>\n            </div>\n            <div class=\"member-details\">\n              <span class=\"member-name\">{{ member.displayName }}</span>\n              <span class=\"member-email\">{{ member.email }}</span>\n            </div>\n            <!-- delete member -->\n            <button mat-icon-button (click)=\"onDeleteMember(member.userId)\">\n              <mat-icon>delete</mat-icon>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- Bottom Spacing for Mobile -->\n      <div class=\"bottom-spacing\"></div>\n    </form>\n  </div>\n</div> ","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Auth } from '@angular/fire/auth';\nimport { SplitwiseGroup } from 'src/app/util/models/splitwise.model';\nimport { AddMemberDialogComponent } from '../add-member-dialog/add-member-dialog.component';\n\n@Component({\n  selector: 'app-group',\n  templateUrl: './group.component.html',\n  styleUrls: ['./group.component.scss']\n})\nexport class GroupComponent {\n  @Input() group!: SplitwiseGroup;\n  @Input() isSelected: boolean = false;\n  @Input() isMobile: boolean = false;\n  @Output() groupSelected = new EventEmitter<SplitwiseGroup>();\n  @Output() addMember = new EventEmitter<{ groupId: string, request: any }>();\n  @Output() deleteGroup = new EventEmitter<SplitwiseGroup>();\n\n  constructor(\n    private router: Router,\n    private auth: Auth,\n    private dialog: MatDialog\n  ) {}\n\n  onGroupClick(): void {\n    // Navigate to group details page\n    this.router.navigate(['dashboard/splitwise/group', this.group.id]);\n  }\n\n  openAddMemberDialog(event: Event): void {\n    event.stopPropagation();\n    \n    const dialogRef = this.dialog.open(AddMemberDialogComponent, {\n      width: this.isMobile ? '90vw' : '400px',\n      maxWidth: this.isMobile ? '400px' : '90vw',\n      data: { group: this.group },\n      disableClose: true,\n      panelClass: 'mobile-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.addMember.emit({ \n          groupId: this.group.id!, \n          request: result \n        });\n      }\n    });\n  }\n\n  onDeleteGroup(event: Event): void {\n    event.stopPropagation();\n    this.deleteGroup.emit(this.group);\n  }\n\n  getGroupMemberCount(): number {\n    return this.group.members.filter(member => member.isActive).length;\n  }\n\n  getCurrentUserRole(): string {\n    const currentUser = this.auth.currentUser;\n    if (!currentUser) return '';\n\n    const member = this.group.members.find(m => m.userId === currentUser.uid);\n    return member?.role || '';\n  }\n\n  canManageGroup(): boolean {\n    const role = this.getCurrentUserRole();\n    return role === 'admin' || role === 'owner';\n  }\n\n  formatDate(date: Date | any): string {\n    if (!date) return '';\n    const dateObj = date.toDate ? date.toDate() : new Date(date);\n    return dateObj.toLocaleDateString();\n  }\n\n  formatCurrency(amount: number, currency: string = 'USD'): string {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: currency\n    }).format(amount);\n  }\n} ","<div class=\"group-item\"\n     [class.selected]=\"isSelected\"\n     [class.mobile]=\"isMobile\"\n     (click)=\"onGroupClick()\">\n  <div class=\"group-info\">\n    <div class=\"group-header\">\n      <div class=\"group-title-section\">\n        <h3 class=\"group-name\">{{ group.name | titlecase }}</h3>\n        <div class=\"group-meta\">\n          <span class=\"member-count\">\n            <mat-icon>people</mat-icon>\n            <span class=\"member-text\">{{ getGroupMemberCount() }} members</span>\n          </span>\n          <span class=\"created-date\">Created {{ formatDate(group.createdAt) }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"group-actions\">\n    <button \n      mat-icon-button \n      [matMenuTriggerFor]=\"groupMenu\"\n      (click)=\"$event.stopPropagation()\"\n      class=\"menu-trigger\"\n      [attr.aria-label]=\"'More options for ' + group.name\">\n      <mat-icon>more_vert</mat-icon>\n    </button>\n    <mat-menu #groupMenu=\"matMenu\" class=\"group-menu\">\n      <button mat-menu-item (click)=\"openAddMemberDialog($event)\" class=\"menu-item\">\n        <mat-icon>person_add</mat-icon>\n        <span>Add Member</span>\n      </button>\n      <mat-divider></mat-divider>\n      <button \n        mat-menu-item  \n        (click)=\"onDeleteGroup($event)\"\n        class=\"menu-item delete-action\">\n        <mat-icon>delete</mat-icon>\n        <span>Delete Group</span>\n      </button>\n    </mat-menu>\n  </div>\n</div> ","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Store } from '@ngrx/store';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Auth } from '@angular/fire/auth';\nimport { NotificationService } from 'src/app/util/service/notification.service';\nimport { SplitwiseGroup, GroupInvitation } from 'src/app/util/models/splitwise.model';\nimport { CreateGroupDialogComponent } from './create-group-dialog/create-group-dialog.component';\n\n// NgRx\nimport { AppState } from '../../store/app.state';\nimport * as SplitwiseActions from './store/splitwise.actions';\nimport { selectSplitwiseState } from './store/splitwise.selectors';\nimport { ConfirmDialogComponent } from 'src/app/util/components/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-splitwise',\n  templateUrl: './splitwise.component.html',\n  styleUrls: ['./splitwise.component.scss']\n})\nexport class SplitwiseComponent implements OnInit, OnDestroy {\n  groups: SplitwiseGroup[] = [];\n  invitations: GroupInvitation[] = [];\n  isMobile: boolean = false;\n  currentUser: any = null;\n  error: string | null = null;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private auth: Auth,\n    private store: Store<AppState>,\n    private dialog: MatDialog,\n    private notificationService: NotificationService\n  ) {\n    // Observe breakpoints for mobile detection\n    this.breakpointObserver.observe([Breakpoints.Handset])\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(result => {\n        this.isMobile = result.matches;\n      });\n  }\n\n  ngOnInit(): void {\n    this.currentUser = this.auth.currentUser;\n    this.loadData();\n    this.subscribeToStore();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private subscribeToStore(): void {\n    this.store.select(selectSplitwiseState)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(state => {\n        this.groups = state.groups;\n        this.invitations = state.invitations;\n        this.error = state.error;\n\n        // Show error notification if there's an error\n        if (this.error) {\n          this.notificationService.error(this.error);\n          this.store.dispatch(SplitwiseActions.clearError());\n        }\n      });\n  }\n\n  loadData(): void {\n    this.store.dispatch(SplitwiseActions.loadGroups());\n    this.store.dispatch(SplitwiseActions.loadInvitations());\n  }\n\n  openCreateGroupDialog(): void {\n    const dialogRef = this.dialog.open(CreateGroupDialogComponent, {\n      width: this.isMobile ? '90vw' : '500px',\n      maxWidth: this.isMobile ? '500px' : '90vw',\n      disableClose: true,\n      panelClass: 'mobile-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe((result: any) => {\n      if (result) {\n        this.store.dispatch(SplitwiseActions.createGroup({ request: result }));\n      }\n    });\n  }\n\n\n\n  handleAddMember(data: { groupId: string, request: any }): void {\n    this.store.dispatch(SplitwiseActions.addMember(data));\n  }\n\n  acceptInvitation(invitation: GroupInvitation): void {\n    this.store.dispatch(SplitwiseActions.acceptInvitation({ invitationId: invitation.id! }));\n  }\n\n  declineInvitation(invitation: GroupInvitation): void {\n    this.store.dispatch(SplitwiseActions.declineInvitation({ invitationId: invitation.id! }));\n  }\n\n\n\n  deleteGroup(group: SplitwiseGroup): void {\n    this.dialog.open(ConfirmDialogComponent, {\n      width: '300px',\n      data: {\n        title: 'Delete Group',\n        message: `Are you sure you want to delete the group \"${group.name}\"?`,\n        confirmText: 'Delete',\n        cancelText: 'Cancel',\n      },\n    }).afterClosed().subscribe((result: any) => {   \n      if (result) {\n        this.store.dispatch(SplitwiseActions.deleteGroup({ groupId: group.id! }));\n      }\n    });\n  }\n\n\n\n  formatDate(date: Date | any): string {\n    if (!date) return '';\n    const dateObj = date.toDate ? date.toDate() : new Date(date);\n    return dateObj.toLocaleDateString();\n  }\n\n  formatCurrency(amount: number, currency: string = 'USD'): string {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: currency\n    }).format(amount);\n  }\n} ","<div class=\"splitwise-container\">\n  <!-- Header -->\n  <div class=\"header\">\n    <div class=\"header-content\">\n      <div class=\"title-section\">\n        <mat-icon class=\"title-icon\">group</mat-icon>\n        <h1 class=\"title\">Splitwise</h1>\n        <p class=\"subtitle\">Split expenses with friends and family</p>\n      </div>\n      <div class=\"header-actions\">\n        <button \n          mat-raised-button \n          color=\"primary\" \n          (click)=\"openCreateGroupDialog()\"\n          class=\"create-group-btn\">\n          <mat-icon>add</mat-icon>\n          Create Group\n        </button>\n      </div>\n    </div>\n  </div>\n\n\n  <!-- Main Content -->\n  <div class=\"main-content\">\n    <!-- Invitations Section -->\n    <div *ngIf=\"invitations.length > 0\" class=\"invitations-section\">\n      <mat-card class=\"invitations-card\">\n        <mat-card-header>\n          <mat-card-title>\n            <mat-icon>mail</mat-icon>\n            Pending Invitations\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"invitations-list\">\n            @for (invitation of invitations; track invitation.id) {\n            <div class=\"invitation-item\">\n              <div class=\"invitation-info\">\n                <div class=\"invitation-details\">\n                  <h4>{{ invitation.groupName }}</h4>\n                  <p>Invited by {{ invitation.invitedByDisplayName }}</p>\n                  <small>{{ formatDate(invitation.createdAt) }}</small>\n                </div>\n                <div class=\"invitation-actions\">\n                  <button \n                    mat-button \n                    color=\"primary\" \n                    (click)=\"acceptInvitation(invitation)\"\n                    class=\"accept-btn\">\n                    <mat-icon>check</mat-icon>\n                    Accept\n                  </button>\n                  <button \n                    mat-button \n                    color=\"warn\" \n                    (click)=\"declineInvitation(invitation)\"\n                    class=\"decline-btn\">\n                    <mat-icon>close</mat-icon>\n                    Decline\n                  </button>\n                </div>\n              </div>\n            </div>\n            }\n          </div>\n        </mat-card-content>\n      </mat-card>\n    </div>\n\n    <!-- Groups Section -->\n    <div class=\"groups-section\">\n      <!-- Groups List -->\n      <div class=\"groups-list\">\n        @for (group of groups; track group.id) {\n        <app-group\n          [group]=\"group\"\n          [isSelected]=\"false\"\n          [isMobile]=\"isMobile\"\n          (addMember)=\"handleAddMember($event)\"\n          (deleteGroup)=\"deleteGroup($event)\">\n        </app-group>\n        }\n      </div>\n\n\n    </div>\n  </div>\n</div> ","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SplitTransaction, TransactionSplit } from '../../../util/models/splitwise.model';\n\nexport interface EditTransactionDialogData {\n  transaction: SplitTransaction;\n  groupMembers: any[];\n}\n\n@Component({\n  selector: 'app-edit-transaction-dialog',\n  templateUrl: './edit-transaction-dialog.component.html',\n  styleUrls: ['./edit-transaction-dialog.component.scss']\n})\nexport class EditTransactionDialogComponent implements OnInit {\n  editForm!: FormGroup;\n  transaction: SplitTransaction;\n  groupMembers: any[];\n  totalAmount: number = 0;\n  splitMode: 'percentage' | 'amount' = 'percentage';\n  isSubmitting: boolean = false;\n  Math = Math; // Make Math available in template\n\n  constructor(\n    private fb: FormBuilder,\n    private dialogRef: MatDialogRef<EditTransactionDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: EditTransactionDialogData\n  ) {\n    this.transaction = data.transaction;\n    this.groupMembers = data.groupMembers;\n    this.totalAmount = this.transaction.totalAmount;\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  initForm(): void {\n    this.editForm = this.fb.group({\n      totalAmount: [this.transaction.totalAmount, [Validators.required, Validators.min(0.01)]],\n      splits: this.fb.array([])\n    });\n\n    // Initialize splits form array\n    this.transaction.splits.forEach(split => {\n      this.addSplit(split);\n    });\n\n    // Watch for total amount changes\n    this.editForm.get('totalAmount')?.valueChanges.subscribe(newTotal => {\n      this.totalAmount = newTotal;\n      this.updateSplitPercentages();\n    });\n  }\n\n  get splitsArray(): FormArray {\n    return this.editForm.get('splits') as FormArray;\n  }\n\n  addSplit(existingSplit?: TransactionSplit): void {\n    const splitGroup = this.fb.group({\n      userId: [existingSplit?.userId || '', Validators.required],\n      displayName: [existingSplit?.displayName || '', Validators.required],\n      email: [existingSplit?.email || '', Validators.required],\n      amount: [existingSplit?.amount || 0, [Validators.required, Validators.min(0)]],\n      percentage: [existingSplit?.percentage || 0, [Validators.required, Validators.min(0), Validators.max(100)]],\n      isPaid: [existingSplit?.isPaid || false]\n    });\n\n    this.splitsArray.push(splitGroup);\n\n    // Watch for amount changes to update percentage\n    splitGroup.get('amount')?.valueChanges.subscribe(amount => {\n      if (this.totalAmount > 0 && amount !== null && amount !== undefined) {\n        const percentage = (amount / this.totalAmount) * 100;\n        splitGroup.patchValue({ percentage: Math.round(percentage * 100) / 100 }, { emitEvent: false });\n      }\n    });\n\n    // Watch for percentage changes to update amount\n    splitGroup.get('percentage')?.valueChanges.subscribe(percentage => {\n      if (percentage !== null && percentage !== undefined) {\n        const amount = (percentage / 100) * this.totalAmount;\n        splitGroup.patchValue({ amount: Math.round(amount * 100) / 100 }, { emitEvent: false });\n      }\n    });\n  }\n\n  removeSplit(index: number): void {\n    this.splitsArray.removeAt(index);\n    this.updateSplitPercentages();\n  }\n\n  updateSplitPercentages(): void {\n    const splits = this.splitsArray.controls;\n    splits.forEach(split => {\n      const amount = split.get('amount')?.value || 0;\n      if (this.totalAmount > 0 && amount !== null && amount !== undefined) {\n        const percentage = (amount / this.totalAmount) * 100;\n        split.patchValue({ percentage: Math.round(percentage * 100) / 100 }, { emitEvent: false });\n      }\n    });\n  }\n\n  updateSplitAmounts(): void {\n    const splits = this.splitsArray.controls;\n    splits.forEach(split => {\n      const percentage = split.get('percentage')?.value || 0;\n      if (percentage !== null && percentage !== undefined) {\n        const amount = (percentage / 100) * this.totalAmount;\n        split.patchValue({ amount: Math.round(amount * 100) / 100 }, { emitEvent: false });\n      }\n    });\n  }\n\n  addMemberSplit(member: any): void {\n    // Check if member is already added\n    const existingMember = this.splitsArray.controls.find(control => \n      control.get('userId')?.value === member.userId\n    );\n\n    if (!existingMember) {\n      const splitGroup = this.fb.group({\n        userId: [member.userId, Validators.required],\n        displayName: [member.displayName],\n        email: [member.email, Validators.required],\n        amount: [0, [Validators.required, Validators.min(0)]],\n        percentage: [0, [Validators.required, Validators.min(0), Validators.max(100)]],\n        isPaid: [false]\n      });\n\n      this.splitsArray.push(splitGroup);\n      this.updateSplitPercentages();\n    }\n  }\n\n  getAvailableMembers(): any[] {\n    const selectedUserIds = this.splitsArray.controls.map(control => control.get('userId')?.value);\n    return this.groupMembers.filter(member => !selectedUserIds.includes(member.userId));\n  }\n\n  getTotalPercentage(): number {\n    return this.splitsArray.controls.reduce((total, control) => {\n      return total + (control.get('percentage')?.value || 0);\n    }, 0);\n  }\n\n  getTotalSplitAmount(): number {\n    return this.splitsArray.controls.reduce((total, control) => {\n      return total + (control.get('amount')?.value || 0);\n    }, 0);\n  }\n\n  isFormValid(): boolean {\n    const totalPercentage = this.getTotalPercentage();\n    const formValid = this.editForm.valid;\n    \n    // Only require percentage to equal 100%, allow unequal amounts\n    return formValid && Math.abs(totalPercentage - 100) < 0.01;\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSave(): void {\n    if (this.isFormValid()) {\n      const formValue = this.editForm.value;\n      const updatedTransaction: Partial<SplitTransaction> = {\n        totalAmount: formValue.totalAmount,\n        splits: formValue.splits.map((split: any) => ({\n          userId: split.userId,\n          displayName: split.displayName,\n          email: split.email,\n          amount: split.amount,\n          percentage: split.percentage,\n          isPaid: split.isPaid\n        }))\n      };\n\n      this.dialogRef.close(updatedTransaction);\n    }\n  }\n\n  formatCurrency(amount: number): string {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: this.transaction.currency || 'USD'\n    }).format(amount);\n  }\n\n  setSplitMode(mode: 'percentage' | 'amount'): void {\n    this.splitMode = mode;\n    if (mode === 'percentage') {\n      this.updateSplitPercentages();\n    } else {\n      this.updateSplitAmounts();\n    }\n  }\n\n\n\n  getMemberPhotoURL(userId: string): string | null {\n    const member = this.groupMembers.find(m => m.userId === userId);\n    return member?.photoURL || null;\n  }\n\n  getMemberInitials(displayName: string): string {\n    if (!displayName) return '?';\n    return displayName\n      .split(' ')\n      .map(name => name.charAt(0))\n      .join('')\n      .toUpperCase()\n      .slice(0, 2);\n  }\n} ","<!-- Mobile Header -->\n<div class=\"mobile-header\">\n  <div class=\"header-content\">\n    <div class=\"header-left\">\n      <button \n        mat-icon-button \n        type=\"button\" \n        (click)=\"onCancel()\" \n        matTooltip=\"Close\" \n        class=\"close-button mobile-only\"\n      >\n        <mat-icon>arrow_back</mat-icon>\n      </button>\n      <h6 class=\"header-title\">\n        Edit Transaction\n      </h6>\n    </div>\n    \n    <!-- Desktop Close Button -->\n    <button \n      mat-icon-button \n      type=\"button\" \n      (click)=\"onCancel()\" \n      matTooltip=\"Close\" \n      class=\"close-button desktop-only\"\n    >\n      <mat-icon>close</mat-icon>\n    </button>\n    \n    <!-- Save Button -->\n    <button \n      mat-raised-button \n      color=\"primary\" \n      (click)=\"onSave()\" \n      [disabled]=\"!isFormValid() || isSubmitting\" \n      matTooltip=\"Save Changes\" \n      class=\"save-button\"\n    >\n      <mat-spinner *ngIf=\"isSubmitting\" diameter=\"16\"></mat-spinner>\n      <mat-icon *ngIf=\"!isSubmitting\">check</mat-icon>\n      {{ isSubmitting ? 'Saving...' : 'Save' }}\n    </button>\n  </div>\n</div>\n\n<!-- Mobile Form Content -->\n<div class=\"mobile-content\">\n  <div class=\"form-container\">\n    <form [formGroup]=\"editForm\" (ngSubmit)=\"onSave()\" class=\"transaction-form\">\n      \n      <!-- Total Amount Field -->\n      <div class=\"form-field\">\n        <label class=\"field-label\">\n          <mat-icon class=\"field-icon\">attach_money</mat-icon>\n          Total Amount *\n        </label>\n        <div class=\"amount-input-container\">\n          <input \n            type=\"number\" \n            formControlName=\"totalAmount\" \n            step=\"0.01\" \n            min=\"0.01\"\n            placeholder=\"0.00\"\n            class=\"form-input\"\n          />\n          <span class=\"currency-suffix\">{{ transaction.currency || 'USD' }}</span>\n        </div>\n        <div class=\"field-footer\">\n          @if(editForm.get('totalAmount')?.hasError('required') && editForm.get('totalAmount')?.touched) {\n            <p class=\"error-message\">Total amount is required</p>\n          }\n          @if(editForm.get('totalAmount')?.hasError('min') && editForm.get('totalAmount')?.touched) {\n            <p class=\"error-message\">Amount must be greater than 0</p>\n          }\n        </div>\n      </div>\n\n      <!-- Split Mode Toggle -->\n      <div class=\"form-field\">\n        <label class=\"field-label\">\n          <mat-icon class=\"field-icon\">settings</mat-icon>\n          Split Mode\n        </label>\n        <div class=\"split-mode-selector\">\n          <button \n            type=\"button\"\n            (click)=\"setSplitMode('percentage')\"\n            class=\"mode-option\"\n            [class.selected]=\"splitMode === 'percentage'\"\n          >\n            <mat-icon>percent</mat-icon>\n            <span>Percentage</span>\n          </button>\n          <button \n            type=\"button\"\n            (click)=\"setSplitMode('amount')\"\n            class=\"mode-option\"\n            [class.selected]=\"splitMode === 'amount'\"\n          >\n            <mat-icon>account_balance_wallet</mat-icon>\n            <span>Amount</span>\n          </button>\n        </div>\n      </div>\n\n      <!-- Splits Section -->\n      <div class=\"form-field\">\n        <label class=\"field-label\">\n          <mat-icon class=\"field-icon\">people</mat-icon>\n          Splits\n          <span class=\"field-subtitle\">({{ getTotalPercentage() | number:'1.1-1' }}% • {{ formatCurrency(getTotalSplitAmount()) }})</span>\n        </label>\n        \n        <div class=\"split-balance-info\">\n          <div class=\"balance-item\" [class.over]=\"getTotalSplitAmount() > totalAmount\" [class.under]=\"getTotalSplitAmount() < totalAmount\">\n            <span class=\"balance-label\">Split Total:</span>\n            <span class=\"balance-amount\">{{ formatCurrency(getTotalSplitAmount()) }}</span>\n          </div>\n          <div class=\"balance-item\">\n            <span class=\"balance-label\">Transaction Total:</span>\n            <span class=\"balance-amount\">{{ formatCurrency(totalAmount) }}</span>\n          </div>\n          <div class=\"balance-difference\" *ngIf=\"Math.abs(getTotalSplitAmount() - totalAmount) > 0.01\">\n            <span class=\"difference-label\">Difference:</span>\n            <span class=\"difference-amount\" [class.positive]=\"getTotalSplitAmount() > totalAmount\" [class.negative]=\"getTotalSplitAmount() < totalAmount\">\n              {{ formatCurrency(Math.abs(getTotalSplitAmount() - totalAmount)) }}\n              <span class=\"difference-type\">{{ getTotalSplitAmount() > totalAmount ? 'Over' : 'Under' }}</span>\n            </span>\n          </div>\n        </div>\n        \n        <div formArrayName=\"splits\" class=\"splits-list\">\n          <div *ngFor=\"let split of splitsArray.controls; let i = index\" [formGroupName]=\"i\" class=\"split-item\">\n            <div class=\"split-header\">\n              <div class=\"member-info\">\n                <div class=\"member-avatar\">\n                  <img \n                    *ngIf=\"getMemberPhotoURL(split.get('userId')?.value)\" \n                    [src]=\"getMemberPhotoURL(split.get('userId')?.value)\" \n                    [alt]=\"split.get('displayName')?.value\"\n                    class=\"avatar-image\"\n                  />\n                  <div *ngIf=\"!getMemberPhotoURL(split.get('userId')?.value)\" class=\"avatar-placeholder\">\n                    {{ getMemberInitials(split.get('displayName')?.value) }}\n                  </div>\n                </div>\n                <div class=\"member-details\">\n                  <span class=\"member-name\">{{ split.get('displayName')?.value }}</span>\n                  <span class=\"member-email\">{{ split.get('email')?.value }}</span>\n                </div>\n              </div>\n              <button type=\"button\" mat-icon-button (click)=\"removeSplit(i)\" class=\"remove-btn\">\n                <mat-icon>delete</mat-icon>\n              </button>\n            </div>\n\n            <div class=\"split-controls\">\n              <div class=\"split-input-group\">\n                <div class=\"input-field\">\n                  <label class=\"input-label\">Amount</label>\n                  <div class=\"input-container\">\n                    <input \n                      type=\"number\" \n                      formControlName=\"amount\" \n                      step=\"0.01\" \n                      min=\"0\"\n                      placeholder=\"0.00\"\n                      class=\"split-input\"\n                    />\n                    <span class=\"input-suffix\">{{ transaction.currency || 'USD' }}</span>\n                  </div>\n                </div>\n\n                <div class=\"input-field\">\n                  <label class=\"input-label\">Percentage</label>\n                  <div class=\"input-container\">\n                    <input \n                      type=\"number\" \n                      formControlName=\"percentage\" \n                      step=\"0.1\" \n                      min=\"0\" \n                      max=\"100\"\n                      placeholder=\"0.0\"\n                      class=\"split-input\"\n                    />\n                    <span class=\"input-suffix\">%</span>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"paid-toggle\">\n                <label class=\"toggle-label\">\n                  <input \n                    type=\"checkbox\" \n                    formControlName=\"isPaid\"\n                    class=\"toggle-checkbox\"\n                  />\n                  <span class=\"toggle-text\">Paid</span>\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Add Member Section -->\n        <div class=\"add-member-section\" *ngIf=\"getAvailableMembers().length > 0\">\n          <div class=\"available-members\">\n            <div class=\"section-label\">Available Members</div>\n            <div class=\"members-grid\">\n              <button \n                *ngFor=\"let member of getAvailableMembers()\"\n                type=\"button\"\n                (click)=\"addMemberSplit(member)\"\n                class=\"member-option\"\n              >\n                <div class=\"member-avatar\">\n                  <img \n                    *ngIf=\"member.photoURL\" \n                    [src]=\"member.photoURL\" \n                    [alt]=\"member.displayName\"\n                    class=\"avatar-image\"\n                  />\n                  <div *ngIf=\"!member.photoURL\" class=\"avatar-placeholder\">\n                    {{ getMemberInitials(member.displayName) }}\n                  </div>\n                </div>\n                <div class=\"member-info\">\n                  <span class=\"member-name\">{{ member.displayName }}</span>\n                  <span class=\"member-email\">{{ member.email }}</span>\n                </div>\n                <mat-icon class=\"add-icon\">add</mat-icon>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Validation Messages -->\n      <div class=\"validation-section\" *ngIf=\"!isFormValid()\">\n        <div class=\"validation-item error\" *ngIf=\"Math.abs(getTotalPercentage() - 100) > 0.01\">\n          <mat-icon>error</mat-icon>\n          <span>Total percentage must equal 100% (currently {{ getTotalPercentage() | number:'1.1-1' }}%)</span>\n        </div>\n        <div class=\"validation-item warning\" *ngIf=\"Math.abs(getTotalSplitAmount() - totalAmount) > 0.01\">\n          <mat-icon>warning</mat-icon>\n          <span>Split amounts don't match transaction total ({{ formatCurrency(Math.abs(getTotalSplitAmount() - totalAmount)) }} {{ getTotalSplitAmount() > totalAmount ? 'over' : 'under' }})</span>\n        </div>\n      </div>\n\n      <!-- Bottom Spacing for Mobile -->\n      <div class=\"bottom-spacing\"></div>\n    </form>\n  </div>\n</div> ","import { Injectable } from '@angular/core';\nimport { Timestamp } from '@angular/fire/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DateService {\n\n  constructor() { }\n\n  /**\n   * Safely convert a Firebase timestamp to a Date object\n   * @param timestamp - Firebase timestamp or any date-like value\n   * @returns Date object or null if conversion fails\n   */\n  toDate(timestamp: any): Date | null {\n    try {\n      if (!timestamp) {\n        return null;\n      }\n\n      // If it's already a Date object\n      if (timestamp instanceof Date) {\n        return timestamp;\n      }\n\n      // If it's a Firebase Timestamp\n      if (timestamp instanceof Timestamp) {\n        return timestamp.toDate();\n      }\n\n      // If it's a Firestore timestamp object with seconds/nanoseconds\n      if (timestamp && typeof timestamp === 'object' && 'seconds' in timestamp) {\n        return new Timestamp(timestamp.seconds, timestamp.nanoseconds).toDate();\n      }\n\n      // If it's a number (milliseconds)\n      if (typeof timestamp === 'number') {\n        return new Date(timestamp);\n      }\n\n      // If it's a string, try to parse it\n      if (typeof timestamp === 'string') {\n        const parsed = new Date(timestamp);\n        return isNaN(parsed.getTime()) ? null : parsed;\n      }\n\n      // If it's an object with toDate method\n      if (timestamp && typeof timestamp.toDate === 'function') {\n        return timestamp.toDate();\n      }\n\n      return null;\n    } catch (error) {\n      console.error('Error converting timestamp to date:', error, timestamp);\n      return null;\n    }\n  }\n\n  /**\n   * Safely convert a date value to a Firebase Timestamp\n   * @param dateValue - Date object, string, or number\n   * @returns Firebase Timestamp or null if conversion fails\n   */\n  toTimestamp(dateValue: any): Timestamp | null {\n    try {\n      if (!dateValue) {\n        return null;\n      }\n\n      // If it's already a Timestamp\n      if (dateValue instanceof Timestamp) {\n        return dateValue;\n      }\n\n      // If it's a Date object\n      if (dateValue instanceof Date) {\n        return Timestamp.fromDate(dateValue);\n      }\n\n      // If it's a number (milliseconds)\n      if (typeof dateValue === 'number') {\n        return Timestamp.fromDate(new Date(dateValue));\n      }\n\n      // If it's a string, try to parse it\n      if (typeof dateValue === 'string') {\n        const date = new Date(dateValue);\n        if (!isNaN(date.getTime())) {\n          return Timestamp.fromDate(date);\n        }\n      }\n\n      // If it's an object with toDate method\n      if (dateValue && typeof dateValue.toDate === 'function') {\n        return Timestamp.fromDate(dateValue.toDate());\n      }\n\n      return null;\n    } catch (error) {\n      console.error('Error converting date to timestamp:', error, dateValue);\n      return null;\n    }\n  }\n\n  /**\n   * Safely convert a form date value to a Firebase Timestamp\n   * @param formDateValue - Date from form input\n   * @returns Firebase Timestamp or null if conversion fails\n   */\n  fromFormDate(formDateValue: any): Timestamp | null {\n    try {\n      if (!formDateValue) {\n        return null;\n      }\n\n      // Ensure it's a Date object first\n      const date = new Date(formDateValue);\n      if (isNaN(date.getTime())) {\n        return null;\n      }\n\n      return Timestamp.fromDate(date);\n    } catch (error) {\n      console.error('Error converting form date to timestamp:', error, formDateValue);\n      return null;\n    }\n  }\n\n  /**\n   * Get current date as Firebase Timestamp\n   * @returns Current date as Firebase Timestamp\n   */\n  now(): Timestamp {\n    return Timestamp.fromDate(new Date());\n  }\n\n  /**\n   * Compare two date values safely\n   * @param date1 - First date value\n   * @param date2 - Second date value\n   * @returns -1 if date1 < date2, 0 if equal, 1 if date1 > date2\n   */\n  compare(date1: any, date2: any): number {\n    const d1 = this.toDate(date1);\n    const d2 = this.toDate(date2);\n\n    if (!d1 && !d2) return 0;\n    if (!d1) return -1;\n    if (!d2) return 1;\n\n    return d1.getTime() - d2.getTime();\n  }\n\n  /**\n   * Sort array of objects by date field\n   * @param array - Array to sort\n   * @param dateField - Field name containing the date\n   * @param ascending - Sort order (default: false for newest first)\n   * @returns Sorted array\n   */\n  sortByDate<T>(array: T[], dateField: keyof T, ascending: boolean = false): T[] {\n    return [...array].sort((a, b) => {\n      const dateA = this.toDate(a[dateField]);\n      const dateB = this.toDate(b[dateField]);\n\n      if (!dateA && !dateB) return 0;\n      if (!dateA) return ascending ? -1 : 1;\n      if (!dateB) return ascending ? 1 : -1;\n\n      const comparison = dateA.getTime() - dateB.getTime();\n      return ascending ? comparison : -comparison;\n    });\n  }\n\n  /**\n   * Filter array by date range\n   * @param array - Array to filter\n   * @param dateField - Field name containing the date\n   * @param startDate - Start date\n   * @param endDate - End date\n   * @returns Filtered array\n   */\n  filterByDateRange<T>(array: T[], dateField: keyof T, startDate: any, endDate: any): T[] {\n    const start = this.toDate(startDate);\n    const end = this.toDate(endDate);\n\n    if (!start && !end) return array;\n\n    return array.filter(item => {\n      const itemDate = this.toDate(item[dateField]);\n      if (!itemDate) return false;\n\n      if (start && end) {\n        return itemDate >= start && itemDate <= end;\n      } else if (start) {\n        return itemDate >= start;\n      } else if (end) {\n        return itemDate <= end;\n      }\n\n      return true;\n    });\n  }\n\n  /**\n   * Check if a value is a valid date\n   * @param value - Value to check\n   * @returns True if valid date\n   */\n  isValidDate(value: any): boolean {\n    const date = this.toDate(value);\n    return date !== null && !isNaN(date.getTime());\n  }\n\n  /**\n   * Format date for display\n   * @param dateValue - Date value to format\n   * @param format - Format string (default: 'MM/DD/YYYY')\n   * @returns Formatted date string\n   */\n  formatDate(dateValue: any, format: string = 'MM/DD/YYYY'): string {\n    const date = this.toDate(dateValue);\n    if (!date) return 'Invalid Date';\n\n    const day = date.getDate().toString().padStart(2, '0');\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const year = date.getFullYear();\n\n    return format\n      .replace('MM', month)\n      .replace('DD', day)\n      .replace('YYYY', year.toString());\n  }\n\n  /**\n   * Get date as ISO string for form inputs\n   * @param dateValue - Date value\n   * @returns ISO date string (YYYY-MM-DD)\n   */\n  toISOString(dateValue: any): string {\n    const date = this.toDate(dateValue);\n    if (!date) return '';\n\n    return date.toISOString().split('T')[0];\n  }\n\n  /**\n   * Get relative time string (e.g., \"2 hours ago\")\n   * @param dateValue - Date value\n   * @returns Relative time string\n   */\n  getRelativeTime(dateValue: any): string {\n    const date = this.toDate(dateValue);\n    if (!date) return 'Unknown';\n\n    const now = new Date();\n    const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);\n\n    if (diffInSeconds < 60) {\n      return 'Just now';\n    } else if (diffInSeconds < 3600) {\n      const minutes = Math.floor(diffInSeconds / 60);\n      return `${minutes} minute${minutes > 1 ? 's' : ''} ago`;\n    } else if (diffInSeconds < 86400) {\n      const hours = Math.floor(diffInSeconds / 3600);\n      return `${hours} hour${hours > 1 ? 's' : ''} ago`;\n    } else if (diffInSeconds < 2592000) {\n      const days = Math.floor(diffInSeconds / 86400);\n      return `${days} day${days > 1 ? 's' : ''} ago`;\n    } else {\n      return this.formatDate(date);\n    }\n  }\n} ","import { Injectable } from '@angular/core';\nimport { APP_CONFIG } from '../config/config';\n\nexport interface HapticFeedbackOptions {\n  duration?: number;\n  pattern?: number[];\n  intensity?: 'light' | 'medium' | 'heavy';\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HapticFeedbackService {\n  private isSupported: boolean;\n  private isMobile: boolean;\n\n  constructor() {\n    this.isSupported = 'vibrate' in navigator;\n    this.isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n  }\n\n  /**\n   * Check if haptic feedback is supported\n   */\n  public isHapticSupported(): boolean {\n    return this.isSupported && this.isMobile;\n  }\n\n  /**\n   * Check if device is mobile\n   */\n  public isMobileDevice(): boolean {\n    return this.isMobile;\n  }\n\n  /**\n   * Light vibration (short)\n   */\n  public lightVibration(): void {\n    if (!this.isHapticSupported()) return;\n    \n    try {\n      navigator.vibrate(10);\n    } catch (error) {\n      console.warn('Vibration failed:', error);\n    }\n  }\n\n  /**\n   * Medium vibration (standard)\n   */\n  public mediumVibration(): void {\n    if (!this.isHapticSupported()) return;\n    \n    try {\n      navigator.vibrate(100);\n    } catch (error) {\n      console.warn('Vibration failed:', error);\n    }\n  }\n\n  /**\n   * Heavy vibration (long)\n   */\n  public heavyVibration(): void {\n    if (!this.isHapticSupported()) return;\n    \n    try {\n      navigator.vibrate(200);\n    } catch (error) {\n      console.warn('Vibration failed:', error);\n    }\n  }\n\n  /**\n   * Custom vibration pattern\n   */\n  public customVibration(pattern: number[]): void {\n    if (!this.isHapticSupported()) return;\n    \n    try {\n      navigator.vibrate(pattern);\n    } catch (error) {\n      console.warn('Vibration failed:', error);\n    }\n  }\n\n  /**\n   * Vibration with options\n   */\n  public vibrate(options: HapticFeedbackOptions = {}): void {\n    if (!this.isHapticSupported()) return;\n\n    const { duration = 100, pattern, intensity = 'medium' } = options;\n\n    try {\n      if (pattern) {\n        navigator.vibrate(pattern);\n      } else {\n        let vibrationDuration = duration;\n        \n        switch (intensity) {\n          case 'light':\n            vibrationDuration = 50;\n            break;\n          case 'medium':\n            vibrationDuration = 100;\n            break;\n          case 'heavy':\n            vibrationDuration = 200;\n            break;\n        }\n        \n        navigator.vibrate(vibrationDuration);\n      }\n    } catch (error) {\n      console.warn('Vibration failed:', error);\n    }\n  }\n\n  /**\n   * Success vibration pattern\n   */\n  public successVibration(): void {\n    if (!this.isHapticSupported()) return;\n    \n    try {\n      navigator.vibrate([50, 100, 50]);\n    } catch (error) {\n      console.warn('Vibration failed:', error);\n    }\n  }\n\n  /**\n   * Error vibration pattern\n   */\n  public errorVibration(): void {\n    if (!this.isHapticSupported()) return;\n    \n    try {\n      navigator.vibrate([100, 50, 100, 50, 100]);\n    } catch (error) {\n      console.warn('Vibration failed:', error);\n    }\n  }\n\n  /**\n   * Warning vibration pattern\n   */\n  public warningVibration(): void {\n    if (!this.isHapticSupported()) return;\n    \n    try {\n      navigator.vibrate([100, 100, 100]);\n    } catch (error) {\n      console.warn('Vibration failed:', error);\n    }\n  }\n\n  /**\n   * Button click vibration (standard for UI interactions)\n   */\n  public buttonClick(): void {\n    this.lightVibration();\n  }\n\n  /**\n   * Navigation vibration (for page transitions)\n   */\n  public navigationClick(): void {\n    this.mediumVibration();\n  }\n\n  /**\n   * Important action vibration (for critical actions)\n   */\n  public importantAction(): void {\n    this.heavyVibration();\n  }\n\n  /**\n   * Stop any ongoing vibration\n   */\n  public stopVibration(): void {\n    if (!this.isSupported) return;\n    \n    try {\n      navigator.vibrate(0);\n    } catch (error) {\n      console.warn('Stop vibration failed:', error);\n    }\n  }\n\n  /**\n   * Test vibration (for debugging)\n   */\n  public testVibration(): void {\n    if (!this.isHapticSupported()) {\n      console.log('Haptic feedback not supported on this device');\n      return;\n    }\n    \n    console.log('Testing haptic feedback...');\n    this.lightVibration();\n    \n    setTimeout(() => {\n      this.mediumVibration();\n    }, APP_CONFIG.PERFORMANCE.DEBOUNCE_DELAY); // Use config delay\n    \n    setTimeout(() => {\n      this.heavyVibration();\n    }, APP_CONFIG.PERFORMANCE.DEBOUNCE_DELAY * 2); // Use config delay * 2\n  }\n} ","import { Injectable } from '@angular/core';\nimport { Observable, from, of } from 'rxjs';\nimport { map, catchError, mergeMap } from 'rxjs/operators';\nimport { Firestore, collection, doc, getDocs, getDoc, addDoc, updateDoc, deleteDoc, setDoc, query, where, orderBy, limit, writeBatch } from '@angular/fire/firestore';\nimport { Timestamp } from '@angular/fire/firestore';\nimport { Auth, User } from '@angular/fire/auth';\nimport { SyncStatus } from '../../../util/config/enums';\n\nimport {\n  SplitwiseGroup,\n  GroupInvitation,\n  SplitTransaction,\n  SplitSettlement,\n  CreateGroupRequest,\n  AddMemberRequest,\n  CreateSplitTransactionRequest,\n  GroupMember,\n  GroupMemberRole,\n  MemberBalance,\n  SettlementStatus,\n  CreateSettlementRequest,\n  GroupSummary,\n  InvitationStatus,\n  TransactionSplit,\n  UpdateGroupRequest,\n  UpdateSplitTransactionRequest\n} from '../../../util/models/splitwise.model';\nimport { NotificationService } from 'src/app/util/service/notification.service';\nimport { DateService } from 'src/app/util/service/date.service';\nimport { UserService } from 'src/app/util/service/user.service';\nimport { HapticFeedbackService } from 'src/app/util/service/haptic-feedback.service';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SplitwiseService {\n\n  constructor(\n    private firestore: Firestore,\n    private auth: Auth,\n    private notificationService: NotificationService,\n    private dateService: DateService,\n    private userService: UserService,\n    private hapticFeedback: HapticFeedbackService\n  ) {}\n\n  // Groups - Now using common/shared groups\n  getUserGroups(userId: string): Observable<SplitwiseGroup[]> {\n    const currentUser = this.auth.currentUser;\n    if (!currentUser?.email) {\n      return of([]);\n    }\n\n    // Query groups where the current user is a member\n    const groupsRef = collection(this.firestore, 'splitwise-groups');\n    const q = query(\n      groupsRef,\n      where('isActive', '==', true),\n      orderBy('createdAt', 'desc')\n    );\n\n    return from(getDocs(q)).pipe(\n      map(snapshot => {\n        // Filter groups where the current user is a member\n        return snapshot.docs\n          .map(doc => ({\n            id: doc.id,\n            ...doc.data()\n          } as SplitwiseGroup))\n          .filter(group => \n            group.members.some(member => \n              member.email.toLowerCase() === currentUser.email?.toLowerCase() && member.isActive\n            )\n          );\n      }),\n      catchError(error => {\n        console.error('Error fetching user groups:', error);\n        return of([]);\n      })\n    );\n  }\n\n  getGroupById(groupId: string): Promise<SplitwiseGroup | null> {\n    return getDoc(doc(this.firestore, 'splitwise-groups', groupId)).then(doc => {\n      if (doc.exists()) {\n        return { id: doc.id, ...doc.data() } as SplitwiseGroup;\n      }\n      return null;\n    });\n  }\n\n  createGroup(request: CreateGroupRequest, userId: string): Observable<SplitwiseGroup> {\n    const currentUser = this.auth.currentUser;\n    if (!currentUser) {\n      throw new Error('User not authenticated');\n    }\n\n    const groupData: Omit<SplitwiseGroup, 'id'> = {\n      name: request.name,\n      description: request.description || '',\n      createdBy: userId,\n      members: [{\n        userId: currentUser.uid,\n        email: currentUser.email || '',\n        displayName: currentUser.displayName || currentUser.email || '',\n        photoURL: currentUser.photoURL || '',\n        role: GroupMemberRole.ADMIN,\n        joinedAt: new Date(),\n        isActive: true\n      }],\n      currency: request.currency || 'USD',\n      createdAt: new Date(),\n      updatedAt: new Date(),\n      isActive: true,\n      syncStatus: SyncStatus.SYNCED\n    };\n\n    const groupsRef = collection(this.firestore, 'splitwise-groups');\n    return from(addDoc(groupsRef, groupData)).pipe(\n      map(docRef => ({\n        id: docRef.id,\n        ...groupData\n      } as SplitwiseGroup))\n    );\n  }\n\n  deleteGroup(groupId: string, userId: string): Observable<void> {\n    const groupRef = doc(this.firestore, 'splitwise-groups', groupId);\n    return from(updateDoc(groupRef, { \n      isActive: false, \n      updatedAt: new Date() \n    }));\n  }\n\n  // Invitations\n  getUserInvitations(userId: string): Observable<GroupInvitation[]> {\n    const currentUser = this.auth.currentUser;\n    if (!currentUser?.email) {\n      return of([]);\n    }\n\n    // Use only common invitations collection\n    const invitationsRef = collection(this.firestore, 'splitwise-invitations');\n    const q = query(\n      invitationsRef,\n      where('invitedEmail', '==', currentUser.email),\n      where('status', '==', 'pending'),\n      orderBy('createdAt', 'desc')\n    );\n\n    return from(getDocs(q)).pipe(\n      map(snapshot => snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      } as GroupInvitation))),\n      map(invitations => invitations.filter(invitation => !this.isInvitationExpired(invitation))),\n      catchError(error => {\n        console.error('Error fetching invitations:', error);\n        return of([]);\n      })\n    );\n  }\n\n  /**\n   * Check if invitation is expired\n   */\n  private isInvitationExpired(invitation: GroupInvitation): boolean {\n    let expiresAt: Date;\n    \n    if (invitation.expiresAt instanceof Timestamp) {\n      expiresAt = invitation.expiresAt.toDate();\n    } else if (invitation.expiresAt instanceof Date) {\n      expiresAt = invitation.expiresAt;\n    } else {\n      expiresAt = new Date(invitation.expiresAt);\n    }\n    \n    return expiresAt < new Date();\n  }\n\n  /**\n   * Mark expired invitations as expired\n   */\n  async markExpiredInvitations(userId: string): Promise<void> {\n    try {\n      const currentUser = this.auth.currentUser;\n      if (!currentUser?.email) return;\n\n      // Use only common invitations collection\n      const invitationsRef = collection(this.firestore, 'splitwise-invitations');\n      const q = query(\n        invitationsRef,\n        where('invitedEmail', '==', currentUser.email),\n        where('status', '==', 'pending')\n      );\n\n      const snapshot = await getDocs(q);\n      const batch = writeBatch(this.firestore);\n      let hasUpdates = false;\n\n      snapshot.docs.forEach(doc => {\n        const invitation = doc.data() as GroupInvitation;\n        if (this.isInvitationExpired(invitation)) {\n          batch.update(doc.ref, { \n            status: InvitationStatus.EXPIRED, \n            updatedAt: new Date() \n          });\n          hasUpdates = true;\n        }\n      });\n\n      if (hasUpdates) {\n        await batch.commit();\n      }\n    } catch (error) {\n      console.error('Error marking expired invitations:', error);\n    }\n  }\n\n  async acceptInvitation(invitationId: string, userId: string): Promise<void> {\n    try {\n      const currentUser = this.auth.currentUser;\n      if (!currentUser) throw new Error('User not authenticated');\n\n      // Get the invitation from common collection\n      const invitationRef = doc(this.firestore, 'splitwise-invitations', invitationId);\n      const invitationDoc = await getDoc(invitationRef);\n      \n      if (!invitationDoc.exists()) {\n        throw new Error('Invitation not found');\n      }\n\n      const invitation = invitationDoc.data() as GroupInvitation;\n\n      // Update invitation status\n      await updateDoc(invitationRef, { \n        status: InvitationStatus.ACCEPTED, \n        updatedAt: new Date() \n      });\n\n      // Get the group from the common collection\n      const groupRef = doc(this.firestore, 'splitwise-groups', invitation.groupId);\n      const groupDoc = await getDoc(groupRef);\n      \n      if (!groupDoc.exists()) {\n        throw new Error('Group not found');\n      }\n\n      const group = groupDoc.data() as SplitwiseGroup;\n\n      // Update the member status in the common group\n      const updatedMembers = group.members.map(member => {\n        if (member.email.toLowerCase() === invitation.invitedEmail.toLowerCase()) {\n          return {\n            ...member,\n            userId: currentUser.uid,\n            displayName: currentUser.displayName || currentUser.email?.split('@')[0] || member.displayName,\n            photoURL: currentUser.photoURL || member.photoURL,\n            isActive: true\n          };\n        }\n        return member;\n      });\n\n      await updateDoc(groupRef, {\n        members: updatedMembers,\n        updatedAt: new Date()\n      });\n\n      this.notificationService.success(`Successfully joined ${invitation.groupName}!`);\n\n    } catch (error) {\n      console.error('Error accepting invitation:', error);\n      this.notificationService.error('Failed to accept invitation');\n      throw error;\n    }\n  }\n\n  async declineInvitation(invitationId: string, userId: string): Promise<void> {\n    try {\n      const currentUser = this.auth.currentUser;\n      if (!currentUser) throw new Error('User not authenticated');\n\n      // Get the invitation from common collection\n      const invitationRef = doc(this.firestore, 'splitwise-invitations', invitationId);\n      const invitationDoc = await getDoc(invitationRef);\n      \n      if (!invitationDoc.exists()) {\n        throw new Error('Invitation not found');\n      }\n\n      const invitation = invitationDoc.data() as GroupInvitation;\n\n      // Update invitation status\n      await updateDoc(invitationRef, { \n        status: InvitationStatus.DECLINED, \n        updatedAt: new Date() \n      });\n\n      // Remove the member from the common group\n      const groupRef = doc(this.firestore, 'splitwise-groups', invitation.groupId);\n      const groupDoc = await getDoc(groupRef);\n      \n      if (groupDoc.exists()) {\n        const group = groupDoc.data() as SplitwiseGroup;\n        const updatedMembers = group.members.filter(member => \n          member.email.toLowerCase() !== invitation.invitedEmail.toLowerCase()\n        );\n\n        await updateDoc(groupRef, {\n          members: updatedMembers,\n          updatedAt: new Date()\n        });\n      }\n\n      this.notificationService.success(`Invitation to ${invitation.groupName} declined`);\n\n    } catch (error) {\n      console.error('Error declining invitation:', error);\n      this.notificationService.error('Failed to decline invitation');\n      throw error;\n    }\n  }\n\n  // Members\n  async addMemberToGroup(groupId: string, request: AddMemberRequest, userId: string): Promise<SplitwiseGroup> {\n    try {\n      const currentUser = this.auth.currentUser;\n      if (!currentUser) {\n        throw new Error('User not authenticated');\n      }\n\n      // Get the group from common collection\n      const groupRef = doc(this.firestore, 'splitwise-groups', groupId);\n      const groupDoc = await getDoc(groupRef);\n      \n      if (!groupDoc.exists()) {\n        throw new Error('Group not found');\n      }\n      \n      const group = groupDoc.data() as SplitwiseGroup;\n\n      // Check if user is already a member\n      const existingMember = group.members.find(member => \n        member.email.toLowerCase() === request.email.toLowerCase()\n      );\n      \n      if (existingMember) {\n        throw new Error('User is already a member of this group');\n      }\n\n      // Find if the user exists in the system\n      const targetUser = await this.userService.findUserByEmail(request.email);\n      \n      if (targetUser) {\n        // User exists - send invitation\n        await this.sendGroupInvitation(groupId, request.email, userId);\n        \n        // Add member to group with pending status\n        const newMember: GroupMember = {\n          userId: targetUser.uid,\n          email: request.email,\n          displayName: targetUser.firstName || targetUser.email?.split('@')[0] || request.email.split('@')[0],\n          photoURL: targetUser.photoURL || '',\n          role: request.role || GroupMemberRole.MEMBER,\n          joinedAt: new Date(),\n          isActive: false // Will be true when user accepts invitation\n        };\n\n        const updatedMembers = [...group.members, newMember];\n        await updateDoc(groupRef, { \n          members: updatedMembers, \n          updatedAt: new Date() \n        });\n\n        this.notificationService.success(`Invitation sent to ${request.email}`);\n        \n        return { id: groupId, ...group, members: updatedMembers, updatedAt: new Date() } as SplitwiseGroup;\n      } else {\n        // User doesn't exist - add as pending member\n        const newMember: GroupMember = {\n          userId: '', // Will be set when user registers and accepts invitation\n          email: request.email,\n          displayName: request.email.split('@')[0],\n          role: request.role || GroupMemberRole.MEMBER,\n          joinedAt: new Date(),\n          isActive: false\n        };\n\n        const updatedMembers = [...group.members, newMember];\n        await updateDoc(groupRef, { \n          members: updatedMembers, \n          updatedAt: new Date() \n        });\n\n        // Send invitation for non-registered user\n        await this.sendGroupInvitation(groupId, request.email, userId);\n\n        this.notificationService.success(`Invitation sent to ${request.email}. They will be added when they register and accept.`);\n        \n        return { id: groupId, ...group, members: updatedMembers, updatedAt: new Date() } as SplitwiseGroup;\n      }\n    } catch (error) {\n      console.error('Error adding member to group:', error);\n      this.notificationService.error(error instanceof Error ? error.message : 'Failed to add member');\n      throw error;\n    }\n  }\n\n  // Transactions\n  getGroupTransactions(groupId: string, userId: string): Observable<SplitTransaction[]> {\n    const transactionsRef = collection(this.firestore, 'splitwise-transactions');\n    const q = query(\n      transactionsRef,\n      where('groupId', '==', groupId),\n      orderBy('createdAt', 'desc')\n    );\n\n    return from(getDocs(q)).pipe(\n      map(snapshot => snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      } as SplitTransaction))),\n      catchError(error => {\n        console.error('Error fetching group transactions:', error);\n        return of([]);\n      })\n    );\n  }\n\n  // Settlements\n  getGroupSettlements(groupId: string, userId: string): Observable<SplitSettlement[]> {\n    const settlementsRef = collection(this.firestore, 'splitwise-settlements');\n    const q = query(\n      settlementsRef,\n      where('groupId', '==', groupId),\n      orderBy('createdAt', 'desc')\n    );\n\n    return from(getDocs(q)).pipe(\n      map(snapshot => snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      } as SplitSettlement))),\n      catchError(error => {\n        console.error('Error fetching group settlements:', error);\n        return of([]);\n      })\n    );\n  }\n\n  /**\n   * Get settlements by transaction ID\n   */\n  getSettlementsByTransaction(transactionId: string): Observable<SplitSettlement[]> {\n    const settlementsRef = collection(this.firestore, 'splitwise-settlements');\n    const q = query(\n      settlementsRef,\n      where('originalTransactionId', '==', transactionId),\n      orderBy('createdAt', 'desc')\n    );\n\n    return from(getDocs(q)).pipe(\n      map(snapshot => snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      } as SplitSettlement))),\n      catchError(error => {\n        console.error('Error fetching settlements by transaction:', error);\n        return of([]);\n      })\n    );\n  }\n\n  // Split Transactions\n  createSplitTransaction(request: CreateSplitTransactionRequest, userId: string): Observable<SplitTransaction> {\n    const currentUser = this.auth.currentUser;\n    if (!currentUser) {\n      throw new Error('User not authenticated');\n    }\n\n    const splitTransactionData: Omit<SplitTransaction, 'id'> = {\n      groupId: request.groupId,\n      originalTransactionId: request.originalTransactionId,\n      amount: request.amount,\n      createdBy: userId,\n      splits: request.splits.map(split => ({\n        ...split,\n        email: split.email || '',\n        displayName: split.displayName || '' // Will be populated from user data\n      })),\n      totalAmount: request.amount,\n      currency: 'USD', // Default currency\n      createdAt: new Date(),\n      updatedAt: new Date(),\n      syncStatus: SyncStatus.SYNCED\n    };\n\n    const transactionsRef = collection(this.firestore, 'splitwise-transactions');\n    return from(addDoc(transactionsRef, splitTransactionData)).pipe(\n      map(docRef => ({\n        id: docRef.id,\n        ...splitTransactionData\n      } as SplitTransaction))\n    );\n  }\n\n\n  /**\n   * Get group by ID\n   */\n  getGroup(groupId: string): Observable<SplitwiseGroup | null> {\n    return from(getDoc(doc(this.firestore, 'splitwise-groups', groupId))).pipe(\n      map(doc => {\n        if (doc.exists()) {\n          return { id: doc.id, ...doc.data() } as SplitwiseGroup;\n        }\n        return null;\n      })\n    );\n  }\n\n  /**\n   * Update group\n   */\n  async updateGroup(groupId: string, request: UpdateGroupRequest): Promise<void> {\n    try {\n      const userId = this.auth.currentUser?.uid;\n      if (!userId) throw new Error('User not authenticated');\n\n      const updateData: any = {\n        updatedAt: new Date()\n      };\n\n      if (request.name) updateData.name = request.name;\n      if (request.description !== undefined) updateData.description = request.description;\n      if (request.currency) updateData.currency = request.currency;\n\n      await updateDoc(doc(this.firestore, 'splitwise-groups', groupId), updateData);\n\n      this.notificationService.success('Group updated successfully');\n    } catch (error) {\n      console.error('Error updating group:', error);\n      this.notificationService.error('Failed to update group');\n      throw error;\n    }\n  }\n\n  // ==================== MEMBER MANAGEMENT ====================\n\n\n  /**\n   * Remove member from group\n   */\n  async removeMemberFromGroup(groupId: string, memberUserId: string, userId: string): Promise<void> {\n    try {\n      if (!userId) throw new Error('User not authenticated');\n\n      const groupRef = doc(this.firestore, 'splitwise-groups', groupId);\n      const groupDoc = await getDoc(groupRef);\n\n      if (!groupDoc.exists()) {\n        throw new Error('Group not found');\n      }\n\n      const groupData = groupDoc.data() as SplitwiseGroup;\n      const updatedMembers = groupData.members.filter(member => member.userId !== memberUserId);\n\n      await updateDoc(groupRef, {\n        members: updatedMembers,\n        updatedAt: new Date()\n      });\n\n      this.notificationService.success('Member removed successfully');\n    } catch (error) {\n      console.error('Error removing member:', error);\n      this.notificationService.error('Failed to remove member');\n      throw error;\n    }\n  }\n\n\n  /**\n   * Get split transaction by ID\n   */\n  getSplitTransaction(transactionId: string): Observable<SplitTransaction | null> {\n    return from(getDoc(doc(this.firestore, 'splitwise-transactions', transactionId))).pipe(\n      map(doc => {\n        if (doc.exists()) {\n          return { id: doc.id, ...doc.data() } as SplitTransaction;\n        }\n        return null;\n      })\n    );\n  }\n\n  /**\n   * Update split transaction\n   */\n  async updateSplitTransaction(transactionId: string, request: UpdateSplitTransactionRequest): Promise<void> {\n    try {\n      const userId = this.auth.currentUser?.uid;\n      if (!userId) throw new Error('User not authenticated');\n\n      const updateData: any = {\n        updatedAt: new Date()\n      };\n\n      if (request.payee) updateData.payee = request.payee;\n      if (request.amount) updateData.amount = request.amount;\n      if (request.type) updateData.type = request.type;\n      if (request.date) updateData.date = this.dateService.toTimestamp(request.date);\n      if (request.notes !== undefined) updateData.notes = request.notes;\n      if (request.categoryId) updateData.categoryId = request.categoryId;\n      if (request.category) updateData.category = request.category;\n\n      if (request.splits) {\n        // Get group for member details\n        const transactionDoc = await getDoc(doc(this.firestore, 'splitwise-transactions', transactionId));\n        if (!transactionDoc.exists()) {\n          throw new Error('Transaction not found');\n        }\n\n        const transactionData = transactionDoc.data() as SplitTransaction;\n        const groupDoc = await getDoc(doc(this.firestore, 'splitwise-groups', transactionData.groupId));\n        const groupData = groupDoc.data() as SplitwiseGroup;\n\n        const splitsWithDetails: TransactionSplit[] = request.splits.map(split => {\n          const member = groupData.members.find(m => m.userId === split.userId);\n          return {\n            ...split,\n            email: member?.email || '',\n            displayName: member?.displayName || '',\n            // Preserve the isPaid status from the request\n            isPaid: split.isPaid !== undefined ? split.isPaid : false\n          };\n        });\n\n        updateData.splits = splitsWithDetails;\n        \n        // Only update totalAmount if amount is provided\n        if (request.amount) {\n          updateData.totalAmount = request.amount;\n        }\n\n      }\n\n      await updateDoc(doc(this.firestore, 'splitwise-transactions', transactionId), updateData);\n\n      this.notificationService.success('Split transaction updated successfully');\n    } catch (error) {\n      console.error('Error updating split transaction:', error);\n      this.notificationService.error('Failed to update split transaction');\n      throw error;\n    }\n  }\n\n  /**\n   * Delete split transaction\n   */\n  async deleteSplitTransaction(transactionId: string, userId: string): Promise<void> {\n    try {\n      if (!userId) throw new Error('User not authenticated');\n\n      const transactionDoc = query(\n        collection(this.firestore, 'splitwise-transactions'),\n        where('originalTransactionId', '==', transactionId)\n      );\n\n \n\n      const querySnapshot = await getDocs(transactionDoc);\n\n      if (querySnapshot.empty) {\n        throw new Error('Transaction not found');\n      }\n\n      const transactionData = querySnapshot.docs[0].data() as SplitTransaction;\n\n      // Reverse member balances\n      const reversedSplits = transactionData.splits.map(split => ({\n        ...split,\n        amount: -split.amount\n      }));\n    \n      // Delete transaction\n      await deleteDoc(querySnapshot.docs[0].ref);\n\n      // Clean up related settlements\n      await this.cleanupSettlementsForTransaction(transactionId);\n\n      this.notificationService.success('Split transaction deleted successfully');\n    } catch (error) {\n      console.error('Error deleting split transaction:', error);\n      this.notificationService.error('Failed to delete split transaction');\n      throw error;\n    }\n  }\n\n  /**\n   * Clean up settlements related to a deleted transaction\n   */\n  private async cleanupSettlementsForTransaction(originalTransactionId: string): Promise<void> {\n    try {\n      const settlementsRef = collection(this.firestore, 'splitwise-settlements');\n      const settlementsQuery = query(\n        settlementsRef,\n        where('originalTransactionId', '==', originalTransactionId)\n      );\n\n      const settlementsSnapshot = await getDocs(settlementsQuery);\n      \n      if (!settlementsSnapshot.empty) {\n        const deletePromises = settlementsSnapshot.docs.map(doc => deleteDoc(doc.ref));\n        await Promise.all(deletePromises);\n        \n        console.log(`Cleaned up ${settlementsSnapshot.docs.length} settlements for transaction ${originalTransactionId}`);\n      }\n    } catch (error) {\n      console.error('Error cleaning up settlements for transaction:', error);\n      // Don't throw error here as the main transaction deletion should still succeed\n    }\n  }\n\n  // ==================== SETTLEMENTS ====================\n\n  /**\n   * Create settlement\n   */\n  async createSettlement(request: CreateSettlementRequest): Promise<string> {\n    try {\n      const userId = this.auth.currentUser?.uid;\n      if (!userId) throw new Error('User not authenticated');\n\n      // Get group to get the currency\n      const groupDoc = await getDoc(doc(this.firestore, 'splitwise-groups', request.groupId));\n      if (!groupDoc.exists()) {\n        throw new Error('Group not found');\n      }\n      const groupData = groupDoc.data() as SplitwiseGroup;\n\n      const settlementData: Omit<SplitSettlement, 'id'> = {\n        groupId: request.groupId,\n        originalTransactionId: request.originalTransactionId,\n        fromUserId: request.fromUserId,\n        toUserId: request.toUserId,\n        amount: request.amount,\n        currency: groupData.currency || 'USD',\n        status: SettlementStatus.PENDING,\n        notes: request.notes || '',\n        createdAt: new Date(),\n        updatedAt: new Date()\n      };\n\n      const settlementRef = await addDoc(collection(this.firestore, 'splitwise-settlements'), settlementData);\n\n      return settlementRef.id;\n    } catch (error) {\n      console.error('Error creating settlement:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Complete settlement\n   */\n  async completeSettlement(settlementId: string): Promise<void> {\n    try {\n      const userId = this.auth.currentUser?.uid;\n      if (!userId) throw new Error('User not authenticated');\n\n      await updateDoc(doc(this.firestore, 'splitwise-settlements', settlementId), {\n        status: SettlementStatus.COMPLETED,\n        settledAt: new Date(),\n        updatedAt: new Date()\n      });\n\n      // Log activity\n      const settlementDoc = await getDoc(doc(this.firestore, 'splitwise-settlements', settlementId));\n      const settlementData = settlementDoc.data() as SplitSettlement;\n\n\n    } catch (error) {\n      console.error('Error completing settlement:', error);\n      throw error;\n    }\n  }\n\n  // ==================== INVITATIONS ====================\n\n  /**\n   * Send group invitation\n   */\n  async sendGroupInvitation(groupId: string, email: string, inviterUserId: string): Promise<void> {\n    try {\n      const currentUser = this.auth.currentUser;\n      if (!currentUser) throw new Error('User not authenticated');\n\n      const groupDoc = await getDoc(doc(this.firestore, 'splitwise-groups', groupId));\n      const groupData = groupDoc.data() as SplitwiseGroup;\n\n      const invitationData: Omit<GroupInvitation, 'id'> = {\n        groupId: groupId,\n        groupName: groupData.name,\n        invitedBy: inviterUserId,\n        invitedByEmail: currentUser.email || '',\n        invitedByDisplayName: currentUser.displayName || '',\n        invitedEmail: email,\n        status: InvitationStatus.PENDING,\n        expiresAt: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000), // 7 days\n        createdAt: new Date(),\n        updatedAt: new Date()\n      };\n\n      // Always store invitations in the common collection\n      await addDoc(collection(this.firestore, 'splitwise-invitations'), invitationData);\n\n    } catch (error) {\n      console.error('Error sending invitation:', error);\n      throw error;\n    }\n  }\n\n\n\n  // ==================== UTILITY METHODS ====================\n\n\n  /**\n   * Get group summary\n   */\n  async getGroupSummary(groupId: string): Promise<GroupSummary> {\n    const userId = this.auth.currentUser?.uid;\n    if (!userId) throw new Error('User not authenticated');\n\n    const [transactions, settlements] = await Promise.all([\n      getDocs(query(\n        collection(this.firestore, 'splitwise-transactions'),\n        where('groupId', '==', groupId)\n      )),\n      getDocs(query(\n        collection(this.firestore, 'splitwise-settlements'),\n        where('groupId', '==', groupId),\n        where('status', '==', SettlementStatus.PENDING)\n      ))\n    ]);\n\n    const groupDoc = await getDoc(doc(this.firestore, 'splitwise-groups', groupId));\n    const groupData = groupDoc.data() as SplitwiseGroup;\n\n    const totalAmount = transactions.docs.reduce((sum, doc) => {\n      const transaction = doc.data() as SplitTransaction;\n      return sum + transaction.amount;\n    }, 0);\n\n    return {\n      groupId: groupId,\n      totalTransactions: transactions.docs.length,\n      totalAmount: totalAmount,\n      averageAmount: transactions.docs.length > 0 ? totalAmount / transactions.docs.length : 0,\n      memberCount: groupData.members.length,\n      activeMemberCount: groupData.members.filter(m => m.isActive).length,\n      pendingSettlements: settlements.docs.length,\n      lastActivity: new Date()\n    };\n  }\n\n  /**\n   * Get member balances for a group\n   */\n  async getMemberBalances(groupId: string): Promise<MemberBalance[]> {\n    const userId = this.auth.currentUser?.uid;\n    if (!userId) throw new Error('User not authenticated');\n\n    const groupDoc = await getDoc(doc(this.firestore, 'splitwise-groups', groupId));\n    const groupData = groupDoc.data() as SplitwiseGroup;\n\n    const transactions = await getDocs(query(\n      collection(this.firestore, 'splitwise-transactions'),\n      where('groupId', '==', groupId)\n    ));\n\n    const memberBalances = new Map<string, MemberBalance>();\n\n    // Initialize member balances\n    groupData.members.forEach(member => {\n      memberBalances.set(member.userId, {\n        userId: member.userId,\n        email: member.email,\n        displayName: member.displayName,\n        totalPaid: 0,\n        totalOwed: 0,\n        netBalance: 0,\n        transactionCount: 0\n      });\n    });\n\n    // Calculate balances from transactions\n    transactions.docs.forEach(doc => {\n      const transaction = doc.data() as SplitTransaction;\n      transaction.splits.forEach(split => {\n        const balance = memberBalances.get(split.userId);\n        if (balance) {\n          balance.transactionCount++;\n          if (split.amount > 0) {\n            balance.totalPaid += split.amount;\n          } else {\n            balance.totalOwed += Math.abs(split.amount);\n          }\n          balance.netBalance = balance.totalPaid - balance.totalOwed;\n        }\n      });\n    });\n\n    return Array.from(memberBalances.values());\n  }\n\n\n  sharePWA() {\n    this.hapticFeedback.buttonClick();\n    \n    const shareData = {\n      title: 'Money Manager',\n      text: 'Check out this amazing money management app!',\n      url: `${environment.baseUrl}/#sign-in`\n    };\n\n    // Try to use Web Share API first\n    if (navigator.share && navigator.canShare(shareData)) {\n      navigator.share(shareData)\n        .then(() => {\n          console.log('Shared successfully');\n        })\n        .catch((error) => {\n          console.log('Error sharing:', error);\n          this.fallbackShare(shareData.url);\n        });\n    } else {\n      // Fallback to clipboard copy\n      this.fallbackShare(shareData.url);\n    }\n  }\n\n  private fallbackShare(url: string) {\n    // Copy to clipboard\n    navigator.clipboard.writeText(url).then(() => {\n      // Show success message (you might want to use a toast service here)\n      alert('PWA link copied to clipboard!');\n    }).catch(() => {\n      // Fallback for older browsers\n      const textArea = document.createElement('textarea');\n      textArea.value = url;\n      document.body.appendChild(textArea);\n      textArea.select();\n      try {\n        document.execCommand('copy');\n        alert('PWA link copied to clipboard!');\n      } catch (err) {\n        alert('Failed to copy link. Please copy manually: ' + url);\n      }\n      document.body.removeChild(textArea);\n    });\n  }\n} ","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { CURRENCIES, Currency, DEFAULT_CURRENCY, getCurrencyByCode, getCurrencySymbol } from '../models/currency.model';\nimport { UserService } from './user.service';\nimport { APP_CONFIG } from '../config/config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CurrencyService {\n  private currentCurrencySubject = new BehaviorSubject<string>(DEFAULT_CURRENCY);\n  public currentCurrency$ = this.currentCurrencySubject.asObservable();\n\n  constructor(private userService: UserService) {\n    this.initializeCurrency();\n  }\n\n  private async initializeCurrency(): Promise<void> {\n    try {\n      const user = await this.userService.getCurrentUser();\n      if (user?.preferences?.defaultCurrency) {\n        this.setCurrentCurrency(user.preferences.defaultCurrency);\n      }\n    } catch (error) {\n      console.error('Error initializing currency:', error);\n    }\n  }\n\n  getCurrencies(): Currency[] {\n    return CURRENCIES;\n  }\n\n  getCurrentCurrency(): string {\n    return this.currentCurrencySubject.value;\n  }\n\n  setCurrentCurrency(currencyCode: string): void {\n    if (this.isValidCurrency(currencyCode)) {\n      this.currentCurrencySubject.next(currencyCode);\n    }\n  }\n\n  getCurrencySymbol(currencyCode?: string): string {\n    const code = currencyCode || this.getCurrentCurrency();\n    return getCurrencySymbol(code);\n  }\n\n  getCurrencyByCode(currencyCode: string): Currency | undefined {\n    return getCurrencyByCode(currencyCode);\n  }\n\n  isValidCurrency(currencyCode: string): boolean {\n    return CURRENCIES.some(currency => currency.code === currencyCode);\n  }\n\n  getDefaultCurrency(): string {\n    return DEFAULT_CURRENCY;\n  }\n\n  formatAmount(amount: number, currencyCode?: string): string {\n    const code = currencyCode || this.getCurrentCurrency();\n    return new Intl.NumberFormat(APP_CONFIG.LANGUAGE.DEFAULT, {\n      style: 'currency',\n      currency: code,\n    }).format(amount);\n  }\n} ","import * as i0 from '@angular/core';\nimport { InjectionToken, booleanAttribute, Directive, Input, EventEmitter, Optional, Inject, SkipSelf, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/collections';\nimport { Subject, Subscription } from 'rxjs';\n\n/** Used to generate unique ID for each accordion. */\nlet nextId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_ACCORDION = /*#__PURE__*/new InjectionToken('CdkAccordion');\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nlet CdkAccordion = /*#__PURE__*/(() => {\n  class CdkAccordion {\n    constructor() {\n      /** Emits when the state of the accordion changes */\n      this._stateChanges = new Subject();\n      /** Stream that emits true/false when openAll/closeAll is triggered. */\n      this._openCloseAllActions = new Subject();\n      /** A readonly id value to use for unique selection coordination. */\n      this.id = `cdk-accordion-${nextId$1++}`;\n      /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n      this.multi = false;\n    }\n    /** Opens all enabled accordion items in an accordion where multi is enabled. */\n    openAll() {\n      if (this.multi) {\n        this._openCloseAllActions.next(true);\n      }\n    }\n    /** Closes all enabled accordion items. */\n    closeAll() {\n      this._openCloseAllActions.next(false);\n    }\n    ngOnChanges(changes) {\n      this._stateChanges.next(changes);\n    }\n    ngOnDestroy() {\n      this._stateChanges.complete();\n      this._openCloseAllActions.complete();\n    }\n    static {\n      this.ɵfac = function CdkAccordion_Factory(t) {\n        return new (t || CdkAccordion)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkAccordion,\n        selectors: [[\"cdk-accordion\"], [\"\", \"cdkAccordion\", \"\"]],\n        inputs: {\n          multi: [2, \"multi\", \"multi\", booleanAttribute]\n        },\n        exportAs: [\"cdkAccordion\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CDK_ACCORDION,\n          useExisting: CdkAccordion\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return CdkAccordion;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Used to generate unique ID for each accordion item. */\nlet nextId = 0;\n/**\n * A basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nlet CdkAccordionItem = /*#__PURE__*/(() => {\n  class CdkAccordionItem {\n    /** Whether the AccordionItem is expanded. */\n    get expanded() {\n      return this._expanded;\n    }\n    set expanded(expanded) {\n      // Only emit events and update the internal value if the value changes.\n      if (this._expanded !== expanded) {\n        this._expanded = expanded;\n        this.expandedChange.emit(expanded);\n        if (expanded) {\n          this.opened.emit();\n          /**\n           * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n           * the name value is the id of the accordion.\n           */\n          const accordionId = this.accordion ? this.accordion.id : this.id;\n          this._expansionDispatcher.notify(this.id, accordionId);\n        } else {\n          this.closed.emit();\n        }\n        // Ensures that the animation will run when the value is set outside of an `@Input`.\n        // This includes cases like the open, close and toggle methods.\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n      this.accordion = accordion;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._expansionDispatcher = _expansionDispatcher;\n      /** Subscription to openAll/closeAll events. */\n      this._openCloseAllSubscription = Subscription.EMPTY;\n      /** Event emitted every time the AccordionItem is closed. */\n      this.closed = new EventEmitter();\n      /** Event emitted every time the AccordionItem is opened. */\n      this.opened = new EventEmitter();\n      /** Event emitted when the AccordionItem is destroyed. */\n      this.destroyed = new EventEmitter();\n      /**\n       * Emits whenever the expanded state of the accordion changes.\n       * Primarily used to facilitate two-way binding.\n       * @docs-private\n       */\n      this.expandedChange = new EventEmitter();\n      /** The unique AccordionItem id. */\n      this.id = `cdk-accordion-child-${nextId++}`;\n      this._expanded = false;\n      /** Whether the AccordionItem is disabled. */\n      this.disabled = false;\n      /** Unregister function for _expansionDispatcher. */\n      this._removeUniqueSelectionListener = () => {};\n      this._removeUniqueSelectionListener = _expansionDispatcher.listen((id, accordionId) => {\n        if (this.accordion && !this.accordion.multi && this.accordion.id === accordionId && this.id !== id) {\n          this.expanded = false;\n        }\n      });\n      // When an accordion item is hosted in an accordion, subscribe to open/close events.\n      if (this.accordion) {\n        this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n      }\n    }\n    /** Emits an event for the accordion item being destroyed. */\n    ngOnDestroy() {\n      this.opened.complete();\n      this.closed.complete();\n      this.destroyed.emit();\n      this.destroyed.complete();\n      this._removeUniqueSelectionListener();\n      this._openCloseAllSubscription.unsubscribe();\n    }\n    /** Toggles the expanded state of the accordion item. */\n    toggle() {\n      if (!this.disabled) {\n        this.expanded = !this.expanded;\n      }\n    }\n    /** Sets the expanded state of the accordion item to false. */\n    close() {\n      if (!this.disabled) {\n        this.expanded = false;\n      }\n    }\n    /** Sets the expanded state of the accordion item to true. */\n    open() {\n      if (!this.disabled) {\n        this.expanded = true;\n      }\n    }\n    _subscribeToOpenCloseAllActions() {\n      return this.accordion._openCloseAllActions.subscribe(expanded => {\n        // Only change expanded state if item is enabled\n        if (!this.disabled) {\n          this.expanded = expanded;\n        }\n      });\n    }\n    static {\n      this.ɵfac = function CdkAccordionItem_Factory(t) {\n        return new (t || CdkAccordionItem)(i0.ɵɵdirectiveInject(CDK_ACCORDION, 12), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.UniqueSelectionDispatcher));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkAccordionItem,\n        selectors: [[\"cdk-accordion-item\"], [\"\", \"cdkAccordionItem\", \"\"]],\n        inputs: {\n          expanded: [2, \"expanded\", \"expanded\", booleanAttribute],\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n        },\n        outputs: {\n          closed: \"closed\",\n          opened: \"opened\",\n          destroyed: \"destroyed\",\n          expandedChange: \"expandedChange\"\n        },\n        exportAs: [\"cdkAccordionItem\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([\n        // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n        // registering to the same accordion.\n        {\n          provide: CDK_ACCORDION,\n          useValue: undefined\n        }]), i0.ɵɵInputTransformsFeature]\n      });\n    }\n  }\n  return CdkAccordionItem;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet CdkAccordionModule = /*#__PURE__*/(() => {\n  class CdkAccordionModule {\n    static {\n      this.ɵfac = function CdkAccordionModule_Factory(t) {\n        return new (t || CdkAccordionModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: CdkAccordionModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return CdkAccordionModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_ACCORDION, CdkAccordion, CdkAccordionItem, CdkAccordionModule };\n","import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, EventEmitter, ANIMATION_MODULE_TYPE, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, SkipSelf, Input, Output, ContentChild, ViewChild, numberAttribute, Host, Attribute, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i2 from '@angular/cdk/a11y';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { startWith, filter, take } from 'rxjs/operators';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/cdk/collections';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n */\nconst _c0 = [\"body\"];\nconst _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) {}\nconst _c3 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c4 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nfunction MatExpansionPanelHeader_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 1);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 2);\n    i0.ɵɵelement(2, \"path\", 3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n  }\n}\nconst MAT_ACCORDION = /*#__PURE__*/new InjectionToken('MAT_ACCORDION');\n\n/** Time and timing curve for expansion panel animations. */\n// Note: Keep this in sync with the Sass variable for the panel header animation.\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM. This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * @docs-private\n */\nconst matExpansionAnimations = {\n  /** Animation that rotates the indicator arrow. */\n  indicatorRotate: /*#__PURE__*/trigger('indicatorRotate', [/*#__PURE__*/state('collapsed, void', /*#__PURE__*/style({\n    transform: 'rotate(0deg)'\n  })), /*#__PURE__*/state('expanded', /*#__PURE__*/style({\n    transform: 'rotate(180deg)'\n  })), /*#__PURE__*/transition('expanded <=> collapsed, void => collapsed', /*#__PURE__*/animate(EXPANSION_PANEL_ANIMATION_TIMING))]),\n  /** Animation that expands and collapses the panel content. */\n  bodyExpansion: /*#__PURE__*/trigger('bodyExpansion', [/*#__PURE__*/state('collapsed, void', /*#__PURE__*/style({\n    height: '0px',\n    visibility: 'hidden'\n  })),\n  /*#__PURE__*/\n  // Clear the `visibility` while open, otherwise the content will be visible when placed in\n  // a parent that's `visibility: hidden`, because `visibility` doesn't apply to descendants\n  // that have a `visibility` of their own (see #27436).\n  state('expanded', /*#__PURE__*/style({\n    height: '*',\n    visibility: ''\n  })), /*#__PURE__*/transition('expanded <=> collapsed, void => collapsed', /*#__PURE__*/animate(EXPANSION_PANEL_ANIMATION_TIMING))])\n};\n\n/**\n * Token used to provide a `MatExpansionPanel` to `MatExpansionPanelContent`.\n * Used to avoid circular imports between `MatExpansionPanel` and `MatExpansionPanelContent`.\n */\nconst MAT_EXPANSION_PANEL = /*#__PURE__*/new InjectionToken('MAT_EXPANSION_PANEL');\n\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nlet MatExpansionPanelContent = /*#__PURE__*/(() => {\n  class MatExpansionPanelContent {\n    constructor(_template, _expansionPanel) {\n      this._template = _template;\n      this._expansionPanel = _expansionPanel;\n    }\n    static {\n      this.ɵfac = function MatExpansionPanelContent_Factory(t) {\n        return new (t || MatExpansionPanelContent)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatExpansionPanelContent,\n        selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]],\n        standalone: true\n      });\n    }\n  }\n  return MatExpansionPanelContent;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Counter for generating unique element ids. */\nlet uniqueId = 0;\n/**\n * Injection token that can be used to configure the default\n * options for the expansion panel component.\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\n/**\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nlet MatExpansionPanel = /*#__PURE__*/(() => {\n  class MatExpansionPanel extends CdkAccordionItem {\n    /** Whether the toggle indicator should be hidden. */\n    get hideToggle() {\n      return this._hideToggle || this.accordion && this.accordion.hideToggle;\n    }\n    set hideToggle(value) {\n      this._hideToggle = value;\n    }\n    /** The position of the expansion indicator. */\n    get togglePosition() {\n      return this._togglePosition || this.accordion && this.accordion.togglePosition;\n    }\n    set togglePosition(value) {\n      this._togglePosition = value;\n    }\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n      super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n      this._viewContainerRef = _viewContainerRef;\n      this._animationMode = _animationMode;\n      this._hideToggle = false;\n      /** An event emitted after the body's expansion animation happens. */\n      this.afterExpand = new EventEmitter();\n      /** An event emitted after the body's collapse animation happens. */\n      this.afterCollapse = new EventEmitter();\n      /** Stream that emits for changes in `@Input` properties. */\n      this._inputChanges = new Subject();\n      /** ID for the associated header element. Used for a11y labelling. */\n      this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n      this.accordion = accordion;\n      this._document = _document;\n      this._animationsDisabled = _animationMode === 'NoopAnimations';\n      if (defaultOptions) {\n        this.hideToggle = defaultOptions.hideToggle;\n      }\n    }\n    /** Determines whether the expansion panel should have spacing between it and its siblings. */\n    _hasSpacing() {\n      if (this.accordion) {\n        return this.expanded && this.accordion.displayMode === 'default';\n      }\n      return false;\n    }\n    /** Gets the expanded state string. */\n    _getExpandedState() {\n      return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /** Toggles the expanded state of the expansion panel. */\n    toggle() {\n      this.expanded = !this.expanded;\n    }\n    /** Sets the expanded state of the expansion panel to false. */\n    close() {\n      this.expanded = false;\n    }\n    /** Sets the expanded state of the expansion panel to true. */\n    open() {\n      this.expanded = true;\n    }\n    ngAfterContentInit() {\n      if (this._lazyContent && this._lazyContent._expansionPanel === this) {\n        // Render the content as soon as the panel becomes open.\n        this.opened.pipe(startWith(null), filter(() => this.expanded && !this._portal), take(1)).subscribe(() => {\n          this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n        });\n      }\n    }\n    ngOnChanges(changes) {\n      this._inputChanges.next(changes);\n    }\n    ngOnDestroy() {\n      super.ngOnDestroy();\n      this._inputChanges.complete();\n    }\n    /** Checks whether the expansion panel's content contains the currently-focused element. */\n    _containsFocus() {\n      if (this._body) {\n        const focusedElement = this._document.activeElement;\n        const bodyElement = this._body.nativeElement;\n        return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n      }\n      return false;\n    }\n    /** Called when the expansion animation has started. */\n    _animationStarted(event) {\n      if (!isInitialAnimation(event) && !this._animationsDisabled && this._body) {\n        // Prevent the user from tabbing into the content while it's animating.\n        // TODO(crisbeto): maybe use `inert` to prevent focus from entering while closed as well\n        // instead of `visibility`? Will allow us to clean up some code but needs more testing.\n        this._body?.nativeElement.setAttribute('inert', '');\n      }\n    }\n    /** Called when the expansion animation has finished. */\n    _animationDone(event) {\n      if (!isInitialAnimation(event)) {\n        if (event.toState === 'expanded') {\n          this.afterExpand.emit();\n        } else if (event.toState === 'collapsed') {\n          this.afterCollapse.emit();\n        }\n        // Re-enable tabbing once the animation is finished.\n        if (!this._animationsDisabled && this._body) {\n          this._body.nativeElement.removeAttribute('inert');\n        }\n      }\n    }\n    static {\n      this.ɵfac = function MatExpansionPanel_Factory(t) {\n        return new (t || MatExpansionPanel)(i0.ɵɵdirectiveInject(MAT_ACCORDION, 12), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.UniqueSelectionDispatcher), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatExpansionPanel,\n        selectors: [[\"mat-expansion-panel\"]],\n        contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n          }\n        },\n        viewQuery: function MatExpansionPanel_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._body = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-expansion-panel\"],\n        hostVars: 6,\n        hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationsDisabled)(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n          }\n        },\n        inputs: {\n          hideToggle: [2, \"hideToggle\", \"hideToggle\", booleanAttribute],\n          togglePosition: \"togglePosition\"\n        },\n        outputs: {\n          afterExpand: \"afterExpand\",\n          afterCollapse: \"afterCollapse\"\n        },\n        exportAs: [\"matExpansionPanel\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([\n        // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n        // to the same accordion.\n        {\n          provide: MAT_ACCORDION,\n          useValue: undefined\n        }, {\n          provide: MAT_EXPANSION_PANEL,\n          useExisting: MatExpansionPanel\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c2,\n        decls: 7,\n        vars: 4,\n        consts: [[\"body\", \"\"], [\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]],\n        template: function MatExpansionPanel_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵprojectionDef(_c1);\n            i0.ɵɵprojection(0);\n            i0.ɵɵelementStart(1, \"div\", 1, 0);\n            i0.ɵɵlistener(\"@bodyExpansion.start\", function MatExpansionPanel_Template_div_animation_bodyExpansion_start_1_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._animationStarted($event));\n            })(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._animationDone($event));\n            });\n            i0.ɵɵelementStart(3, \"div\", 2);\n            i0.ɵɵprojection(4, 1);\n            i0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵprojection(6, 2);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n            i0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n          }\n        },\n        dependencies: [CdkPortalOutlet],\n        styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative;background:var(--mat-expansion-container-background-color, var(--mat-app-surface));color:var(--mat-expansion-container-text-color, var(--mat-app-on-surface));border-radius:var(--mat-expansion-container-shape)}.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:var(--mat-expansion-container-shape);border-top-left-radius:var(--mat-expansion-container-shape)}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:var(--mat-expansion-container-shape);border-bottom-left-radius:var(--mat-expansion-container-shape)}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible;font-family:var(--mat-expansion-container-text-font, var(--mat-app-body-large-font));font-size:var(--mat-expansion-container-text-size, var(--mat-app-body-large-size));font-weight:var(--mat-expansion-container-text-weight, var(--mat-app-body-large-weight));line-height:var(--mat-expansion-container-text-line-height, var(--mat-app-body-large-line-height));letter-spacing:var(--mat-expansion-container-text-tracking, var(--mat-app-body-large-tracking))}.mat-expansion-panel-content[style*=\\\"visibility: hidden\\\"] *{visibility:hidden !important}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px;border-top-color:var(--mat-expansion-actions-divider-color, var(--mat-app-outline))}.mat-action-row .mat-button-base,.mat-action-row .mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row .mat-button-base,[dir=rtl] .mat-action-row .mat-mdc-button-base{margin-left:0;margin-right:8px}\"],\n        encapsulation: 2,\n        data: {\n          animation: [matExpansionAnimations.bodyExpansion]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return MatExpansionPanel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Checks whether an animation is the initial setup animation. */\nfunction isInitialAnimation(event) {\n  return event.fromState === 'void';\n}\n/**\n * Actions of a `<mat-expansion-panel>`.\n */\nlet MatExpansionPanelActionRow = /*#__PURE__*/(() => {\n  class MatExpansionPanelActionRow {\n    static {\n      this.ɵfac = function MatExpansionPanelActionRow_Factory(t) {\n        return new (t || MatExpansionPanelActionRow)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatExpansionPanelActionRow,\n        selectors: [[\"mat-action-row\"]],\n        hostAttrs: [1, \"mat-action-row\"],\n        standalone: true\n      });\n    }\n  }\n  return MatExpansionPanelActionRow;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Header element of a `<mat-expansion-panel>`.\n */\nlet MatExpansionPanelHeader = /*#__PURE__*/(() => {\n  class MatExpansionPanelHeader {\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions, _animationMode, tabIndex) {\n      this.panel = panel;\n      this._element = _element;\n      this._focusMonitor = _focusMonitor;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._animationMode = _animationMode;\n      this._parentChangeSubscription = Subscription.EMPTY;\n      /** Tab index of the header. */\n      this.tabIndex = 0;\n      const accordionHideToggleChange = panel.accordion ? panel.accordion._stateChanges.pipe(filter(changes => !!(changes['hideToggle'] || changes['togglePosition']))) : EMPTY;\n      this.tabIndex = parseInt(tabIndex || '') || 0;\n      // Since the toggle state depends on an @Input on the panel, we\n      // need to subscribe and trigger change detection manually.\n      this._parentChangeSubscription = merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => {\n        return !!(changes['hideToggle'] || changes['disabled'] || changes['togglePosition']);\n      }))).subscribe(() => this._changeDetectorRef.markForCheck());\n      // Avoids focus being lost if the panel contained the focused element and was closed.\n      panel.closed.pipe(filter(() => panel._containsFocus())).subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n      if (defaultOptions) {\n        this.expandedHeight = defaultOptions.expandedHeight;\n        this.collapsedHeight = defaultOptions.collapsedHeight;\n      }\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * @docs-private\n     */\n    get disabled() {\n      return this.panel.disabled;\n    }\n    /** Toggles the expanded state of the panel. */\n    _toggle() {\n      if (!this.disabled) {\n        this.panel.toggle();\n      }\n    }\n    /** Gets whether the panel is expanded. */\n    _isExpanded() {\n      return this.panel.expanded;\n    }\n    /** Gets the expanded state string of the panel. */\n    _getExpandedState() {\n      return this.panel._getExpandedState();\n    }\n    /** Gets the panel id. */\n    _getPanelId() {\n      return this.panel.id;\n    }\n    /** Gets the toggle position for the header. */\n    _getTogglePosition() {\n      return this.panel.togglePosition;\n    }\n    /** Gets whether the expand indicator should be shown. */\n    _showToggle() {\n      return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Gets the current height of the header. Null if no custom height has been\n     * specified, and if the default height from the stylesheet should be used.\n     */\n    _getHeaderHeight() {\n      const isExpanded = this._isExpanded();\n      if (isExpanded && this.expandedHeight) {\n        return this.expandedHeight;\n      } else if (!isExpanded && this.collapsedHeight) {\n        return this.collapsedHeight;\n      }\n      return null;\n    }\n    /** Handle keydown event calling to toggle() if appropriate. */\n    _keydown(event) {\n      switch (event.keyCode) {\n        // Toggle for space and enter keys.\n        case SPACE:\n        case ENTER:\n          if (!hasModifierKey(event)) {\n            event.preventDefault();\n            this._toggle();\n          }\n          break;\n        default:\n          if (this.panel.accordion) {\n            this.panel.accordion._handleHeaderKeydown(event);\n          }\n          return;\n      }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * @param origin Origin of the action that triggered the focus.\n     * @docs-private\n     */\n    focus(origin, options) {\n      if (origin) {\n        this._focusMonitor.focusVia(this._element, origin, options);\n      } else {\n        this._element.nativeElement.focus(options);\n      }\n    }\n    ngAfterViewInit() {\n      this._focusMonitor.monitor(this._element).subscribe(origin => {\n        if (origin && this.panel.accordion) {\n          this.panel.accordion._handleHeaderFocus(this);\n        }\n      });\n    }\n    ngOnDestroy() {\n      this._parentChangeSubscription.unsubscribe();\n      this._focusMonitor.stopMonitoring(this._element);\n    }\n    static {\n      this.ɵfac = function MatExpansionPanelHeader_Factory(t) {\n        return new (t || MatExpansionPanelHeader)(i0.ɵɵdirectiveInject(MatExpansionPanel, 1), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.FocusMonitor), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵinjectAttribute('tabindex'));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatExpansionPanelHeader,\n        selectors: [[\"mat-expansion-panel-header\"]],\n        hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\", \"mat-focus-indicator\"],\n        hostVars: 15,\n        hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() {\n              return ctx._toggle();\n            })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) {\n              return ctx._keydown($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n            i0.ɵɵstyleProp(\"height\", ctx._getHeaderHeight());\n            i0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded())(\"mat-expansion-toggle-indicator-after\", ctx._getTogglePosition() === \"after\")(\"mat-expansion-toggle-indicator-before\", ctx._getTogglePosition() === \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n          }\n        },\n        inputs: {\n          expandedHeight: \"expandedHeight\",\n          collapsedHeight: \"collapsedHeight\",\n          tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)]\n        },\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c4,\n        decls: 5,\n        vars: 3,\n        consts: [[1, \"mat-content\"], [1, \"mat-expansion-indicator\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"viewBox\", \"0 -960 960 960\", \"aria-hidden\", \"true\", \"focusable\", \"false\"], [\"d\", \"M480-345 240-585l56-56 184 184 184-184 56 56-240 240Z\"]],\n        template: function MatExpansionPanelHeader_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c3);\n            i0.ɵɵelementStart(0, \"span\", 0);\n            i0.ɵɵprojection(1);\n            i0.ɵɵprojection(2, 1);\n            i0.ɵɵprojection(3, 2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(4, MatExpansionPanelHeader_Conditional_4_Template, 3, 1, \"span\", 1);\n          }\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-content-hide-toggle\", !ctx._showToggle());\n            i0.ɵɵadvance(4);\n            i0.ɵɵconditional(ctx._showToggle() ? 4 : -1);\n          }\n        },\n        styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1);height:var(--mat-expansion-header-collapsed-state-height);font-family:var(--mat-expansion-header-text-font, var(--mat-app-title-medium-font));font-size:var(--mat-expansion-header-text-size, var(--mat-app-title-medium-size));font-weight:var(--mat-expansion-header-text-weight, var(--mat-app-title-medium-weight));line-height:var(--mat-expansion-header-text-line-height, var(--mat-app-title-medium-line-height));letter-spacing:var(--mat-expansion-header-text-tracking, var(--mat-app-title-medium-tracking))}.mat-expansion-panel-header.mat-expanded{height:var(--mat-expansion-header-expanded-state-height)}.mat-expansion-panel-header[aria-disabled=true]{color:var(--mat-expansion-header-disabled-state-text-color)}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-header-hover-state-layer-color)}@media(hover: none){.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-container-background-color, var(--mat-app-surface))}}.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-keyboard-focused,.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-program-focused{background:var(--mat-expansion-header-focus-state-layer-color)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-content.mat-content-hide-toggle{margin-right:8px}[dir=rtl] .mat-content.mat-content-hide-toggle{margin-right:0;margin-left:8px}.mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-left:24px;margin-right:0}[dir=rtl] .mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-right:24px;margin-left:0}.mat-expansion-panel-header-title{color:var(--mat-expansion-header-text-color, var(--mat-app-on-surface))}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;flex-basis:0;margin-right:16px;align-items:center}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description{color:inherit}.mat-expansion-panel-header-description{flex-grow:2;color:var(--mat-expansion-header-description-color, var(--mat-app-on-surface-variant))}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle;color:var(--mat-expansion-header-indicator-color, var(--mat-app-on-surface-variant));display:var(--mat-expansion-legacy-header-indicator-display, inline-block)}.mat-expansion-indicator svg{width:24px;height:24px;margin:0 -8px;vertical-align:middle;fill:var(--mat-expansion-header-indicator-color, var(--mat-app-on-surface-variant));display:var(--mat-expansion-header-indicator-display, none)}.cdk-high-contrast-active .mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}\"],\n        encapsulation: 2,\n        data: {\n          animation: [matExpansionAnimations.indicatorRotate]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return MatExpansionPanelHeader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Description element of a `<mat-expansion-panel-header>`.\n */\nlet MatExpansionPanelDescription = /*#__PURE__*/(() => {\n  class MatExpansionPanelDescription {\n    static {\n      this.ɵfac = function MatExpansionPanelDescription_Factory(t) {\n        return new (t || MatExpansionPanelDescription)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatExpansionPanelDescription,\n        selectors: [[\"mat-panel-description\"]],\n        hostAttrs: [1, \"mat-expansion-panel-header-description\"],\n        standalone: true\n      });\n    }\n  }\n  return MatExpansionPanelDescription;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Title element of a `<mat-expansion-panel-header>`.\n */\nlet MatExpansionPanelTitle = /*#__PURE__*/(() => {\n  class MatExpansionPanelTitle {\n    static {\n      this.ɵfac = function MatExpansionPanelTitle_Factory(t) {\n        return new (t || MatExpansionPanelTitle)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatExpansionPanelTitle,\n        selectors: [[\"mat-panel-title\"]],\n        hostAttrs: [1, \"mat-expansion-panel-header-title\"],\n        standalone: true\n      });\n    }\n  }\n  return MatExpansionPanelTitle;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Directive for a Material Design Accordion.\n */\nlet MatAccordion = /*#__PURE__*/(() => {\n  class MatAccordion extends CdkAccordion {\n    constructor() {\n      super(...arguments);\n      /** Headers belonging to this accordion. */\n      this._ownHeaders = new QueryList();\n      /** Whether the expansion indicator should be hidden. */\n      this.hideToggle = false;\n      /**\n       * Display mode used for all expansion panels in the accordion. Currently two display\n       * modes exist:\n       *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n       *     panel at a different elevation from the rest of the accordion.\n       *  flat - no spacing is placed around expanded panels, showing all panels at the same\n       *     elevation.\n       */\n      this.displayMode = 'default';\n      /** The position of the expansion indicator. */\n      this.togglePosition = 'after';\n    }\n    ngAfterContentInit() {\n      this._headers.changes.pipe(startWith(this._headers)).subscribe(headers => {\n        this._ownHeaders.reset(headers.filter(header => header.panel.accordion === this));\n        this._ownHeaders.notifyOnChanges();\n      });\n      this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap().withHomeAndEnd();\n    }\n    /** Handles keyboard events coming in from the panel headers. */\n    _handleHeaderKeydown(event) {\n      this._keyManager.onKeydown(event);\n    }\n    _handleHeaderFocus(header) {\n      this._keyManager.updateActiveItem(header);\n    }\n    ngOnDestroy() {\n      super.ngOnDestroy();\n      this._keyManager?.destroy();\n      this._ownHeaders.destroy();\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatAccordion_BaseFactory;\n        return function MatAccordion_Factory(t) {\n          return (ɵMatAccordion_BaseFactory || (ɵMatAccordion_BaseFactory = i0.ɵɵgetInheritedFactory(MatAccordion)))(t || MatAccordion);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatAccordion,\n        selectors: [[\"mat-accordion\"]],\n        contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._headers = _t);\n          }\n        },\n        hostAttrs: [1, \"mat-accordion\"],\n        hostVars: 2,\n        hostBindings: function MatAccordion_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-accordion-multi\", ctx.multi);\n          }\n        },\n        inputs: {\n          hideToggle: [2, \"hideToggle\", \"hideToggle\", booleanAttribute],\n          displayMode: \"displayMode\",\n          togglePosition: \"togglePosition\"\n        },\n        exportAs: [\"matAccordion\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_ACCORDION,\n          useExisting: MatAccordion\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatAccordion;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatExpansionModule = /*#__PURE__*/(() => {\n  class MatExpansionModule {\n    static {\n      this.ɵfac = function MatExpansionModule_Factory(t) {\n        return new (t || MatExpansionModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatExpansionModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule, CdkAccordionModule, PortalModule]\n      });\n    }\n  }\n  return MatExpansionModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations };\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Subject } from 'rxjs';\nimport { takeUntil, filter } from 'rxjs/operators';\nimport { Auth } from '@angular/fire/auth';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { NotificationService } from 'src/app/util/service/notification.service';\nimport { SplitwiseGroup, SplitTransaction, SplitSettlement } from 'src/app/util/models/splitwise.model';\nimport { AddMemberDialogComponent } from '../add-member-dialog/add-member-dialog.component';\nimport { EditTransactionDialogComponent } from '../edit-transaction-dialog/edit-transaction-dialog.component';\n\n// NgRx\nimport { AppState } from '../../../store/app.state';\nimport * as SplitwiseActions from '../store/splitwise.actions';\nimport { selectSplitwiseState } from '../store/splitwise.selectors';\nimport { ConfirmDialogComponent } from 'src/app/util/components/confirm-dialog/confirm-dialog.component';\nimport { SplitwiseService } from '../services/splitwise.service';\nimport { CurrencyService } from 'src/app/util/service/currency.service';\n\n@Component({\n  selector: 'app-group-details',\n  templateUrl: './group-details.component.html',\n  styleUrls: ['./group-details.component.scss']\n})\nexport class GroupDetailsComponent implements OnInit, OnDestroy {\n  group: SplitwiseGroup | null = null;\n  transactions: SplitTransaction[] = [];\n  settlements: SplitSettlement[] = [];\n  error: string | null = null;\n  currentUser: any = null;\n  isMobile: boolean = false;\n  isLoading: boolean = false;\n  Math = Math; // Make Math available in template\n  showBalances: boolean = true; // Toggle for balance display\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private auth: Auth,\n    private store: Store<AppState>,\n    private dialog: MatDialog,\n    private notificationService: NotificationService,\n    private breakpointObserver: BreakpointObserver,\n    private splitwiseService: SplitwiseService,\n    private currencyService: CurrencyService\n  ) {\n    // Observe breakpoints for mobile detection\n    this.breakpointObserver.observe([Breakpoints.Handset])\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(result => {\n        this.isMobile = result.matches;\n      });\n  }\n\n  ngOnInit(): void {\n    this.currentUser = this.auth.currentUser;\n    this.subscribeToStore();\n    this.loadGroupDetails();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private subscribeToStore(): void {\n    this.store.select(selectSplitwiseState)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(state => {\n        this.isLoading = state.loading;\n        this.error = state.error;\n\n        // Get the group from the selected group or find by ID\n        const groupId = this.route.snapshot.paramMap.get('id');\n        if (groupId) {\n          this.group = state.groups.find(g => g.id === groupId) || null;\n\n          // If group not found in store, try to load it\n          if (!this.group && !this.isLoading) {\n            this.splitwiseService.getGroupById(groupId).then(group => {\n              this.group = group;\n            });\n          }\n        }\n\n        // Get transactions and settlements for the current group\n        this.transactions = state.transactions.filter(t => t.groupId === groupId);\n        this.settlements = state.settlements.filter(s => s.groupId === groupId);\n\n        // Debug balance calculations\n        if (this.transactions.length > 0) {\n          console.log('=== DEBUG: Balance Calculations ===');\n          this.calculateNetBalances();\n          console.log('=== END DEBUG ===');\n        }\n\n        // Show error notification if there's an error\n        if (this.error) {\n          this.notificationService.error(this.error);\n          this.store.dispatch(SplitwiseActions.clearError());\n        }\n\n        // Log state changes for debugging\n        console.log('Store state updated:', {\n          loading: state.loading,\n          transactionsCount: state.transactions.length,\n          settlementsCount: state.settlements.length,\n          error: state.error\n        });\n      });\n  }\n\n  // Reload data after successful operations\n  private reloadData(): void {\n    const groupId = this.route.snapshot.paramMap.get('id');\n    if (groupId) {\n      this.store.dispatch(SplitwiseActions.loadTransactions({ groupId }));\n      this.store.dispatch(SplitwiseActions.loadSettlements({ groupId }));\n    }\n  }\n\n  private loadGroupDetails(): void {\n    const groupId = this.route.snapshot.paramMap.get('id');\n    if (groupId) {\n      this.store.dispatch(SplitwiseActions.loadGroupById({ groupId }));\n      this.store.dispatch(SplitwiseActions.loadTransactions({ groupId }));\n      this.store.dispatch(SplitwiseActions.loadSettlements({ groupId }));\n    }\n  }\n\n  goBack(): void {\n    this.router.navigate(['dashboard/splitwise']);\n  }\n\n  openAddMemberDialog(): void {\n    if (!this.group) return;\n\n    const dialogRef = this.dialog.open(AddMemberDialogComponent, {\n      width: '400px',\n      maxWidth: '90vw',\n      data: { group: this.group },\n      disableClose: true,\n      panelClass: 'mobile-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe((result: any) => {\n      if (result) {\n        if (result.action === 'delete') {\n          this.store.dispatch(SplitwiseActions.removeMember({\n            groupId: this.group!.id!,\n            userId: result.userId\n          }));\n        } else {\n        this.store.dispatch(SplitwiseActions.addMember({\n          groupId: this.group!.id!,\n          request: result\n        }));\n        }\n      }\n    });\n  }\n\n  deleteGroup(): void {\n    if (!this.group) return;\n    \n    this.dialog.open(ConfirmDialogComponent, {\n      width: '300px',\n      data: {\n        title: 'Delete Group',\n        message: 'Are you sure you want to delete the group \"${this.group.name}\"?',\n        confirmText: 'Delete',\n        cancelText: 'Cancel',\n      },\n    }).afterClosed().subscribe((result: any) => {\n      if (result) {\n        this.store.dispatch(SplitwiseActions.deleteGroup({ groupId: this.group?.id! }));\n        this.goBack();\n      }\n    });\n  }\n\n  getCurrentUserRole(): string {\n    if (!this.group || !this.currentUser) return '';\n\n    const member = this.group.members.find(m => m.userId === this.currentUser.uid);\n    return member?.role || '';\n  }\n\n  canManageGroup(): boolean {\n    const role = this.getCurrentUserRole();\n    return role === 'admin';\n  }\n\n  getGroupMemberCount(): number {\n    return this.group?.members.filter(member => member.isActive).length || 0;\n  }\n\n  formatDate(date: Date | any): string {\n    if (!date) return '';\n    const dateObj = date.toDate ? date.toDate() : new Date(date);\n    return dateObj.toLocaleDateString();\n  }\n\n  formatCurrency(amount: number): string {\n    return this.currencyService.formatAmount(amount);\n  }\n\n  getTotalBalance(): number {\n    if (!this.group) return 0;\n    // Calculate total balance from transactions instead of member.balance\n    return this.transactions.reduce((total, transaction) => {\n      return total + transaction.splits.reduce((splitTotal, split) => splitTotal + split.amount, 0);\n    }, 0);\n  }\n\n  // Improved algorithm to calculate net balances considering settlements\n  calculateNetBalances(): Record<string, Record<string, number>> {\n    const balances: Record<string, Record<string, number>> = {};\n\n    // Step 1: Process Transactions (Expenses)\n    for (const transaction of this.transactions) {\n      const paidBy = transaction.createdBy; // Who paid for the transaction\n      \n      for (const split of transaction.splits) {\n        const { userId, amount: splitAmount } = split;\n        \n        if (userId === paidBy) {\n          // The person who paid doesn't owe anyone, but others owe them\n          continue;\n        } else {\n          // This person owes the person who paid\n          if (!balances[userId]) balances[userId] = {};\n          if (!balances[userId][paidBy]) balances[userId][paidBy] = 0;\n          \n          balances[userId][paidBy] += splitAmount;\n        }\n      }\n    }\n\n    // Step 2: Process Settlements\n    for (const settlement of this.settlements) {\n      if (settlement.status === 'cancelled') continue; // Skip cancelled settlements\n      \n      const { fromUserId, toUserId, amount } = settlement;\n\n      // fromUserId paid toUserId, so reduce debt\n      if (!balances[fromUserId]) balances[fromUserId] = {};\n      if (!balances[fromUserId][toUserId]) balances[fromUserId][toUserId] = 0;\n\n      balances[fromUserId][toUserId] -= amount;\n    }\n\n    // Step 3: Simplify balances to show only net one-way debts\n    const simplifiedBalances = this.simplifyBalances(balances);\n    return simplifiedBalances;\n  }\n\n  // Simplify balances to show only net one-way debts\n  simplifyBalances(balances: Record<string, Record<string, number>>): Record<string, Record<string, number>> {\n    const result: Record<string, Record<string, number>> = {};\n    const visited = new Set<string>();\n\n    for (const userA in balances) {\n      for (const userB in balances[userA]) {\n        const key = `${userA}_${userB}`;\n        const reverseKey = `${userB}_${userA}`;\n        \n        if (visited.has(key) || visited.has(reverseKey)) continue;\n\n        const amountAB = balances[userA]?.[userB] || 0;\n        const amountBA = balances[userB]?.[userA] || 0;\n\n        const net = amountAB - amountBA;\n\n        if (net > 0) {\n          if (!result[userA]) result[userA] = {};\n          result[userA][userB] = Math.round(net * 100) / 100;\n        } else if (net < 0) {\n          if (!result[userB]) result[userB] = {};\n          result[userB][userA] = Math.round(-net * 100) / 100;\n        }\n\n        visited.add(key);\n        visited.add(reverseKey);\n      }\n    }\n\n    return result;\n  }\n\n  getMemberBalances(): any[] {\n    if (!this.group) return [];\n\n    // Step 1: Calculate simplified net balances\n    const simplifiedBalances = this.calculateNetBalances();\n    \n    // Step 2: Convert to the expected format for display\n    const balances: any[] = [];\n    \n    this.group.members.forEach(member => {\n      const memberBalances = simplifiedBalances[member.userId] || {};\n      \n      // Calculate total owed by this member to others (only positive amounts)\n      let totalOwed = 0;\n      Object.values(memberBalances).forEach((amount: any) => {\n        if (amount > 0) {\n          totalOwed += amount;\n        }\n      });\n      \n      // Calculate total amount this member has paid for others (transactions they created)\n      let totalPaid = 0;\n      this.transactions.forEach(transaction => {\n        if (transaction.createdBy === member.userId) {\n          // This member paid for this transaction\n          // Calculate how much they paid for others (excluding their own share)\n          const memberSplit = transaction.splits.find(split => split.userId === member.userId);\n          if (memberSplit) {\n            // They paid the total amount, but their own share should be excluded\n            totalPaid += transaction.totalAmount - memberSplit.amount;\n          } else {\n            // If they're not in the splits, they paid the full amount for others\n            totalPaid += transaction.totalAmount;\n          }\n        }\n      });\n      \n      // Calculate net balance (positive = they owe you, negative = you owe them)\n      const netBalance = totalPaid - totalOwed;\n      \n      balances.push({\n        userId: member.userId,\n        displayName: member.displayName,\n        email: member.email,\n        totalPaid: totalPaid,\n        totalOwed: totalOwed,\n        netBalance: netBalance,\n        simplifiedBalances: memberBalances // Keep simplified balances for reference\n      });\n    });\n\n    return balances.sort((a, b) => b.netBalance - a.netBalance);\n  }\n\n  // Get detailed balance breakdown for a user (simplified)\n  getDetailedBalanceBreakdown(userId: string): any[] {\n    const simplifiedBalances = this.calculateNetBalances();\n    const userBalances = simplifiedBalances[userId] || {};\n    const breakdown: any[] = [];\n\n    // Check what this user owes to others (only positive amounts)\n    Object.entries(userBalances).forEach(([otherUserId, amount]) => {\n      if (amount > 0) {\n        breakdown.push({\n          type: 'owes',\n          otherUserId: otherUserId,\n          otherUserName: this.getMemberName(otherUserId),\n          amount: amount,\n          message: `${this.getMemberName(userId)} owes ${this.getMemberName(otherUserId)} ${this.formatCurrency(amount)}`\n        });\n      }\n    });\n\n    // Check what others owe to this user\n    Object.keys(simplifiedBalances).forEach(otherUserId => {\n      if (otherUserId !== userId) {\n        const otherBalances = simplifiedBalances[otherUserId] || {};\n        const owedToUser = otherBalances[userId] || 0;\n        \n        if (owedToUser > 0) {\n          breakdown.push({\n            type: 'owed',\n            otherUserId: otherUserId,\n            otherUserName: this.getMemberName(otherUserId),\n            amount: owedToUser,\n            message: `${this.getMemberName(otherUserId)} owes ${this.getMemberName(userId)} ${this.formatCurrency(owedToUser)}`\n          });\n        }\n      }\n    });\n\n    return breakdown.sort((a, b) => b.amount - a.amount);\n  }\n\n  // Get balance between two specific users (simplified)\n  getBalanceBetweenUsers(userId1: string, userId2: string): number {\n    const simplifiedBalances = this.calculateNetBalances();\n    \n    const balance1to2 = simplifiedBalances[userId1]?.[userId2] || 0;\n    const balance2to1 = simplifiedBalances[userId2]?.[userId1] || 0;\n    \n    // Return net balance (positive = userId1 owes userId2, negative = userId2 owes userId1)\n    return balance1to2 - balance2to1;\n  }\n\n  // Get simplified balance summary\n  getBalanceSummary(): { owes: any[], owed: any[] } {\n    const balances = this.getMemberBalances();\n    const owes = balances.filter(b => b.netBalance < 0);\n    const owed = balances.filter(b => b.netBalance > 0);\n    return { owes, owed };\n  }\n\n  // Calculate who owes what to whom\n  getSettlementSuggestions(): any[] {\n    const balances = this.getMemberBalances();\n    const suggestions: any[] = [];\n    const transactions = this.transactions;\n    \n    if (!this.currentUser?.uid) return suggestions;\n\n    // Find current user's balance\n    const currentUserBalance = balances.find(b => b.userId === this.currentUser.uid);\n    if (!currentUserBalance) return suggestions;\n\n    const currentUserNetBalance = currentUserBalance.netBalance;\n\n    if (currentUserNetBalance < 0) {\n      // Current user owes money - show who they should pay\n      const debtAmount = Math.abs(currentUserNetBalance);\n      const creditors = balances.filter(b => b.netBalance > 0 && b.userId !== this.currentUser.uid);\n      \n      creditors.forEach(creditor => {\n        const availableCredit = creditor.netBalance;\n        \n        // Use the new balance calculation to get exact amount owed\n        const exactAmountOwed = this.getBalanceBetweenUsers(this.currentUser.uid, creditor.userId);\n        \n        if (exactAmountOwed > 0) {\n          const settlementAmount = Math.min(exactAmountOwed, availableCredit);\n          \n          if (settlementAmount > 0) {\n            suggestions.push({\n              fromUserId: this.currentUser.uid,\n              fromUserName: currentUserBalance.displayName,\n              toUserId: creditor.userId,\n              toUserName: creditor.displayName,\n              amount: settlementAmount,\n              currency: this.group?.currency || 'USD',\n              type: 'you_owe',\n              originalTransactionId: transactions.find(t => t.splits.some(s => s.userId === creditor.userId))?.originalTransactionId || ''\n            });\n          }\n        }\n      });\n    } else if (currentUserNetBalance > 0) {\n      // Current user is owed money - show who should pay them\n      const creditAmount = currentUserNetBalance;\n      const debtors = balances.filter(b => b.netBalance < 0 && b.userId !== this.currentUser.uid);\n      \n      debtors.forEach(debtor => {\n        // Use the new balance calculation to get exact amount owed\n        const exactAmountOwed = this.getBalanceBetweenUsers(debtor.userId, this.currentUser.uid);\n        \n        if (exactAmountOwed > 0) {\n          const settlementAmount = Math.min(exactAmountOwed, creditAmount);\n          \n          if (settlementAmount > 0) {\n            suggestions.push({\n              fromUserId: debtor.userId,\n              fromUserName: debtor.displayName,\n              toUserId: this.currentUser.uid,\n              toUserName: currentUserBalance.displayName,\n              amount: settlementAmount,\n              currency: this.group?.currency || 'USD',\n              type: 'owed_to_you',\n              originalTransactionId: transactions.find(t => t.splits.some(s => s.userId === debtor.userId))?.originalTransactionId || ''\n            });\n          }\n        }\n      });\n    } else {\n      // Current user is balanced - show other settlements that don't involve them\n      const owes = balances.filter(b => b.netBalance < 0 && b.userId !== this.currentUser.uid);\n      const owed = balances.filter(b => b.netBalance > 0 && b.userId !== this.currentUser.uid);\n\n      owes.forEach(debtor => {\n        const debtAmount = Math.abs(debtor.netBalance);\n        let remainingDebt = debtAmount;\n\n        owed.forEach(creditor => {\n          if (remainingDebt <= 0) return;\n          \n          const availableCredit = creditor.netBalance;\n          \n          // Use the new balance calculation to get exact amount owed\n          const exactAmountOwed = this.getBalanceBetweenUsers(debtor.userId, creditor.userId);\n          \n          if (exactAmountOwed > 0) {\n            const settlementAmount = Math.min(remainingDebt, availableCredit, exactAmountOwed);\n            \n            if (settlementAmount > 0) {\n              suggestions.push({\n                fromUserId: debtor.userId,\n                fromUserName: debtor.displayName,\n                toUserId: creditor.userId,\n                toUserName: creditor.displayName,\n                amount: settlementAmount,\n                currency: this.group?.currency || 'USD',\n                type: 'others',\n                originalTransactionId: transactions.find(t => t.splits.some(s => s.userId === debtor.userId))?.originalTransactionId || ''\n              });\n              \n              remainingDebt -= settlementAmount;\n            }\n          }\n        });\n      });\n    }\n\n    // Filter out suggestions that already have settlements\n    return suggestions.filter(suggestion => {\n      const existingSettlement = this.settlements.find(s => \n        s.fromUserId === suggestion.fromUserId && \n        s.toUserId === suggestion.toUserId &&\n        s.status !== 'cancelled'\n      );\n      return !existingSettlement;\n    });\n  }\n\n  // Create settlement between members\n  createSettlement(suggestion: any): void {\n    if (!this.group) {\n      this.notificationService.error('Group not found');\n      return;\n    }\n\n    if (!this.currentUser?.uid) {\n      this.notificationService.error('User not authenticated');\n      return;\n    }\n\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      width: '400px',\n      data: {\n        title: 'Settlement',\n        message: `Confirm settlement of ${this.formatCurrency(suggestion.amount)} from ${suggestion.fromUserName} to ${suggestion.toUserName}?`,\n        confirmText: 'Confirm',\n        cancelText: 'Cancel',\n      },\n    });\n\n    dialogRef.afterClosed().subscribe((result: boolean) => {\n      if (result) {\n        try {\n          console.log('Creating settlement:', suggestion);\n\n          this.store.dispatch(SplitwiseActions.createSettlement({\n            groupId: this.group!.id!,\n            fromUserId: suggestion.fromUserId,\n            toUserId: suggestion.toUserId,\n            amount: suggestion.amount,\n            notes: `Settlement created from balance summary`,\n            originalTransactionId: suggestion.originalTransactionId\n          }));\n\n          // Show success notification\n          this.notificationService.success('Settlement created successfully');\n          \n          // Reload data after a short delay to ensure the update is processed\n          setTimeout(() => {\n            this.reloadData();\n          }, 1000);\n        } catch (error) {\n          console.error('Error creating settlement:', error);\n          this.notificationService.error('Failed to create settlement');\n        }\n      }\n    });\n  }\n\n  // Toggle balance display\n  toggleBalanceDisplay(): void {\n    this.showBalances = !this.showBalances;\n  }\n\n  // Get member balance color\n  getBalanceColor(balance: number): string {\n    if (balance > 0) return 'positive';\n    if (balance < 0) return 'negative';\n    return 'neutral';\n  }\n\n  // Get settlement subtitle based on current user's situation\n  getSettlementSubtitle(): string {\n    if (!this.currentUser?.uid) return 'Quick settlements to balance the group';\n    \n    const balances = this.getMemberBalances();\n    const currentUserBalance = balances.find(b => b.userId === this.currentUser.uid);\n    \n    if (!currentUserBalance) return 'Quick settlements to balance the group';\n    \n    if (currentUserBalance.netBalance < 0) {\n      return 'You owe money to these members';\n    } else if (currentUserBalance.netBalance > 0) {\n      return 'These members owe you money';\n    } else {\n      return 'Other members can settle their balances';\n    }\n  }\n\n  // Get personalized settlement message\n  getSettlementMessage(suggestion: any): string {\n    switch (suggestion.type) {\n      case 'you_owe':\n        return `You owe ${suggestion.toUserName}`;\n      case 'owed_to_you':\n        return `${suggestion.fromUserName} owes you`;\n      case 'others':\n        return `${suggestion.fromUserName} owes ${suggestion.toUserName}`;\n      default:\n        return 'Settlement suggestion';\n    }\n  }\n\n  // Get current user status message\n  getCurrentUserStatus(balance: number): string {\n    if (balance < 0) {\n      return '(You owe)';\n    } else if (balance > 0) {\n      return '(You are owed)';\n    } else {\n      return '(Balanced)';\n    }\n  }\n\n  // Get settlement status for a specific user pair\n  getSettlementStatus(fromUserId: string, toUserId: string): { exists: boolean; status: string; amount: number } {\n    const settlement = this.settlements.find(s => \n      s.fromUserId === fromUserId && \n      s.toUserId === toUserId\n    );\n    \n    if (!settlement) {\n      return { exists: false, status: '', amount: 0 };\n    }\n    \n    return { \n      exists: true, \n      status: settlement.status, \n      amount: settlement.amount \n    };\n  }\n\n  // Check if a settlement suggestion is already pending\n  isSettlementPending(fromUserId: string, toUserId: string): boolean {\n    const settlement = this.settlements.find(s => \n      s.fromUserId === fromUserId && \n      s.toUserId === toUserId && \n      s.status === 'pending'\n    );\n    return !!settlement;\n  }\n\n  // Check if a settlement suggestion is already completed\n  isSettlementCompleted(fromUserId: string, toUserId: string): boolean {\n    const settlement = this.settlements.find(s => \n      s.fromUserId === fromUserId && \n      s.toUserId === toUserId && \n      s.status === 'completed'\n    );\n    return !!settlement;\n  }\n\n  // Get existing settlements summary\n  getExistingSettlementsSummary(): any[] {\n    if (!this.currentUser?.uid) return [];\n\n    const summary: any[] = [];\n    \n    // Get settlements involving current user\n    const userSettlements = this.settlements.filter(s => \n      (s.fromUserId === this.currentUser.uid || s.toUserId === this.currentUser.uid) &&\n      s.status !== 'cancelled'\n    );\n\n    userSettlements.forEach(settlement => {\n      const isFromUser = settlement.fromUserId === this.currentUser.uid;\n      const otherUserId = isFromUser ? settlement.toUserId : settlement.fromUserId;\n      const otherUserName = this.getMemberName(otherUserId);\n      \n      summary.push({\n        fromUserId: settlement.fromUserId,\n        fromUserName: this.getMemberName(settlement.fromUserId),\n        toUserId: settlement.toUserId,\n        toUserName: this.getMemberName(settlement.toUserId),\n        amount: settlement.amount,\n        currency: settlement.currency,\n        status: settlement.status,\n        isInvolvingCurrentUser: true,\n        isFromCurrentUser: isFromUser,\n        otherUserName: otherUserName\n      });\n    });\n\n    return summary;\n  }\n\n  // Get pending settlements count\n  getPendingSettlementsCount(): number {\n    return this.settlements.filter(s => s.status === 'pending').length;\n  }\n\n  // Get completed settlements count\n  getCompletedSettlementsCount(): number {\n    return this.settlements.filter(s => s.status === 'completed').length;\n  }\n\n  // Get completed settlements\n  getCompletedSettlements(): SplitSettlement[] {\n    return this.settlements.filter(s => s.status === 'completed');\n  }\n\n\n\n  getTransactionCreatorName(transaction: SplitTransaction): string {\n    return this.getMemberName(transaction.createdBy);\n  }\n\n  // Get transaction title\n  getTransactionTitle(transaction: SplitTransaction): string {\n    const memberCount = transaction.splits.length;\n    return `Transaction (${memberCount} members)`;\n  }\n\n\n\n  getTotalTransactionAmount(): number {\n    return this.transactions.reduce((total, transaction) => total + transaction.totalAmount, 0);\n  }\n\n  getTransactionCount(): number {\n    return this.transactions.length;\n  }\n\n  getSettlementCount(): number {\n    return this.settlements.length;\n  }\n\n  getMemberName(userId: string): string {\n    if (!this.group) return 'Unknown';\n    const member = this.group.members.find(m => m.userId === userId);\n    return member?.displayName || 'Unknown';\n  }\n\n  // Debug method to show transaction details\n  getTransactionDetails(): any[] {\n    return this.transactions.map(transaction => {\n      const totalSplitAmount = transaction.splits.reduce((sum, split) => sum + split.amount, 0);\n      const splitRatio = transaction.totalAmount / totalSplitAmount;\n      \n      return {\n        id: transaction.id,\n        totalAmount: transaction.totalAmount,\n        paidBy: this.getMemberName(transaction.createdBy),\n        totalSplitAmount: totalSplitAmount,\n        splitRatio: splitRatio,\n        splits: transaction.splits.map(split => ({\n          userId: split.userId,\n          userName: this.getMemberName(split.userId),\n          splitAmount: split.amount,\n          actualAmount: split.amount * splitRatio,\n          isPaidBy: split.userId === transaction.createdBy\n        }))\n      };\n    });\n  }\n\n\n\n  toggleMembers(): void {\n    // Navigate to the members page instead of toggling\n    this.router.navigate(['dashboard/splitwise/members', this.group?.id]);\n  }\n\n  addTransaction(): void {\n    // Navigate to add transaction page or open dialog\n    this.router.navigate(['dashboard/transactions'], {\n      queryParams: { \n        splitGroupId: this.group?.id,\n        returnUrl: this.router.url\n      }\n    });\n  }\n\n  openEditTransactionDialog(transaction: SplitTransaction): void {\n    if (!this.group) return;\n\n    const dialogRef = this.dialog.open(EditTransactionDialogComponent, {\n      width: '700px',\n      maxWidth: '90vw',\n      maxHeight: '90vh',\n      data: {\n        transaction: transaction,\n        groupMembers: this.group.members\n      },\n      disableClose: true,\n      panelClass: 'edit-transaction-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe((result: any) => {\n      if (result) {\n        // Update the transaction with new splits\n        this.splitwiseService.updateSplitTransaction(transaction.id!, {\n          amount: result.totalAmount,\n          splits: result.splits\n        }).then(() => {\n          this.notificationService.success('Transaction updated successfully');\n          this.reloadData();\n        }).catch((error) => {\n          console.error('Error updating transaction:', error);\n          this.notificationService.error('Failed to update transaction');\n        });\n      }\n    });\n  }\n} ","<div class=\"group-details-container\">\n\t<!-- Loading State -->\n\t<div *ngIf=\"isLoading\" class=\"loading-state\">\n\t\t<mat-spinner diameter=\"40\"></mat-spinner>\n\t\t<p>Loading group details...</p>\n\t</div>\n\n\t<!-- Main Content -->\n\t<div *ngIf=\"!isLoading && group\" class=\"main-content\">\n\t\t<!-- Header -->\n\t\t<div class=\"header\">\n\t\t\t<div class=\"header-content\">\n\t\t\t\t<div class=\"header-navigation\">\n\t\t\t\t\t<button mat-icon-button (click)=\"goBack()\" class=\"back-btn !z-[999]\" aria-label=\"Go back\">\n\t\t\t\t\t\t<mat-icon (click)=\"goBack()\">arrow_back</mat-icon>\n\t\t\t\t\t</button><span class=\"group-title\">{{ group.name | titlecase }}</span>\n\t\t\t\t\t<button mat-icon-button [matMenuTriggerFor]=\"groupMenu\" class=\"more-actions-btn\" aria-label=\"More options\">\n\t\t\t\t\t\t<mat-icon>more_vert</mat-icon>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"header-actions\">\n\t\t\t\t\t<mat-menu #groupMenu=\"matMenu\" class=\"group-menu\">\n\t\t\t\t\t\t<button mat-menu-item (click)=\"openAddMemberDialog()\" class=\"menu-item\">\n\t\t\t\t\t\t\t<mat-icon>person_add</mat-icon>\n\t\t\t\t\t\t\t<span>Add Member</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<mat-divider></mat-divider>\n\t\t\t\t\t\t<button mat-menu-item (click)=\"deleteGroup()\" class=\"delete-action\">\n\t\t\t\t\t\t\t<mat-icon>delete</mat-icon>\n\t\t\t\t\t\t\t<span>Delete Group</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</mat-menu>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<!-- Group Stats -->\n\t\t<div class=\"stats-section\">\n\t\t\t<mat-card class=\"stats-card\">\n\t\t\t\t<div class=\"stats-grid\">\n\t\t\t\t\t<div class=\"stat-item\">\n\t\t\t\t\t\t<div class=\"stat-content\" (click)=\"openAddMemberDialog()\">\n\t\t\t\t\t\t\t<div class=\"stat-value\">{{ getGroupMemberCount() }}</div>\n\t\t\t\t\t\t\t<div class=\"stat-label\">Members</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"stat-item\">\n\t\t\t\t\t\t<div class=\"stat-content\">\n\t\t\t\t\t\t\t<div class=\"stat-value\">{{ formatCurrency(getTotalBalance()) }}</div>\n\t\t\t\t\t\t\t<div class=\"stat-label\">Total Balance</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</mat-card>\n\t\t</div>\n\n\t\t<!-- Member Balances Section -->\n\t\t<div class=\"balances-section\" *ngIf=\"showBalances\">\n\t\t\t<mat-card class=\"balances-card\">\n\t\t\t\t<mat-card-header>\n\t\t\t\t\t<mat-card-title>\n\t\t\t\t\t\t<mat-icon>account_balance_wallet</mat-icon>\n\t\t\t\t\t\t<div class=\"flex justify-between items-center w-full\">\n\t\t\t\t\t\t\t<span>Member Balances</span>\n\t\t\t\t\t\t\t<button  mat-icon-button (click)=\"openAddMemberDialog()\" class=\"add-transaction-btn\" aria-label=\"Add Member\">\n\t\t\t\t\t\t\t\t<mat-icon>add</mat-icon>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t</mat-card-title>\n\t\t\t\t\t<!-- <mat-card-subtitle>\n\t\t\t\t\t\tWho owes what to whom\n\t\t\t\t\t</mat-card-subtitle> -->\n\t\t\t\t</mat-card-header>\n\t\t\t\t<mat-card-content>\n\t\t\t\t\t<div class=\"balances-list\">\n\t\t\t\t\t\t<div *ngFor=\"let balance of getMemberBalances()\" class=\"balance-item\" [class.current-user]=\"balance.userId === currentUser?.uid\">\n\t\t\t\t\t\t\t<div class=\"balance-info\">\n\t\t\t\t\t\t\t\t<div class=\"member-name\">\n\t\t\t\t\t\t\t\t\t{{ balance.displayName | titlecase }}\n\t\t\t\t\t\t\t\t\t<span *ngIf=\"balance.userId === currentUser?.uid\" class=\"current-user-badge\">(You)</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"balance-details\">\n\t\t\t\t\t\t\t\t\t<span class=\"paid\">Paid: {{ formatCurrency(balance.totalPaid) }}</span>\n\t\t\t\t\t\t\t\t\t<span class=\"owed\">Owed: {{ formatCurrency(balance.totalOwed) }}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"net-balance\" [class]=\"getBalanceColor(balance.netBalance)\">\n\t\t\t\t\t\t\t\t{{ formatCurrency(balance.netBalance) }}\n\t\t\t\t\t\t\t\t<span *ngIf=\"balance.userId === currentUser?.uid\" class=\"status-indicator\">\n\t\t\t\t\t\t\t\t\t{{ getCurrentUserStatus(balance.netBalance) }}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<!-- Detailed Balance Breakdown -->\n\t\t\t\t\t<div class=\"detailed-balances\" *ngIf=\"currentUser?.uid\">\n\t\t\t\t\t\t<mat-expansion-panel>\n\t\t\t\t\t\t\t<mat-expansion-panel-header>\n\t\t\t\t\t\t\t\t<mat-panel-title>\n\t\t\t\t\t\t\t\t\t<mat-icon>account_tree</mat-icon>\n\t\t\t\t\t\t\t\t\t<span *ngIf=\"getDetailedBalanceBreakdown(currentUser.uid).length === 0\"> All balances are settled!</span>\n\t\t\t\t\t\t\t\t\t<span *ngIf=\"getDetailedBalanceBreakdown(currentUser.uid).length > 0\">See who owes what to whom</span>\n\t\t\t\t\t\t\t\t</mat-panel-title>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</mat-expansion-panel-header>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"breakdown-list\">\n\t\t\t\t\t\t\t\t<div *ngFor=\"let breakdown of getDetailedBalanceBreakdown(currentUser.uid)\" class=\"breakdown-item\" [class]=\"breakdown.type\">\n\t\t\t\t\t\t\t\t\t<div class=\"breakdown-info\">\n\t\t\t\t\t\t\t\t\t\t<mat-icon [class]=\"breakdown.type === 'owes' ? 'arrow_upward' : 'arrow_downward'\">\n\t\t\t\t\t\t\t\t\t\t\t{{ breakdown.type === 'owes' ? 'arrow_upward' : 'arrow_downward' }}\n\t\t\t\t\t\t\t\t\t\t</mat-icon>\n\t\t\t\t\t\t\t\t\t\t<span class=\"breakdown-message\">{{ breakdown.message }}</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"breakdown-amount\" [class]=\"breakdown.type\">\n\t\t\t\t\t\t\t\t\t\t{{ formatCurrency(breakdown.amount) }}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div *ngIf=\"getDetailedBalanceBreakdown(currentUser.uid).length === 0\" class=\"no-breakdown\">\n\t\t\t\t\t\t\t\t\t<mat-icon>check_circle</mat-icon>\n\t\t\t\t\t\t\t\t\t<span>All are settled!</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</mat-expansion-panel>\n\t\t\t\t\t</div>\n\t\t\t\t</mat-card-content>\n\t\t\t</mat-card>\n\t\t</div>\n\n\t\t<!-- Settlement Suggestions -->\n\t\t<div class=\"settlement-suggestions\" *ngIf=\"getSettlementSuggestions().length > 0\">\n\t\t\t<mat-card class=\"suggestions-card\">\n\t\t\t\t<mat-card-header>\n\t\t\t\t\t<mat-card-title>\n\t\t\t\t\t\t<mat-icon>swap_horiz</mat-icon>\n\t\t\t\t\t\t<span>Settlement Suggestions</span>\n\t\t\t\t\t</mat-card-title>\n\t\t\t\t\t<mat-card-subtitle>\n\t\t\t\t\t\t{{ getSettlementSubtitle() }}\n\t\t\t\t\t</mat-card-subtitle>\n\t\t\t\t</mat-card-header>\n\t\t\t\t<mat-card-content>\n\t\t\t\t\t<div class=\"suggestions-list\">\n\t\t\t\t\t\t<div *ngFor=\"let suggestion of getSettlementSuggestions()\" class=\"suggestion-item\" [class]=\"suggestion.type\">\n\t\t\t\t\t\t\t<div class=\"suggestion-info\">\n\t\t\t\t\t\t\t\t<div class=\"suggestion-message\">\n\t\t\t\t\t\t\t\t\t<span class=\"message-text\">{{ getSettlementMessage(suggestion) }}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"settlement-parties\">\n\t\t\t\t\t\t\t\t\t<span class=\"from-user\">{{ suggestion.fromUserName }}</span>\n\t\t\t\t\t\t\t\t\t<mat-icon>arrow_forward</mat-icon>\n\t\t\t\t\t\t\t\t\t<span class=\"to-user\">{{ suggestion.toUserName }}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"settlement-amount\">\n\t\t\t\t\t\t\t\t\t{{ formatCurrency(suggestion.amount) }}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t\tmat-raised-button \n\t\t\t\t\t\t\t\t[color]=\"suggestion.type === 'you_owe' ? 'warn' : 'primary'\" \n\t\t\t\t\t\t\t\tsize=\"small\" \n\t\t\t\t\t\t\t\t(click)=\"createSettlement(suggestion)\"\n\t\t\t\t\t\t\t\t[disabled]=\"suggestion.type === 'others'\">\n\t\t\t\t\t\t\t\t<mat-icon>{{ suggestion.type === 'you_owe' ? 'payment' : 'check' }}</mat-icon>\n\t\t\t\t\t\t\t\t<span>{{ suggestion.type === 'you_owe' ? 'Pay' : 'Settle' }}</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</mat-card-content>\n\t\t\t</mat-card>\n\t\t</div>\n\n\t\t<!-- Transactions Section -->\n\t\t<div class=\"transactions-section\">\n\t\t\t<mat-card class=\"transactions-card\">\n\t\t\t\t<mat-card-header>\n\t\t\t\t\t<mat-card-title>\n\t\t\t\t\t\t<mat-icon>receipt</mat-icon>\n\t\t\t\t\t\t<span>Transactions ({{ getTransactionCount() }})</span>\n\t\t\t\t\t</mat-card-title>\n\t\t\t\t\t<mat-card-subtitle>\n\t\t\t\t\t\tTotal: {{ formatCurrency(getTotalTransactionAmount()) }}\n\t\t\t\t\t</mat-card-subtitle>\n\t\t\t\t</mat-card-header>\n\t\t\t\t<mat-card-content>\n\t\t\t\t\t<!-- Transactions List -->\n\t\t\t\t\t<div *ngIf=\"transactions.length > 0\" class=\"transactions-list\">\n\t\t\t\t\t\t<div *ngFor=\"let transaction of transactions\" class=\"transaction-item simple\" (click)=\"openEditTransactionDialog(transaction)\">\n\t\t\t\t\t\t\t<div class=\"transaction-main\">\n\t\t\t\t\t\t\t\t<div class=\"transaction-info\">\n\t\t\t\t\t\t\t\t\t<div class=\"transaction-title\">\n\t\t\t\t\t\t\t\t\t\t{{ getTransactionTitle(transaction) }}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"transaction-meta\">\n\t\t\t\t\t\t\t\t\t\t<span class=\"paid-by\">Paid by {{ getTransactionCreatorName(transaction) }}</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"transaction-date\">{{ formatDate(transaction.createdAt) }}</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"transaction-amount\">\n\t\t\t\t\t\t\t\t\t{{ formatCurrency(transaction.totalAmount) }}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<!-- Empty State -->\n\t\t\t\t\t<div *ngIf=\"transactions.length === 0\" class=\"empty-state\">\n\t\t\t\t\t\t<mat-icon class=\"empty-icon\">receipt</mat-icon>\n\t\t\t\t\t\t<p>No transactions yet</p>\n\t\t\t\t\t\t<!-- <button mat-raised-button color=\"primary\" (click)=\"addTransaction()\">\n\t\t\t\t\t\t\t<mat-icon>add</mat-icon>\n\t\t\t\t\t\t\tAdd Transaction\n\t\t\t\t\t\t</button> -->\n\t\t\t\t\t</div>\n\t\t\t\t</mat-card-content>\n\t\t\t</mat-card>\n\t\t</div>\n\n\t\t<!-- Settlements Section -->\n\t\t<div class=\"settlements-section\" *ngIf=\"getCompletedSettlementsCount() > 0\">\n\t\t\t<mat-card class=\"settlements-card\">\n\t\t\t\t<mat-card-header>\n\t\t\t\t\t<mat-card-title>\n\t\t\t\t\t\t<mat-icon>check_circle</mat-icon>\n\t\t\t\t\t\t<span>Completed Settlements ({{ getCompletedSettlementsCount() }})</span>\n\t\t\t\t\t</mat-card-title>\n\t\t\t\t</mat-card-header>\n\t\t\t\t<mat-card-content>\n\t\t\t\t\t<div class=\"settlements-list\">\n\t\t\t\t\t\t<div *ngFor=\"let settlement of getCompletedSettlements()\" class=\"settlement-item\">\n\t\t\t\t\t\t\t<div class=\"settlement-info\">\n\t\t\t\t\t\t\t\t<div class=\"settlement-parties\">\n\t\t\t\t\t\t\t\t\t<span class=\"from-user\">{{ getMemberName(settlement.fromUserId) }}</span>\n\t\t\t\t\t\t\t\t\t<mat-icon>arrow_forward</mat-icon>\n\t\t\t\t\t\t\t\t\t<span class=\"to-user\">{{ getMemberName(settlement.toUserId) }}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"settlement-amount\">\n\t\t\t\t\t\t\t\t\t{{ formatCurrency(settlement.amount) }}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"settlement-date\" *ngIf=\"settlement.settledAt\">\n\t\t\t\t\t\t\t\t\t{{ formatDate(settlement.settledAt) }}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</mat-card-content>\n\t\t\t</mat-card>\n\t\t</div>\n\t</div>\n\n\t<!-- Error State -->\n\t<div *ngIf=\"!isLoading && !group\" class=\"error-state\">\n\t\t<mat-icon class=\"error-icon\">error</mat-icon>\n\t\t<h3>Group Not Found</h3>\n\t\t<p>The group you're looking for doesn't exist or you don't have access to it.</p>\n\t\t<button mat-raised-button color=\"primary\" (click)=\"goBack()\">\n\t\t\t<mat-icon>arrow_back</mat-icon>\n\t\t\tGo Back\n\t\t</button>\n\t</div>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { SplitwiseGroup } from 'src/app/util/models/splitwise.model';\n\n@Component({\n  selector: 'app-members',\n  templateUrl: './members.component.html',\n  styleUrls: ['./members.component.scss']\n})\nexport class MembersComponent {\n  @Input() group!: SplitwiseGroup;\n  @Input() isMobile: boolean = false;\n  @Output() addMember = new EventEmitter<void>();\n  Math = Math; // Make Math available in template\n\n  formatCurrency(amount: number, currency: string = 'USD'): string {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: currency\n    }).format(amount);\n  }\n\n  getGroupMemberCount(): number {\n    return this.group?.members.filter(member => member.isActive).length || 0;\n  }\n\n  getPositiveBalanceMembers(): any[] {\n    if (!this.group) return [];\n    // This should be calculated from transactions, not from member.balance\n    // For now, return empty array - this needs to be implemented with proper balance calculation\n    return [];\n  }\n\n  getNegativeBalanceMembers(): any[] {\n    if (!this.group) return [];\n    // This should be calculated from transactions, not from member.balance\n    // For now, return empty array - this needs to be implemented with proper balance calculation\n    return [];\n  }\n\n  getNeutralBalanceMembers(): any[] {\n    if (!this.group) return [];\n    // This should be calculated from transactions, not from member.balance\n    // For now, return empty array - this needs to be implemented with proper balance calculation\n    return [];\n  }\n\n  onAddMember(): void {\n    this.addMember.emit();\n  }\n} ","<div class=\"members-container\">\n  <!-- Members Section -->\n  <div class=\"members-section\">\n    <mat-card class=\"members-card\">\n      <mat-card-header>\n        <mat-card-title>\n          <mat-icon>people</mat-icon>\n          Members\n        </mat-card-title>\n        <mat-card-subtitle>\n          {{ getGroupMemberCount() }} active members\n        </mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n        <div class=\"members-list\">\n          <div *ngFor=\"let member of group.members\" class=\"member-item\">\n            <div class=\"member-info\">\n              <div class=\"member-avatar\">\n                <img *ngIf=\"member.photoURL\" [src]=\"member.photoURL\" [alt]=\"member.displayName\" />\n                <mat-icon *ngIf=\"!member.photoURL\">person</mat-icon>\n              </div>\n              <div class=\"member-details\">\n                <span class=\"member-name\">{{ member.displayName }}</span>\n                <span class=\"member-email\">{{ member.email }}</span>\n                <span class=\"member-role\">{{ member.role }}</span>\n              </div>\n            </div>\n            <!-- <div class=\"member-balance\">\n              <span class=\"balance-amount\" \n                    [class.positive]=\"member.balance > 0\"\n                    [class.negative]=\"member.balance < 0\"\n                    [class.neutral]=\"member.balance === 0\">\n                {{ formatCurrency(member.balance, group.currency) }}\n              </span>\n            </div> -->\n          </div>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n\n  <!-- Balance Summary -->\n  <!-- <div class=\"balance-summary-section\">\n    <div class=\"balance-cards\">\n      <mat-card class=\"balance-card positive\" *ngIf=\"getPositiveBalanceMembers().length > 0\">\n        <mat-card-header>\n          <mat-card-title>\n            <mat-icon class=\"positive-icon\">trending_up</mat-icon>\n            Owed to Members\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"balance-list\">\n            <div *ngFor=\"let member of getPositiveBalanceMembers()\" class=\"balance-item\">\n              <span class=\"member-name\">{{ member.displayName }}</span>\n              <span class=\"balance-amount positive\">\n                {{ formatCurrency(member.balance, group.currency) }}\n              </span>\n            </div>\n          </div>\n        </mat-card-content>\n      </mat-card>\n\n      <mat-card class=\"balance-card negative\" *ngIf=\"getNegativeBalanceMembers().length > 0\">\n        <mat-card-header>\n          <mat-card-title>\n            <mat-icon class=\"negative-icon\">trending_down</mat-icon>\n            Members Owe\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"balance-list\">\n            <div *ngFor=\"let member of getNegativeBalanceMembers()\" class=\"balance-item\">\n              <span class=\"member-name\">{{ member.displayName }}</span>\n              <span class=\"balance-amount negative\">\n                {{ formatCurrency(Math.abs(member.balance), group.currency) }}\n              </span>\n            </div>\n          </div>\n        </mat-card-content>\n      </mat-card>\n\n      <mat-card class=\"balance-card neutral\" *ngIf=\"getNeutralBalanceMembers().length > 0\">\n        <mat-card-header>\n          <mat-card-title>\n            <mat-icon class=\"neutral-icon\">remove</mat-icon>\n            Settled Up\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"balance-list\">\n            <div *ngFor=\"let member of getNeutralBalanceMembers()\" class=\"balance-item\">\n              <span class=\"member-name\">{{ member.displayName }}</span>\n              <span class=\"balance-amount neutral\">\n                {{ formatCurrency(member.balance, group.currency) }}\n              </span>\n            </div>\n          </div>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div> -->\n\n  <!-- Add Member Button -->\n  <div class=\"add-member-section\">\n    <button mat-stroked-button color=\"primary\" (click)=\"onAddMember()\">\n      <mat-icon>person_add</mat-icon>\n      Add Member\n    </button>\n  </div>\n</div> ","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Auth } from '@angular/fire/auth';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { NotificationService } from 'src/app/util/service/notification.service';\nimport { SplitwiseGroup } from 'src/app/util/models/splitwise.model';\nimport { AddMemberDialogComponent } from '../add-member-dialog/add-member-dialog.component';\n\n// NgRx\nimport { AppState } from '../../../store/app.state';\nimport * as SplitwiseActions from '../store/splitwise.actions';\nimport { selectSplitwiseState } from '../store/splitwise.selectors';\n\n@Component({\n  selector: 'app-members-page',\n  templateUrl: './members-page.component.html',\n  styleUrls: ['./members-page.component.scss']\n})\nexport class MembersPageComponent implements OnInit, OnDestroy {\n  group: SplitwiseGroup | null = null;\n  isLoading: boolean = false;\n  error: string | null = null;\n  currentUser: any = null;\n  isMobile: boolean = false;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private auth: Auth,\n    private store: Store<AppState>,\n    private dialog: MatDialog,\n    private notificationService: NotificationService,\n    private breakpointObserver: BreakpointObserver\n  ) {\n    // Observe breakpoints for mobile detection\n    this.breakpointObserver.observe([Breakpoints.Handset])\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(result => {\n        this.isMobile = result.matches;\n      });\n  }\n\n  ngOnInit(): void {\n    this.currentUser = this.auth.currentUser;\n    this.subscribeToStore();\n    this.loadGroupDetails();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private subscribeToStore(): void {\n    this.store.select(selectSplitwiseState)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(state => {\n        this.isLoading = state.loading;\n        this.error = state.error;\n\n        // Get the group from the route parameter\n        const groupId = this.route.snapshot.paramMap.get('id');\n        if (groupId) {\n          this.group = state.groups.find(g => g.id === groupId) || null;\n          \n          // If group not found in store, try to load it\n          if (!this.group && !this.isLoading) {\n            this.store.dispatch(SplitwiseActions.loadGroupById({ groupId }));\n          }\n        }\n\n        // Show error notification if there's an error\n        if (this.error) {\n          this.notificationService.error(this.error);\n          this.store.dispatch(SplitwiseActions.clearError());\n        }\n      });\n  }\n\n  private loadGroupDetails(): void {\n    const groupId = this.route.snapshot.paramMap.get('id');\n    if (groupId) {\n      this.store.dispatch(SplitwiseActions.loadGroupById({ groupId }));\n    }\n  }\n\n  goBack(): void {\n    if (this.group) {\n      this.router.navigate(['dashboard/splitwise/group', this.group.id]);\n    } else {\n      this.router.navigate(['dashboard/splitwise']);\n    }\n  }\n\n  openAddMemberDialog(): void {\n    if (!this.group) return;\n\n    const dialogRef = this.dialog.open(AddMemberDialogComponent, {\n      width: '400px',\n      maxWidth: '90vw',\n      data: { group: this.group },\n      disableClose: true,\n      panelClass: 'mobile-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe((result: any) => {\n      if (result) {\n        if (result.action === 'delete') {\n          this.store.dispatch(SplitwiseActions.removeMember({\n            groupId: this.group!.id!,\n            userId: result.userId\n          }));\n        } else {\n        this.store.dispatch(SplitwiseActions.addMember({ \n          groupId: this.group!.id!, \n          request: result \n        }));\n        }\n      }\n    });\n  }\n} ","<div class=\"members-page-container\">\n  <!-- Loading State -->\n  <div *ngIf=\"isLoading\" class=\"loading-state\">\n    <mat-spinner diameter=\"40\"></mat-spinner>\n    <p>Loading group members...</p>\n  </div>\n\n  <!-- Main Content -->\n  <div *ngIf=\"!isLoading && group\" class=\"main-content\">\n    <div class=\"header-actions\">\n        <button mat-icon-button (click)=\"goBack()\" class=\"back-btn\">\n          <mat-icon>arrow_back</mat-icon>\n        </button>\n      </div>\n    <!-- Members Component -->\n    <app-members\n      [group]=\"group\"\n      [isMobile]=\"isMobile\"\n      (addMember)=\"openAddMemberDialog()\">\n    </app-members>\n  </div>\n\n  <!-- Error State -->\n  <div *ngIf=\"!isLoading && !group\" class=\"error-state\">\n    <mat-icon class=\"error-icon\">error</mat-icon>\n    <h3>Group Not Found</h3>\n    <p>The group you're looking for doesn't exist or you don't have access to it.</p>\n    <button mat-raised-button color=\"primary\" (click)=\"goBack()\">\n      Go Back\n    </button>\n  </div>\n</div> ","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SplitwiseComponent } from './splitwise.component';\nimport { GroupDetailsComponent } from './group-details/group-details.component';\nimport { MembersPageComponent } from './members-page/members-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SplitwiseComponent\n  },\n  {\n    path: 'group/:id',\n    component: GroupDetailsComponent\n  },\n  {\n    path: 'members/:id',\n    component: MembersPageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SplitwiseRoutingModule { } ","import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Optional, Inject, inject, Input, ANIMATION_MODULE_TYPE, ContentChildren, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, EventEmitter, Output, forwardRef, ChangeDetectorRef, NgModule } from '@angular/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { RippleRenderer, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatRippleModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { Subscription, merge, Subject } from 'rxjs';\nimport { CdkObserveContent, ObserversModule } from '@angular/cdk/observers';\nimport { NgTemplateOutlet, CommonModule } from '@angular/common';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { ENTER, SPACE, A, hasModifierKey } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * Injection token that can be used to reference instances of an `ListOption`. It serves\n * as alternative token to an actual implementation which could result in undesired\n * retention of the class or circular references breaking runtime execution.\n * @docs-private\n */\nconst _c0 = [\"*\"];\nconst _c1 = \".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mdc-list-list-item-container-color);border-radius:var(--mdc-list-list-item-container-shape, var(--mat-app-corner-none))}.mdc-list-item.mdc-list-item--selected{background-color:var(--mdc-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mdc-list-list-item-one-line-container-height)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mdc-list-list-item-two-line-container-height)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mdc-list-list-item-three-line-container-height)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected::before,.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected:focus::before,.cdk-high-contrast-active .mdc-list-item:not(.mdc-list-item--selected):focus::before{border-color:CanvasText}.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item.mdc-list-item--selected::before{border-width:3px;border-style:double}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-leading-icon-color, var(--mat-app-on-surface-variant));width:var(--mdc-list-list-item-leading-icon-size);height:var(--mdc-list-list-item-leading-icon-size);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mdc-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mdc-list-list-item-leading-avatar-size);height:var(--mdc-list-list-item-leading-avatar-size);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mdc-list-list-item-trailing-supporting-text-font, var(--mat-app-label-small-font));line-height:var(--mdc-list-list-item-trailing-supporting-text-line-height, var(--mat-app-label-small-line-height));font-size:var(--mdc-list-list-item-trailing-supporting-text-size, var(--mat-app-label-small-size));font-weight:var(--mdc-list-list-item-trailing-supporting-text-weight, var(--mat-app-label-small-weight));letter-spacing:var(--mdc-list-list-item-trailing-supporting-text-tracking, var(--mat-app-label-small-tracking))}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-icon-color, var(--mat-app-on-surface-variant));width:var(--mdc-list-list-item-trailing-icon-size);height:var(--mdc-list-list-item-trailing-icon-size)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mdc-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-supporting-text-color, var(--mat-app-on-surface-variant))}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-selected-trailing-icon-color, var(--mat-app-primary))}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mdc-list-list-item-label-text-color, var(--mat-app-on-surface));font-family:var(--mdc-list-list-item-label-text-font, var(--mat-app-body-large-font));line-height:var(--mdc-list-list-item-label-text-line-height, var(--mat-app-body-large-line-height));font-size:var(--mdc-list-list-item-label-text-size, var(--mat-app-body-large-size));font-weight:var(--mdc-list-list-item-label-text-weight, var(--mat-app-body-large-weight));letter-spacing:var(--mdc-list-list-item-label-text-tracking, var(--mat-app-body-large-tracking))}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mdc-list-list-item-hover-label-text-color, var(--mat-app-on-surface))}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mdc-list-list-item-focus-label-text-color, var(--mat-app-on-surface))}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mdc-list-list-item-supporting-text-color, var(--mat-app-on-surface-variant));font-family:var(--mdc-list-list-item-supporting-text-font, var(--mat-app-body-medium-font));line-height:var(--mdc-list-list-item-supporting-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mdc-list-list-item-supporting-text-size, var(--mat-app-body-medium-size));font-weight:var(--mdc-list-list-item-supporting-text-weight, var(--mat-app-body-medium-weight));letter-spacing:var(--mdc-list-list-item-supporting-text-tracking, var(--mat-app-body-medium-tracking))}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-disabled-leading-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-leading-icon-opacity)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-disabled-trailing-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-trailing-icon-opacity)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mdc-list-list-item-disabled-label-text-color, var(--mat-app-on-surface))}.mdc-list-item:hover::before{background-color:var(--mdc-list-list-item-hover-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mdc-list-list-item-disabled-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-list-item:focus::before{background-color:var(--mdc-list-list-item-focus-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mdc-list-list-item-leading-avatar-shape, var(--mat-app-corner-full));background-color:var(--mdc-list-list-item-leading-avatar-color, var(--mat-app-primary-container))}.mat-mdc-list-item-icon{font-size:var(--mdc-list-list-item-leading-icon-size)}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape, var(--mat-app-corner-full));--mat-mdc-focus-indicator-border-radius:var(--mat-list-active-indicator-shape, var(--mat-app-corner-full))}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color, var(--mat-app-secondary-container))}\";\nconst _c2 = [\"unscopedContent\"];\nconst _c3 = [\"text\"];\nconst _c4 = [[[\"\", \"matListItemAvatar\", \"\"], [\"\", \"matListItemIcon\", \"\"]], [[\"\", \"matListItemTitle\", \"\"]], [[\"\", \"matListItemLine\", \"\"]], \"*\", [[\"\", \"matListItemMeta\", \"\"]], [[\"mat-divider\"]]];\nconst _c5 = [\"[matListItemAvatar],[matListItemIcon]\", \"[matListItemTitle]\", \"[matListItemLine]\", \"*\", \"[matListItemMeta]\", \"mat-divider\"];\nconst _c6 = [[[\"\", \"matListItemTitle\", \"\"]], [[\"\", \"matListItemLine\", \"\"]], \"*\", [[\"mat-divider\"]], [[\"\", \"matListItemAvatar\", \"\"], [\"\", \"matListItemIcon\", \"\"]]];\nconst _c7 = [\"[matListItemTitle]\", \"[matListItemLine]\", \"*\", \"mat-divider\", \"[matListItemAvatar],[matListItemIcon]\"];\nfunction MatListOption_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 4);\n  }\n}\nfunction MatListOption_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵelement(1, \"input\", 12);\n    i0.ɵɵelementStart(2, \"div\", 13);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(3, \"svg\", 14);\n    i0.ɵɵelement(4, \"path\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelement(5, \"div\", 16);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mdc-checkbox--disabled\", ctx_r1.disabled);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"checked\", ctx_r1.selected)(\"disabled\", ctx_r1.disabled);\n  }\n}\nfunction MatListOption_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelement(1, \"input\", 18);\n    i0.ɵɵelementStart(2, \"div\", 19);\n    i0.ɵɵelement(3, \"div\", 20)(4, \"div\", 21);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mdc-radio--disabled\", ctx_r1.disabled);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"checked\", ctx_r1.selected)(\"disabled\", ctx_r1.disabled);\n  }\n}\nfunction MatListOption_Conditional_6_ng_template_1_Template(rf, ctx) {}\nfunction MatListOption_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtemplate(1, MatListOption_Conditional_6_ng_template_1_Template, 0, 0, \"ng-template\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const checkbox_r3 = i0.ɵɵreference(3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", checkbox_r3);\n  }\n}\nfunction MatListOption_Conditional_7_ng_template_1_Template(rf, ctx) {}\nfunction MatListOption_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵtemplate(1, MatListOption_Conditional_7_ng_template_1_Template, 0, 0, \"ng-template\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const radio_r4 = i0.ɵɵreference(5);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", radio_r4);\n  }\n}\nfunction MatListOption_Conditional_8_ng_template_0_Template(rf, ctx) {}\nfunction MatListOption_Conditional_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatListOption_Conditional_8_ng_template_0_Template, 0, 0, \"ng-template\", 6);\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const icons_r5 = i0.ɵɵreference(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", icons_r5);\n  }\n}\nfunction MatListOption_Conditional_15_ng_template_1_Template(rf, ctx) {}\nfunction MatListOption_Conditional_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵtemplate(1, MatListOption_Conditional_15_ng_template_1_Template, 0, 0, \"ng-template\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const checkbox_r3 = i0.ɵɵreference(3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", checkbox_r3);\n  }\n}\nfunction MatListOption_Conditional_16_ng_template_1_Template(rf, ctx) {}\nfunction MatListOption_Conditional_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵtemplate(1, MatListOption_Conditional_16_ng_template_1_Template, 0, 0, \"ng-template\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const radio_r4 = i0.ɵɵreference(5);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", radio_r4);\n  }\n}\nfunction MatListOption_Conditional_17_ng_template_0_Template(rf, ctx) {}\nfunction MatListOption_Conditional_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatListOption_Conditional_17_ng_template_0_Template, 0, 0, \"ng-template\", 6);\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const icons_r5 = i0.ɵɵreference(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", icons_r5);\n  }\n}\nconst LIST_OPTION = /*#__PURE__*/new InjectionToken('ListOption');\n\n/**\n * Directive capturing the title of a list item. A list item usually consists of a\n * title and optional secondary or tertiary lines.\n *\n * Text content for the title never wraps. There can only be a single title per list item.\n */\nlet MatListItemTitle = /*#__PURE__*/(() => {\n  class MatListItemTitle {\n    constructor(_elementRef) {\n      this._elementRef = _elementRef;\n    }\n    static {\n      this.ɵfac = function MatListItemTitle_Factory(t) {\n        return new (t || MatListItemTitle)(i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatListItemTitle,\n        selectors: [[\"\", \"matListItemTitle\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-list-item-title\", \"mdc-list-item__primary-text\"],\n        standalone: true\n      });\n    }\n  }\n  return MatListItemTitle;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Directive capturing a line in a list item. A list item usually consists of a\n * title and optional secondary or tertiary lines.\n *\n * Text content inside a line never wraps. There can be at maximum two lines per list item.\n */\nlet MatListItemLine = /*#__PURE__*/(() => {\n  class MatListItemLine {\n    constructor(_elementRef) {\n      this._elementRef = _elementRef;\n    }\n    static {\n      this.ɵfac = function MatListItemLine_Factory(t) {\n        return new (t || MatListItemLine)(i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatListItemLine,\n        selectors: [[\"\", \"matListItemLine\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-list-item-line\", \"mdc-list-item__secondary-text\"],\n        standalone: true\n      });\n    }\n  }\n  return MatListItemLine;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Directive matching an optional meta section for list items.\n *\n * List items can reserve space at the end of an item to display a control,\n * button or additional text content.\n */\nlet MatListItemMeta = /*#__PURE__*/(() => {\n  class MatListItemMeta {\n    static {\n      this.ɵfac = function MatListItemMeta_Factory(t) {\n        return new (t || MatListItemMeta)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatListItemMeta,\n        selectors: [[\"\", \"matListItemMeta\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-list-item-meta\", \"mdc-list-item__end\"],\n        standalone: true\n      });\n    }\n  }\n  return MatListItemMeta;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @docs-private\n *\n * MDC uses the very intuitively named classes `.mdc-list-item__start` and `.mat-list-item__end` to\n * position content such as icons or checkboxes/radios that comes either before or after the text\n * content respectively. This directive detects the placement of the checkbox/radio and applies the\n * correct MDC class to position the icon/avatar on the opposite side.\n */\nlet _MatListItemGraphicBase = /*#__PURE__*/(() => {\n  class _MatListItemGraphicBase {\n    constructor(_listOption) {\n      this._listOption = _listOption;\n    }\n    _isAlignedAtStart() {\n      // By default, in all list items the graphic is aligned at start. In list options,\n      // the graphic is only aligned at start if the checkbox/radio is at the end.\n      return !this._listOption || this._listOption?._getTogglePosition() === 'after';\n    }\n    static {\n      this.ɵfac = function _MatListItemGraphicBase_Factory(t) {\n        return new (t || _MatListItemGraphicBase)(i0.ɵɵdirectiveInject(LIST_OPTION, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: _MatListItemGraphicBase,\n        hostVars: 4,\n        hostBindings: function _MatListItemGraphicBase_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mdc-list-item__start\", ctx._isAlignedAtStart())(\"mdc-list-item__end\", !ctx._isAlignedAtStart());\n          }\n        },\n        standalone: true\n      });\n    }\n  }\n  return _MatListItemGraphicBase;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Directive matching an optional avatar within a list item.\n *\n * List items can reserve space at the beginning of an item to display an avatar.\n */\nlet MatListItemAvatar = /*#__PURE__*/(() => {\n  class MatListItemAvatar extends _MatListItemGraphicBase {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatListItemAvatar_BaseFactory;\n        return function MatListItemAvatar_Factory(t) {\n          return (ɵMatListItemAvatar_BaseFactory || (ɵMatListItemAvatar_BaseFactory = i0.ɵɵgetInheritedFactory(MatListItemAvatar)))(t || MatListItemAvatar);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatListItemAvatar,\n        selectors: [[\"\", \"matListItemAvatar\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-list-item-avatar\"],\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatListItemAvatar;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Directive matching an optional icon within a list item.\n *\n * List items can reserve space at the beginning of an item to display an icon.\n */\nlet MatListItemIcon = /*#__PURE__*/(() => {\n  class MatListItemIcon extends _MatListItemGraphicBase {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatListItemIcon_BaseFactory;\n        return function MatListItemIcon_Factory(t) {\n          return (ɵMatListItemIcon_BaseFactory || (ɵMatListItemIcon_BaseFactory = i0.ɵɵgetInheritedFactory(MatListItemIcon)))(t || MatListItemIcon);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatListItemIcon,\n        selectors: [[\"\", \"matListItemIcon\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-list-item-icon\"],\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatListItemIcon;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Injection token that can be used to provide the default options for the list module. */\nconst MAT_LIST_CONFIG = /*#__PURE__*/new InjectionToken('MAT_LIST_CONFIG');\n\n/** @docs-private */\nlet MatListBase = /*#__PURE__*/(() => {\n  class MatListBase {\n    constructor() {\n      this._isNonInteractive = true;\n      this._disableRipple = false;\n      this._disabled = false;\n      this._defaultOptions = inject(MAT_LIST_CONFIG, {\n        optional: true\n      });\n    }\n    /** Whether ripples for all list items is disabled. */\n    get disableRipple() {\n      return this._disableRipple;\n    }\n    set disableRipple(value) {\n      this._disableRipple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the entire list is disabled. When disabled, the list itself and each of its list items\n     * are disabled.\n     */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n    static {\n      this.ɵfac = function MatListBase_Factory(t) {\n        return new (t || MatListBase)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatListBase,\n        hostVars: 1,\n        hostBindings: function MatListBase_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-disabled\", ctx.disabled);\n          }\n        },\n        inputs: {\n          disableRipple: \"disableRipple\",\n          disabled: \"disabled\"\n        },\n        standalone: true\n      });\n    }\n  }\n  return MatListBase;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** @docs-private */\nlet MatListItemBase = /*#__PURE__*/(() => {\n  class MatListItemBase {\n    /**\n     * The number of lines this list item should reserve space for. If not specified,\n     * lines are inferred based on the projected content.\n     *\n     * Explicitly specifying the number of lines is useful if you want to acquire additional\n     * space and enable the wrapping of text. The unscoped text content of a list item will\n     * always be able to take up the remaining space of the item, unless it represents the title.\n     *\n     * A maximum of three lines is supported as per the Material Design specification.\n     */\n    set lines(lines) {\n      this._explicitLines = coerceNumberProperty(lines, null);\n      this._updateItemLines(false);\n    }\n    /** Whether ripples for list items are disabled. */\n    get disableRipple() {\n      return this.disabled || this._disableRipple || this._noopAnimations || !!this._listBase?.disableRipple;\n    }\n    set disableRipple(value) {\n      this._disableRipple = coerceBooleanProperty(value);\n    }\n    /** Whether the list-item is disabled. */\n    get disabled() {\n      return this._disabled || !!this._listBase?.disabled;\n    }\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Implemented as part of `RippleTarget`.\n     * @docs-private\n     */\n    get rippleDisabled() {\n      return this.disableRipple || !!this.rippleConfig.disabled;\n    }\n    constructor(_elementRef, _ngZone, _listBase, _platform, globalRippleOptions, animationMode) {\n      this._elementRef = _elementRef;\n      this._ngZone = _ngZone;\n      this._listBase = _listBase;\n      this._platform = _platform;\n      this._explicitLines = null;\n      this._disableRipple = false;\n      this._disabled = false;\n      this._subscriptions = new Subscription();\n      this._rippleRenderer = null;\n      /** Whether the list item has unscoped text content. */\n      this._hasUnscopedTextContent = false;\n      this.rippleConfig = globalRippleOptions || {};\n      this._hostElement = this._elementRef.nativeElement;\n      this._isButtonElement = this._hostElement.nodeName.toLowerCase() === 'button';\n      this._noopAnimations = animationMode === 'NoopAnimations';\n      if (_listBase && !_listBase._isNonInteractive) {\n        this._initInteractiveListItem();\n      }\n      // If no type attribute is specified for a host `<button>` element, set it to `button`. If a\n      // type attribute is already specified, we do nothing. We do this for backwards compatibility.\n      // TODO: Determine if we intend to continue doing this for the MDC-based list.\n      if (this._isButtonElement && !this._hostElement.hasAttribute('type')) {\n        this._hostElement.setAttribute('type', 'button');\n      }\n    }\n    ngAfterViewInit() {\n      this._monitorProjectedLinesAndTitle();\n      this._updateItemLines(true);\n    }\n    ngOnDestroy() {\n      this._subscriptions.unsubscribe();\n      if (this._rippleRenderer !== null) {\n        this._rippleRenderer._removeTriggerEvents();\n      }\n    }\n    /** Whether the list item has icons or avatars. */\n    _hasIconOrAvatar() {\n      return !!(this._avatars.length || this._icons.length);\n    }\n    _initInteractiveListItem() {\n      this._hostElement.classList.add('mat-mdc-list-item-interactive');\n      this._rippleRenderer = new RippleRenderer(this, this._ngZone, this._hostElement, this._platform);\n      this._rippleRenderer.setupTriggerEvents(this._hostElement);\n    }\n    /**\n     * Subscribes to changes in the projected title and lines. Triggers a\n     * item lines update whenever a change occurs.\n     */\n    _monitorProjectedLinesAndTitle() {\n      this._ngZone.runOutsideAngular(() => {\n        this._subscriptions.add(merge(this._lines.changes, this._titles.changes).subscribe(() => this._updateItemLines(false)));\n      });\n    }\n    /**\n     * Updates the lines of the list item. Based on the projected user content and optional\n     * explicit lines setting, the visual appearance of the list item is determined.\n     *\n     * This method should be invoked whenever the projected user content changes, or\n     * when the explicit lines have been updated.\n     *\n     * @param recheckUnscopedContent Whether the projected unscoped content should be re-checked.\n     *   The unscoped content is not re-checked for every update as it is a rather expensive check\n     *   for content that is expected to not change very often.\n     */\n    _updateItemLines(recheckUnscopedContent) {\n      // If the updated is triggered too early before the view and content is initialized,\n      // we just skip the update. After view initialization the update is triggered again.\n      if (!this._lines || !this._titles || !this._unscopedContent) {\n        return;\n      }\n      // Re-check the DOM for unscoped text content if requested. This needs to\n      // happen before any computation or sanity checks run as these rely on the\n      // result of whether there is unscoped text content or not.\n      if (recheckUnscopedContent) {\n        this._checkDomForUnscopedTextContent();\n      }\n      // Sanity check the list item lines and title in the content. This is a dev-mode only\n      // check that can be dead-code eliminated by Terser in production.\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        sanityCheckListItemContent(this);\n      }\n      const numberOfLines = this._explicitLines ?? this._inferLinesFromContent();\n      const unscopedContentEl = this._unscopedContent.nativeElement;\n      // Update the list item element to reflect the number of lines.\n      this._hostElement.classList.toggle('mat-mdc-list-item-single-line', numberOfLines <= 1);\n      this._hostElement.classList.toggle('mdc-list-item--with-one-line', numberOfLines <= 1);\n      this._hostElement.classList.toggle('mdc-list-item--with-two-lines', numberOfLines === 2);\n      this._hostElement.classList.toggle('mdc-list-item--with-three-lines', numberOfLines === 3);\n      // If there is no title and the unscoped content is the is the only line, the\n      // unscoped text content will be treated as the title of the list-item.\n      if (this._hasUnscopedTextContent) {\n        const treatAsTitle = this._titles.length === 0 && numberOfLines === 1;\n        unscopedContentEl.classList.toggle('mdc-list-item__primary-text', treatAsTitle);\n        unscopedContentEl.classList.toggle('mdc-list-item__secondary-text', !treatAsTitle);\n      } else {\n        unscopedContentEl.classList.remove('mdc-list-item__primary-text');\n        unscopedContentEl.classList.remove('mdc-list-item__secondary-text');\n      }\n    }\n    /**\n     * Infers the number of lines based on the projected user content. This is useful\n     * if no explicit number of lines has been specified on the list item.\n     *\n     * The number of lines is inferred based on whether there is a title, the number of\n     * additional lines (secondary/tertiary). An additional line is acquired if there is\n     * unscoped text content.\n     */\n    _inferLinesFromContent() {\n      let numOfLines = this._titles.length + this._lines.length;\n      if (this._hasUnscopedTextContent) {\n        numOfLines += 1;\n      }\n      return numOfLines;\n    }\n    /** Checks whether the list item has unscoped text content. */\n    _checkDomForUnscopedTextContent() {\n      this._hasUnscopedTextContent = Array.from(this._unscopedContent.nativeElement.childNodes).filter(node => node.nodeType !== node.COMMENT_NODE).some(node => !!(node.textContent && node.textContent.trim()));\n    }\n    static {\n      this.ɵfac = function MatListItemBase_Factory(t) {\n        return new (t || MatListItemBase)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(MatListBase, 8), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatListItemBase,\n        contentQueries: function MatListItemBase_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatListItemAvatar, 4);\n            i0.ɵɵcontentQuery(dirIndex, MatListItemIcon, 4);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._avatars = _t);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._icons = _t);\n          }\n        },\n        hostVars: 4,\n        hostBindings: function MatListItemBase_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"disabled\", ctx._isButtonElement && ctx.disabled || null);\n            i0.ɵɵclassProp(\"mdc-list-item--disabled\", ctx.disabled);\n          }\n        },\n        inputs: {\n          lines: \"lines\",\n          disableRipple: \"disableRipple\",\n          disabled: \"disabled\"\n        },\n        standalone: true\n      });\n    }\n  }\n  return MatListItemBase;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Sanity checks the configuration of the list item with respect to the amount\n * of lines, whether there is a title, or if there is unscoped text content.\n *\n * The checks are extracted into a top-level function that can be dead-code\n * eliminated by Terser or other optimizers in production mode.\n */\nfunction sanityCheckListItemContent(item) {\n  const numTitles = item._titles.length;\n  const numLines = item._lines.length;\n  if (numTitles > 1) {\n    console.warn('A list item cannot have multiple titles.');\n  }\n  if (numTitles === 0 && numLines > 0) {\n    console.warn('A list item line can only be used if there is a list item title.');\n  }\n  if (numTitles === 0 && item._hasUnscopedTextContent && item._explicitLines !== null && item._explicitLines > 1) {\n    console.warn('A list item cannot have wrapping content without a title.');\n  }\n  if (numLines > 2 || numLines === 2 && item._hasUnscopedTextContent) {\n    console.warn('A list item can have at maximum three lines.');\n  }\n}\nlet MatActionList = /*#__PURE__*/(() => {\n  class MatActionList extends MatListBase {\n    constructor() {\n      super(...arguments);\n      // An navigation list is considered interactive, but does not extend the interactive list\n      // base class. We do this because as per MDC, items of interactive lists are only reachable\n      // through keyboard shortcuts. We want all items for the navigation list to be reachable\n      // through tab key as we do not intend to provide any special accessibility treatment. The\n      // accessibility treatment depends on how the end-user will interact with it.\n      this._isNonInteractive = false;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatActionList_BaseFactory;\n        return function MatActionList_Factory(t) {\n          return (ɵMatActionList_BaseFactory || (ɵMatActionList_BaseFactory = i0.ɵɵgetInheritedFactory(MatActionList)))(t || MatActionList);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatActionList,\n        selectors: [[\"mat-action-list\"]],\n        hostAttrs: [\"role\", \"group\", 1, \"mat-mdc-action-list\", \"mat-mdc-list-base\", \"mdc-list\"],\n        exportAs: [\"matActionList\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MatListBase,\n          useExisting: MatActionList\n        }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c0,\n        decls: 1,\n        vars: 0,\n        template: function MatActionList_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵprojection(0);\n          }\n        },\n        styles: [\".mdc-list{margin:0;padding:8px 0;list-style-type:none}.mdc-list:focus{outline:none}.mdc-list-item{display:flex;position:relative;justify-content:flex-start;overflow:hidden;padding:0;align-items:stretch;cursor:pointer;padding-left:16px;padding-right:16px;background-color:var(--mdc-list-list-item-container-color);border-radius:var(--mdc-list-list-item-container-shape, var(--mat-app-corner-none))}.mdc-list-item.mdc-list-item--selected{background-color:var(--mdc-list-list-item-selected-container-color)}.mdc-list-item:focus{outline:0}.mdc-list-item.mdc-list-item--disabled{cursor:auto}.mdc-list-item.mdc-list-item--with-one-line{height:var(--mdc-list-list-item-one-line-container-height)}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-two-lines{height:var(--mdc-list-list-item-two-line-container-height)}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__end{align-self:center;margin-top:0}.mdc-list-item.mdc-list-item--with-three-lines{height:var(--mdc-list-list-item-three-line-container-height)}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:16px}.mdc-list-item.mdc-list-item--selected::before,.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item:not(.mdc-list-item--selected):focus::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected::before,.cdk-high-contrast-active .mdc-list-item.mdc-list-item--selected:focus::before,.cdk-high-contrast-active .mdc-list-item:not(.mdc-list-item--selected):focus::before{border-color:CanvasText}.mdc-list-item.mdc-list-item--selected:focus::before,.mdc-list-item.mdc-list-item--selected::before{border-width:3px;border-style:double}a.mdc-list-item{color:inherit;text-decoration:none}.mdc-list-item__start{fill:currentColor;flex-shrink:0;pointer-events:none}.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-leading-icon-color, var(--mat-app-on-surface-variant));width:var(--mdc-list-list-item-leading-icon-size);height:var(--mdc-list-list-item-leading-icon-size);margin-left:16px;margin-right:32px}[dir=rtl] .mdc-list-item--with-leading-icon .mdc-list-item__start{margin-left:32px;margin-right:16px}.mdc-list-item--with-leading-icon:hover .mdc-list-item__start{color:var(--mdc-list-list-item-hover-leading-icon-color)}.mdc-list-item--with-leading-avatar .mdc-list-item__start{width:var(--mdc-list-list-item-leading-avatar-size);height:var(--mdc-list-list-item-leading-avatar-size);margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item--with-leading-avatar .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-avatar .mdc-list-item__start{margin-left:16px;margin-right:16px;border-radius:50%}.mdc-list-item__end{flex-shrink:0;pointer-events:none}.mdc-list-item--with-trailing-meta .mdc-list-item__end{font-family:var(--mdc-list-list-item-trailing-supporting-text-font, var(--mat-app-label-small-font));line-height:var(--mdc-list-list-item-trailing-supporting-text-line-height, var(--mat-app-label-small-line-height));font-size:var(--mdc-list-list-item-trailing-supporting-text-size, var(--mat-app-label-small-size));font-weight:var(--mdc-list-list-item-trailing-supporting-text-weight, var(--mat-app-label-small-weight));letter-spacing:var(--mdc-list-list-item-trailing-supporting-text-tracking, var(--mat-app-label-small-tracking))}.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-icon-color, var(--mat-app-on-surface-variant));width:var(--mdc-list-list-item-trailing-icon-size);height:var(--mdc-list-list-item-trailing-icon-size)}.mdc-list-item--with-trailing-icon:hover .mdc-list-item__end{color:var(--mdc-list-list-item-hover-trailing-icon-color)}.mdc-list-item.mdc-list-item--with-trailing-meta .mdc-list-item__end{color:var(--mdc-list-list-item-trailing-supporting-text-color, var(--mat-app-on-surface-variant))}.mdc-list-item--selected.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-selected-trailing-icon-color, var(--mat-app-primary))}.mdc-list-item__content{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;align-self:center;flex:1;pointer-events:none}.mdc-list-item--with-two-lines .mdc-list-item__content,.mdc-list-item--with-three-lines .mdc-list-item__content{align-self:stretch}.mdc-list-item__primary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;color:var(--mdc-list-list-item-label-text-color, var(--mat-app-on-surface));font-family:var(--mdc-list-list-item-label-text-font, var(--mat-app-body-large-font));line-height:var(--mdc-list-list-item-label-text-line-height, var(--mat-app-body-large-line-height));font-size:var(--mdc-list-list-item-label-text-size, var(--mat-app-body-large-size));font-weight:var(--mdc-list-list-item-label-text-weight, var(--mat-app-body-large-weight));letter-spacing:var(--mdc-list-list-item-label-text-tracking, var(--mat-app-body-large-tracking))}.mdc-list-item:hover .mdc-list-item__primary-text{color:var(--mdc-list-list-item-hover-label-text-color, var(--mat-app-on-surface))}.mdc-list-item:focus .mdc-list-item__primary-text{color:var(--mdc-list-list-item-focus-label-text-color, var(--mat-app-on-surface))}.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-three-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-three-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item__secondary-text{text-overflow:ellipsis;white-space:nowrap;overflow:hidden;display:block;margin-top:0;color:var(--mdc-list-list-item-supporting-text-color, var(--mat-app-on-surface-variant));font-family:var(--mdc-list-list-item-supporting-text-font, var(--mat-app-body-medium-font));line-height:var(--mdc-list-list-item-supporting-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mdc-list-list-item-supporting-text-size, var(--mat-app-body-medium-size));font-weight:var(--mdc-list-list-item-supporting-text-weight, var(--mat-app-body-medium-weight));letter-spacing:var(--mdc-list-list-item-supporting-text-tracking, var(--mat-app-body-medium-tracking))}.mdc-list-item__secondary-text::before{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-three-lines .mdc-list-item__secondary-text{white-space:normal;line-height:20px}.mdc-list-item--with-overline .mdc-list-item__secondary-text{white-space:nowrap;line-height:auto}.mdc-list-item--with-leading-radio.mdc-list-item,.mdc-list-item--with-leading-checkbox.mdc-list-item,.mdc-list-item--with-leading-icon.mdc-list-item,.mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:0;padding-right:16px}[dir=rtl] .mdc-list-item--with-leading-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-checkbox.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-leading-avatar.mdc-list-item{padding-left:16px;padding-right:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end{display:block;margin-top:0;line-height:normal}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before,.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines.mdc-list-item--with-trailing-meta .mdc-list-item__end::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-trailing-icon.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-icon.mdc-list-item{padding-left:0;padding-right:0}.mdc-list-item--with-trailing-icon .mdc-list-item__end{margin-left:16px;margin-right:16px}.mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-meta.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-meta .mdc-list-item__end{-webkit-user-select:none;user-select:none;margin-left:28px;margin-right:16px}[dir=rtl] .mdc-list-item--with-trailing-meta .mdc-list-item__end{margin-left:16px;margin-right:28px}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end{display:block;line-height:normal;align-self:flex-start;margin-top:0}.mdc-list-item--with-trailing-meta.mdc-list-item--with-three-lines .mdc-list-item__end::before,.mdc-list-item--with-trailing-meta.mdc-list-item--with-two-lines .mdc-list-item__end::before{display:inline-block;width:0;height:28px;content:\\\"\\\";vertical-align:0}.mdc-list-item--with-leading-radio .mdc-list-item__start,.mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:8px;margin-right:24px}[dir=rtl] .mdc-list-item--with-leading-radio .mdc-list-item__start,[dir=rtl] .mdc-list-item--with-leading-checkbox .mdc-list-item__start{margin-left:24px;margin-right:8px}.mdc-list-item--with-leading-radio.mdc-list-item--with-two-lines .mdc-list-item__start,.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines .mdc-list-item__start{align-self:flex-start;margin-top:8px}.mdc-list-item--with-trailing-radio.mdc-list-item,.mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:16px;padding-right:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item{padding-left:0;padding-right:16px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-left:0}[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-radio.mdc-list-item--with-leading-avatar,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-icon,[dir=rtl] .mdc-list-item--with-trailing-checkbox.mdc-list-item--with-leading-avatar{padding-right:0}.mdc-list-item--with-trailing-radio .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:24px;margin-right:8px}[dir=rtl] .mdc-list-item--with-trailing-radio .mdc-list-item__end,[dir=rtl] .mdc-list-item--with-trailing-checkbox .mdc-list-item__end{margin-left:8px;margin-right:24px}.mdc-list-item--with-trailing-radio.mdc-list-item--with-three-lines .mdc-list-item__end,.mdc-list-item--with-trailing-checkbox.mdc-list-item--with-three-lines .mdc-list-item__end{align-self:flex-start;margin-top:8px}.mdc-list-group__subheader{margin:.75rem 16px}.mdc-list-item--disabled .mdc-list-item__start,.mdc-list-item--disabled .mdc-list-item__content,.mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mdc-list-item--disabled .mdc-list-item__primary-text,.mdc-list-item--disabled .mdc-list-item__secondary-text{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start{color:var(--mdc-list-list-item-disabled-leading-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-leading-icon-opacity)}.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end{color:var(--mdc-list-list-item-disabled-trailing-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-trailing-icon-opacity)}.mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing,[dir=rtl] .mat-mdc-list-item.mat-mdc-list-item-both-leading-and-trailing{padding-left:0;padding-right:0}.mdc-list-item.mdc-list-item--disabled .mdc-list-item__primary-text{color:var(--mdc-list-list-item-disabled-label-text-color, var(--mat-app-on-surface))}.mdc-list-item:hover::before{background-color:var(--mdc-list-list-item-hover-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mdc-list-item.mdc-list-item--disabled::before{background-color:var(--mdc-list-list-item-disabled-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-disabled-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-list-item:focus::before{background-color:var(--mdc-list-list-item-focus-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-list-list-item-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}.mdc-list-item--disabled .mdc-radio,.mdc-list-item--disabled .mdc-checkbox{opacity:var(--mdc-list-list-item-disabled-label-text-opacity)}.mdc-list-item--with-leading-avatar .mat-mdc-list-item-avatar{border-radius:var(--mdc-list-list-item-leading-avatar-shape, var(--mat-app-corner-full));background-color:var(--mdc-list-list-item-leading-avatar-color, var(--mat-app-primary-container))}.mat-mdc-list-item-icon{font-size:var(--mdc-list-list-item-leading-icon-size)}.cdk-high-contrast-active a.mdc-list-item--activated::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active a.mdc-list-item--activated [dir=rtl]::after{right:auto;left:16px}.mat-mdc-list-base{display:block}.mat-mdc-list-base .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item__end,.mat-mdc-list-base .mdc-list-item__content{pointer-events:auto}.mat-mdc-list-item,.mat-mdc-list-option{width:100%;box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-list-item:not(.mat-mdc-list-item-interactive),.mat-mdc-list-option:not(.mat-mdc-list-item-interactive){cursor:default}.mat-mdc-list-item .mat-divider-inset,.mat-mdc-list-option .mat-divider-inset{position:absolute;left:0;right:0;bottom:0}.mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,.mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-left:72px}[dir=rtl] .mat-mdc-list-item .mat-mdc-list-item-avatar~.mat-divider-inset,[dir=rtl] .mat-mdc-list-option .mat-mdc-list-item-avatar~.mat-divider-inset{margin-right:72px}.mat-mdc-list-item-interactive::before{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0;pointer-events:none}.mat-mdc-list-item>.mat-mdc-focus-indicator{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-list-item:focus>.mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-line.mdc-list-item__secondary-text{white-space:nowrap;line-height:normal}.mat-mdc-list-item.mdc-list-item--with-three-lines .mat-mdc-list-item-unscoped-content.mdc-list-item__secondary-text{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:start}mat-action-list button::-moz-focus-inner{border:0}.mdc-list-item--with-leading-icon .mdc-list-item__start{margin-inline-start:var(--mat-list-list-item-leading-icon-start-space);margin-inline-end:var(--mat-list-list-item-leading-icon-end-space)}.mat-mdc-nav-list .mat-mdc-list-item{border-radius:var(--mat-list-active-indicator-shape, var(--mat-app-corner-full));--mat-mdc-focus-indicator-border-radius:var(--mat-list-active-indicator-shape, var(--mat-app-corner-full))}.mat-mdc-nav-list .mat-mdc-list-item.mdc-list-item--activated{background-color:var(--mat-list-active-indicator-color, var(--mat-app-secondary-container))}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatActionList;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to inject instances of `MatList`. It serves as\n * alternative token to the actual `MatList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_LIST = /*#__PURE__*/new InjectionToken('MatList');\nlet MatList = /*#__PURE__*/(() => {\n  class MatList extends MatListBase {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatList_BaseFactory;\n        return function MatList_Factory(t) {\n          return (ɵMatList_BaseFactory || (ɵMatList_BaseFactory = i0.ɵɵgetInheritedFactory(MatList)))(t || MatList);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatList,\n        selectors: [[\"mat-list\"]],\n        hostAttrs: [1, \"mat-mdc-list\", \"mat-mdc-list-base\", \"mdc-list\"],\n        exportAs: [\"matList\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MatListBase,\n          useExisting: MatList\n        }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c0,\n        decls: 1,\n        vars: 0,\n        template: function MatList_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵprojection(0);\n          }\n        },\n        styles: [_c1],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatList;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatListItem = /*#__PURE__*/(() => {\n  class MatListItem extends MatListItemBase {\n    /** Indicates whether an item in a `<mat-nav-list>` is the currently active page. */\n    get activated() {\n      return this._activated;\n    }\n    set activated(activated) {\n      this._activated = coerceBooleanProperty(activated);\n    }\n    constructor(element, ngZone, listBase, platform, globalRippleOptions, animationMode) {\n      super(element, ngZone, listBase, platform, globalRippleOptions, animationMode);\n      this._activated = false;\n    }\n    /**\n     * Determine the value of `aria-current`. Return 'page' if this item is an activated anchor tag.\n     * Otherwise, return `null`. This method is safe to use with server-side rendering.\n     */\n    _getAriaCurrent() {\n      return this._hostElement.nodeName === 'A' && this._activated ? 'page' : null;\n    }\n    _hasBothLeadingAndTrailing() {\n      return this._meta.length !== 0 && (this._avatars.length !== 0 || this._icons.length !== 0);\n    }\n    static {\n      this.ɵfac = function MatListItem_Factory(t) {\n        return new (t || MatListItem)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(MatListBase, 8), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatListItem,\n        selectors: [[\"mat-list-item\"], [\"a\", \"mat-list-item\", \"\"], [\"button\", \"mat-list-item\", \"\"]],\n        contentQueries: function MatListItem_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatListItemLine, 5);\n            i0.ɵɵcontentQuery(dirIndex, MatListItemTitle, 5);\n            i0.ɵɵcontentQuery(dirIndex, MatListItemMeta, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._lines = _t);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._titles = _t);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._meta = _t);\n          }\n        },\n        viewQuery: function MatListItem_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c2, 5);\n            i0.ɵɵviewQuery(_c3, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._unscopedContent = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._itemText = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-mdc-list-item\", \"mdc-list-item\"],\n        hostVars: 13,\n        hostBindings: function MatListItem_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-current\", ctx._getAriaCurrent());\n            i0.ɵɵclassProp(\"mdc-list-item--activated\", ctx.activated)(\"mdc-list-item--with-leading-avatar\", ctx._avatars.length !== 0)(\"mdc-list-item--with-leading-icon\", ctx._icons.length !== 0)(\"mdc-list-item--with-trailing-meta\", ctx._meta.length !== 0)(\"mat-mdc-list-item-both-leading-and-trailing\", ctx._hasBothLeadingAndTrailing())(\"_mat-animation-noopable\", ctx._noopAnimations);\n          }\n        },\n        inputs: {\n          activated: \"activated\"\n        },\n        exportAs: [\"matListItem\"],\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c5,\n        decls: 10,\n        vars: 0,\n        consts: [[\"unscopedContent\", \"\"], [1, \"mdc-list-item__content\"], [1, \"mat-mdc-list-item-unscoped-content\", 3, \"cdkObserveContent\"], [1, \"mat-mdc-focus-indicator\"]],\n        template: function MatListItem_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵprojectionDef(_c4);\n            i0.ɵɵprojection(0);\n            i0.ɵɵelementStart(1, \"span\", 1);\n            i0.ɵɵprojection(2, 1);\n            i0.ɵɵprojection(3, 2);\n            i0.ɵɵelementStart(4, \"span\", 2, 0);\n            i0.ɵɵlistener(\"cdkObserveContent\", function MatListItem_Template_span_cdkObserveContent_4_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._updateItemLines(true));\n            });\n            i0.ɵɵprojection(6, 3);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵprojection(7, 4);\n            i0.ɵɵprojection(8, 5);\n            i0.ɵɵelement(9, \"div\", 3);\n          }\n        },\n        dependencies: [CdkObserveContent],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatListItem;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to reference instances of an `SelectionList`. It serves\n * as alternative token to an actual implementation which would result in circular references.\n * @docs-private\n */\nconst SELECTION_LIST = /*#__PURE__*/new InjectionToken('SelectionList');\nlet MatListOption = /*#__PURE__*/(() => {\n  class MatListOption extends MatListItemBase {\n    /**\n     * Whether the label should appear before or after the checkbox/radio. Defaults to 'after'\n     *\n     * @deprecated Use `togglePosition` instead.\n     * @breaking-change 17.0.0\n     */\n    get checkboxPosition() {\n      return this.togglePosition;\n    }\n    set checkboxPosition(value) {\n      this.togglePosition = value;\n    }\n    /**\n     * Theme color of the list option. This sets the color of the checkbox/radio.\n     * This API is supported in M2 themes only, it has no effect in M3 themes.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/theming#using-component-color-variants.\n     */\n    get color() {\n      return this._color || this._selectionList.color;\n    }\n    set color(newValue) {\n      this._color = newValue;\n    }\n    /** Value of the option */\n    get value() {\n      return this._value;\n    }\n    set value(newValue) {\n      if (this.selected && newValue !== this.value && this._inputsInitialized) {\n        this.selected = false;\n      }\n      this._value = newValue;\n    }\n    /** Whether the option is selected. */\n    get selected() {\n      return this._selectionList.selectedOptions.isSelected(this);\n    }\n    set selected(value) {\n      const isSelected = coerceBooleanProperty(value);\n      if (isSelected !== this._selected) {\n        this._setSelected(isSelected);\n        if (isSelected || this._selectionList.multiple) {\n          this._selectionList._reportValueChange();\n        }\n      }\n    }\n    constructor(elementRef, ngZone, _selectionList, platform, _changeDetectorRef, globalRippleOptions, animationMode) {\n      super(elementRef, ngZone, _selectionList, platform, globalRippleOptions, animationMode);\n      this._selectionList = _selectionList;\n      this._changeDetectorRef = _changeDetectorRef;\n      /**\n       * Emits when the selected state of the option has changed.\n       * Use to facilitate two-data binding to the `selected` property.\n       * @docs-private\n       */\n      this.selectedChange = new EventEmitter();\n      /** Whether the label should appear before or after the checkbox/radio. Defaults to 'after' */\n      this.togglePosition = 'after';\n      this._selected = false;\n      /**\n       * This is set to true after the first OnChanges cycle so we don't\n       * clear the value of `selected` in the first cycle.\n       */\n      this._inputsInitialized = false;\n    }\n    ngOnInit() {\n      const list = this._selectionList;\n      if (list._value && list._value.some(value => list.compareWith(this._value, value))) {\n        this._setSelected(true);\n      }\n      const wasSelected = this._selected;\n      // List options that are selected at initialization can't be reported properly to the form\n      // control. This is because it takes some time until the selection-list knows about all\n      // available options. Also it can happen that the ControlValueAccessor has an initial value\n      // that should be used instead. Deferring the value change report to the next tick ensures\n      // that the form control value is not being overwritten.\n      Promise.resolve().then(() => {\n        if (this._selected || wasSelected) {\n          this.selected = true;\n          this._changeDetectorRef.markForCheck();\n        }\n      });\n      this._inputsInitialized = true;\n    }\n    ngOnDestroy() {\n      super.ngOnDestroy();\n      if (this.selected) {\n        // We have to delay this until the next tick in order\n        // to avoid changed after checked errors.\n        Promise.resolve().then(() => {\n          this.selected = false;\n        });\n      }\n    }\n    /** Toggles the selection state of the option. */\n    toggle() {\n      this.selected = !this.selected;\n    }\n    /** Allows for programmatic focusing of the option. */\n    focus() {\n      this._hostElement.focus();\n    }\n    /** Gets the text label of the list option. Used for the typeahead functionality in the list. */\n    getLabel() {\n      const titleElement = this._titles?.get(0)?._elementRef.nativeElement;\n      // If there is no explicit title element, the unscoped text content\n      // is treated as the list item title.\n      const labelEl = titleElement || this._unscopedContent?.nativeElement;\n      return labelEl?.textContent || '';\n    }\n    /** Whether a checkbox is shown at the given position. */\n    _hasCheckboxAt(position) {\n      return this._selectionList.multiple && this._getTogglePosition() === position;\n    }\n    /** Where a radio indicator is shown at the given position. */\n    _hasRadioAt(position) {\n      return !this._selectionList.multiple && this._getTogglePosition() === position && !this._selectionList.hideSingleSelectionIndicator;\n    }\n    /** Whether icons or avatars are shown at the given position. */\n    _hasIconsOrAvatarsAt(position) {\n      return this._hasProjected('icons', position) || this._hasProjected('avatars', position);\n    }\n    /** Gets whether the given type of element is projected at the specified position. */\n    _hasProjected(type, position) {\n      // If the checkbox/radio is shown at the specified position, neither icons or\n      // avatars can be shown at the position.\n      return this._getTogglePosition() !== position && (type === 'avatars' ? this._avatars.length !== 0 : this._icons.length !== 0);\n    }\n    _handleBlur() {\n      this._selectionList._onTouched();\n    }\n    /** Gets the current position of the checkbox/radio. */\n    _getTogglePosition() {\n      return this.togglePosition || 'after';\n    }\n    /**\n     * Sets the selected state of the option.\n     * @returns Whether the value has changed.\n     */\n    _setSelected(selected) {\n      if (selected === this._selected) {\n        return false;\n      }\n      this._selected = selected;\n      if (selected) {\n        this._selectionList.selectedOptions.select(this);\n      } else {\n        this._selectionList.selectedOptions.deselect(this);\n      }\n      this.selectedChange.emit(selected);\n      this._changeDetectorRef.markForCheck();\n      return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run.\n     * Mainly used to trigger an update of the list option if the disabled state of the selection\n     * list changed.\n     */\n    _markForCheck() {\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Toggles the option's value based on a user interaction. */\n    _toggleOnInteraction() {\n      if (!this.disabled) {\n        if (this._selectionList.multiple) {\n          this.selected = !this.selected;\n          this._selectionList._emitChangeEvent([this]);\n        } else if (!this.selected) {\n          this.selected = true;\n          this._selectionList._emitChangeEvent([this]);\n        }\n      }\n    }\n    /** Sets the tabindex of the list option. */\n    _setTabindex(value) {\n      this._hostElement.setAttribute('tabindex', value + '');\n    }\n    _hasBothLeadingAndTrailing() {\n      const hasLeading = this._hasProjected('avatars', 'before') || this._hasProjected('icons', 'before') || this._hasCheckboxAt('before') || this._hasRadioAt('before');\n      const hasTrailing = this._hasProjected('icons', 'after') || this._hasProjected('avatars', 'after') || this._hasCheckboxAt('after') || this._hasRadioAt('after');\n      return hasLeading && hasTrailing;\n    }\n    static {\n      this.ɵfac = function MatListOption_Factory(t) {\n        return new (t || MatListOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(SELECTION_LIST), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatListOption,\n        selectors: [[\"mat-list-option\"]],\n        contentQueries: function MatListOption_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatListItemLine, 5);\n            i0.ɵɵcontentQuery(dirIndex, MatListItemTitle, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._lines = _t);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._titles = _t);\n          }\n        },\n        viewQuery: function MatListOption_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c2, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._unscopedContent = _t.first);\n          }\n        },\n        hostAttrs: [\"role\", \"option\", 1, \"mat-mdc-list-item\", \"mat-mdc-list-option\", \"mdc-list-item\"],\n        hostVars: 27,\n        hostBindings: function MatListOption_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"blur\", function MatListOption_blur_HostBindingHandler() {\n              return ctx._handleBlur();\n            })(\"click\", function MatListOption_click_HostBindingHandler() {\n              return ctx._toggleOnInteraction();\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-selected\", ctx.selected);\n            i0.ɵɵclassProp(\"mdc-list-item--selected\", ctx.selected && !ctx._selectionList.multiple && ctx._selectionList.hideSingleSelectionIndicator)(\"mdc-list-item--with-leading-avatar\", ctx._hasProjected(\"avatars\", \"before\"))(\"mdc-list-item--with-leading-icon\", ctx._hasProjected(\"icons\", \"before\"))(\"mdc-list-item--with-trailing-icon\", ctx._hasProjected(\"icons\", \"after\"))(\"mat-mdc-list-option-with-trailing-avatar\", ctx._hasProjected(\"avatars\", \"after\"))(\"mdc-list-item--with-leading-checkbox\", ctx._hasCheckboxAt(\"before\"))(\"mdc-list-item--with-trailing-checkbox\", ctx._hasCheckboxAt(\"after\"))(\"mdc-list-item--with-leading-radio\", ctx._hasRadioAt(\"before\"))(\"mdc-list-item--with-trailing-radio\", ctx._hasRadioAt(\"after\"))(\"mat-mdc-list-item-both-leading-and-trailing\", ctx._hasBothLeadingAndTrailing())(\"mat-accent\", ctx.color !== \"primary\" && ctx.color !== \"warn\")(\"mat-warn\", ctx.color === \"warn\")(\"_mat-animation-noopable\", ctx._noopAnimations);\n          }\n        },\n        inputs: {\n          togglePosition: \"togglePosition\",\n          checkboxPosition: \"checkboxPosition\",\n          color: \"color\",\n          value: \"value\",\n          selected: \"selected\"\n        },\n        outputs: {\n          selectedChange: \"selectedChange\"\n        },\n        exportAs: [\"matListOption\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MatListItemBase,\n          useExisting: MatListOption\n        }, {\n          provide: LIST_OPTION,\n          useExisting: MatListOption\n        }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c7,\n        decls: 20,\n        vars: 4,\n        consts: [[\"icons\", \"\"], [\"checkbox\", \"\"], [\"radio\", \"\"], [\"unscopedContent\", \"\"], [1, \"mdc-list-item__start\", \"mat-mdc-list-option-checkbox-before\"], [1, \"mdc-list-item__start\", \"mat-mdc-list-option-radio-before\"], [3, \"ngTemplateOutlet\"], [1, \"mdc-list-item__content\"], [1, \"mat-mdc-list-item-unscoped-content\", 3, \"cdkObserveContent\"], [1, \"mdc-list-item__end\"], [1, \"mat-mdc-focus-indicator\"], [1, \"mdc-checkbox\"], [\"type\", \"checkbox\", 1, \"mdc-checkbox__native-control\", 3, \"checked\", \"disabled\"], [1, \"mdc-checkbox__background\"], [\"viewBox\", \"0 0 24 24\", \"aria-hidden\", \"true\", 1, \"mdc-checkbox__checkmark\"], [\"fill\", \"none\", \"d\", \"M1.73,12.91 8.1,19.28 22.79,4.59\", 1, \"mdc-checkbox__checkmark-path\"], [1, \"mdc-checkbox__mixedmark\"], [1, \"mdc-radio\"], [\"type\", \"radio\", 1, \"mdc-radio__native-control\", 3, \"checked\", \"disabled\"], [1, \"mdc-radio__background\"], [1, \"mdc-radio__outer-circle\"], [1, \"mdc-radio__inner-circle\"]],\n        template: function MatListOption_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵprojectionDef(_c6);\n            i0.ɵɵtemplate(0, MatListOption_ng_template_0_Template, 1, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor)(2, MatListOption_ng_template_2_Template, 6, 4, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor)(4, MatListOption_ng_template_4_Template, 5, 4, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor)(6, MatListOption_Conditional_6_Template, 2, 1, \"span\", 4)(7, MatListOption_Conditional_7_Template, 2, 1, \"span\", 5)(8, MatListOption_Conditional_8_Template, 1, 1, null, 6);\n            i0.ɵɵelementStart(9, \"span\", 7);\n            i0.ɵɵprojection(10);\n            i0.ɵɵprojection(11, 1);\n            i0.ɵɵelementStart(12, \"span\", 8, 3);\n            i0.ɵɵlistener(\"cdkObserveContent\", function MatListOption_Template_span_cdkObserveContent_12_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._updateItemLines(true));\n            });\n            i0.ɵɵprojection(14, 2);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(15, MatListOption_Conditional_15_Template, 2, 1, \"span\", 9)(16, MatListOption_Conditional_16_Template, 2, 1, \"span\", 9)(17, MatListOption_Conditional_17_Template, 1, 1, null, 6);\n            i0.ɵɵprojection(18, 3);\n            i0.ɵɵelement(19, \"div\", 10);\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(6);\n            i0.ɵɵconditional(ctx._hasCheckboxAt(\"before\") ? 6 : ctx._hasRadioAt(\"before\") ? 7 : -1);\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional(ctx._hasIconsOrAvatarsAt(\"before\") ? 8 : -1);\n            i0.ɵɵadvance(7);\n            i0.ɵɵconditional(ctx._hasCheckboxAt(\"after\") ? 15 : ctx._hasRadioAt(\"after\") ? 16 : -1);\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional(ctx._hasIconsOrAvatarsAt(\"after\") ? 17 : -1);\n          }\n        },\n        dependencies: [NgTemplateOutlet, CdkObserveContent],\n        styles: [\".mat-mdc-list-option-with-trailing-avatar.mdc-list-item,[dir=rtl] .mat-mdc-list-option-with-trailing-avatar.mdc-list-item{padding-left:0;padding-right:0}.mat-mdc-list-option-with-trailing-avatar .mdc-list-item__end{margin-left:16px;margin-right:16px;width:40px;height:40px}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text{display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::before{display:inline-block;width:0;height:32px;content:\\\"\\\";vertical-align:0}.mat-mdc-list-option-with-trailing-avatar.mdc-list-item--with-two-lines .mdc-list-item__primary-text::after{display:inline-block;width:0;height:20px;content:\\\"\\\";vertical-align:-20px}.mat-mdc-list-option-with-trailing-avatar .mdc-list-item__end{border-radius:50%}.mat-mdc-list-option .mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mat-mdc-list-option .mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;width:var(--mdc-checkbox-state-layer-size, 40px);height:var(--mdc-checkbox-state-layer-size, 40px);top:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);right:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - var(--mdc-checkbox-state-layer-size, 40px))/2)}.mat-mdc-list-option .mdc-checkbox--disabled{cursor:default;pointer-events:none}.cdk-high-contrast-active .mat-mdc-list-option .mdc-checkbox--disabled{opacity:.5}.mat-mdc-list-option .mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);-webkit-print-color-adjust:exact;color-adjust:exact;border-color:var(--mdc-checkbox-unselected-icon-color, var(--mat-app-on-surface-variant));top:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mdc-checkbox-state-layer-size, 40px) - 18px)/2)}.mat-mdc-list-option .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-icon-color, var(--mat-app-primary))}.mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color)}.mat-mdc-list-option .mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color);border-color:rgba(0,0,0,0)}.mat-mdc-list-option .mdc-checkbox:hover .mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox:hover .mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color, var(--mat-app-on-surface));background-color:rgba(0,0,0,0)}.mat-mdc-list-option .mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox:hover .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-hover-icon-color, var(--mat-app-primary))}.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color, var(--mat-app-on-surface))}.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-app-primary));background-color:var(--mdc-checkbox-selected-focus-icon-color, var(--mat-app-primary))}.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox:hover .mdc-checkbox__native-control~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color)}.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{background-color:var(--mdc-checkbox-disabled-selected-icon-color);border-color:rgba(0,0,0,0)}.mat-mdc-list-option .mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-app-on-primary))}.cdk-high-contrast-active .mat-mdc-list-option .mdc-checkbox__checkmark{color:CanvasText}.mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__checkmark,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-app-surface))}.cdk-high-contrast-active .mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__checkmark,.cdk-high-contrast-active .mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:CanvasText}.mat-mdc-list-option .mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mat-mdc-list-option .mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mdc-checkbox-selected-checkmark-color, var(--mat-app-on-primary))}.cdk-high-contrast-active .mat-mdc-list-option .mdc-checkbox__mixedmark{margin:0 1px}.mat-mdc-list-option .mdc-checkbox--disabled .mdc-checkbox__mixedmark,.mat-mdc-list-option .mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color, var(--mat-app-surface))}.mat-mdc-list-option .mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mat-mdc-list-option .mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mat-mdc-list-option .mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-list-option._mat-animation-noopable .mdc-checkbox *,.mat-mdc-list-option._mat-animation-noopable .mdc-checkbox *::before{transition:none !important;animation:none !important}.mat-mdc-list-option .mdc-radio{display:inline-block;position:relative;flex:0 0 auto;box-sizing:content-box;width:20px;height:20px;cursor:pointer;will-change:opacity,transform,border-color,color;padding:calc((var(--mdc-radio-state-layer-size) - 20px)/2)}.mat-mdc-list-option .mdc-radio__background{display:inline-block;position:relative;box-sizing:border-box;width:20px;height:20px}.mat-mdc-list-option .mdc-radio__background::before{position:absolute;transform:scale(0, 0);border-radius:50%;opacity:0;pointer-events:none;content:\\\"\\\";transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);width:var(--mdc-radio-state-layer-size);height:var(--mdc-radio-state-layer-size);top:calc(-1*(var(--mdc-radio-state-layer-size) - 20px)/2);left:calc(-1*(var(--mdc-radio-state-layer-size) - 20px)/2)}.mat-mdc-list-option .mdc-radio__outer-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;border-width:2px;border-style:solid;border-radius:50%;transition:border-color 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option .mdc-radio__inner-circle{position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;transform:scale(0, 0);border-width:10px;border-style:solid;border-radius:50%;transition:transform 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mat-mdc-list-option .mdc-radio__native-control{position:absolute;margin:0;padding:0;opacity:0;top:0;right:0;left:0;cursor:inherit;z-index:1;width:var(--mdc-radio-state-layer-size);height:var(--mdc-radio-state-layer-size)}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background{transition:opacity 90ms cubic-bezier(0, 0, 0.2, 1),transform 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__outer-circle{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle{transition:transform 90ms cubic-bezier(0, 0, 0.2, 1),border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option .mdc-radio__native-control:disabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-unselected-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-radio-disabled-unselected-icon-opacity)}.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background{cursor:default}.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__inner-circle,.mat-mdc-list-option .mdc-radio__native-control:disabled+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-disabled-selected-icon-color, var(--mat-app-on-surface));opacity:var(--mdc-radio-disabled-selected-icon-opacity)}.mat-mdc-list-option .mdc-radio__native-control:enabled:not(:checked)+.mdc-radio__background .mdc-radio__outer-circle{border-color:var(--mdc-radio-unselected-icon-color, var(--mat-app-on-surface-variant))}.mat-mdc-list-option .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__outer-circle,.mat-mdc-list-option .mdc-radio__native-control:enabled:checked+.mdc-radio__background .mdc-radio__inner-circle{border-color:var(--mdc-radio-selected-icon-color, var(--mat-app-primary))}.mat-mdc-list-option .mdc-radio__native-control:checked+.mdc-radio__background .mdc-radio__inner-circle{transform:scale(0.5);transition:transform 90ms cubic-bezier(0, 0, 0.2, 1),border-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-list-option._mat-animation-noopable .mdc-radio__background::before,.mat-mdc-list-option._mat-animation-noopable .mdc-radio__outer-circle,.mat-mdc-list-option._mat-animation-noopable .mdc-radio__inner-circle{transition:none !important}.mat-mdc-list-option .mdc-checkbox__native-control,.mat-mdc-list-option .mdc-radio__native-control{display:none}.cdk-high-contrast-active .mat-mdc-list-option.mdc-list-item--selected::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active .mat-mdc-list-option.mdc-list-item--selected [dir=rtl]::after{right:auto;left:16px}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatListOption;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nlet MatListSubheaderCssMatStyler = /*#__PURE__*/(() => {\n  class MatListSubheaderCssMatStyler {\n    static {\n      this.ɵfac = function MatListSubheaderCssMatStyler_Factory(t) {\n        return new (t || MatListSubheaderCssMatStyler)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatListSubheaderCssMatStyler,\n        selectors: [[\"\", \"mat-subheader\", \"\"], [\"\", \"matSubheader\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-subheader\", \"mdc-list-group__subheader\"],\n        standalone: true\n      });\n    }\n  }\n  return MatListSubheaderCssMatStyler;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to inject instances of `MatNavList`. It serves as\n * alternative token to the actual `MatNavList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_NAV_LIST = /*#__PURE__*/new InjectionToken('MatNavList');\nlet MatNavList = /*#__PURE__*/(() => {\n  class MatNavList extends MatListBase {\n    constructor() {\n      super(...arguments);\n      // An navigation list is considered interactive, but does not extend the interactive list\n      // base class. We do this because as per MDC, items of interactive lists are only reachable\n      // through keyboard shortcuts. We want all items for the navigation list to be reachable\n      // through tab key as we do not intend to provide any special accessibility treatment. The\n      // accessibility treatment depends on how the end-user will interact with it.\n      this._isNonInteractive = false;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatNavList_BaseFactory;\n        return function MatNavList_Factory(t) {\n          return (ɵMatNavList_BaseFactory || (ɵMatNavList_BaseFactory = i0.ɵɵgetInheritedFactory(MatNavList)))(t || MatNavList);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatNavList,\n        selectors: [[\"mat-nav-list\"]],\n        hostAttrs: [\"role\", \"navigation\", 1, \"mat-mdc-nav-list\", \"mat-mdc-list-base\", \"mdc-list\"],\n        exportAs: [\"matNavList\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MatListBase,\n          useExisting: MatNavList\n        }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c0,\n        decls: 1,\n        vars: 0,\n        template: function MatNavList_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵprojection(0);\n          }\n        },\n        styles: [_c1],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatNavList;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => MatSelectionList),\n  multi: true\n};\n/** Change event that is being fired whenever the selected state of an option changes. */\nclass MatSelectionListChange {\n  constructor( /** Reference to the selection list that emitted the event. */\n  source, /** Reference to the options that have been changed. */\n  options) {\n    this.source = source;\n    this.options = options;\n  }\n}\nlet MatSelectionList = /*#__PURE__*/(() => {\n  class MatSelectionList extends MatListBase {\n    /** Whether selection is limited to one or multiple items (default multiple). */\n    get multiple() {\n      return this._multiple;\n    }\n    set multiple(value) {\n      const newValue = coerceBooleanProperty(value);\n      if (newValue !== this._multiple) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && this._initialized) {\n          throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n        }\n        this._multiple = newValue;\n        this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n      }\n    }\n    /** Whether radio indicator for all list items is hidden. */\n    get hideSingleSelectionIndicator() {\n      return this._hideSingleSelectionIndicator;\n    }\n    set hideSingleSelectionIndicator(value) {\n      this._hideSingleSelectionIndicator = coerceBooleanProperty(value);\n    }\n    constructor(_element, _ngZone) {\n      super();\n      this._element = _element;\n      this._ngZone = _ngZone;\n      this._initialized = false;\n      /** Emits when the list has been destroyed. */\n      this._destroyed = new Subject();\n      /** View to model callback that should be called whenever the selected options change. */\n      this._onChange = _ => {};\n      /** Emits a change event whenever the selected state of an option changes. */\n      this.selectionChange = new EventEmitter();\n      /**\n       * Theme color of the selection list. This sets the checkbox color for all\n       * list options. This API is supported in M2 themes only, it has no effect in\n       * M3 themes.\n       *\n       * For information on applying color variants in M3, see\n       * https://material.angular.io/guide/theming#using-component-color-variants.\n       */\n      this.color = 'accent';\n      /**\n       * Function used for comparing an option against the selected value when determining which\n       * options should appear as selected. The first argument is the value of an options. The second\n       * one is a value from the selected value. A boolean must be returned.\n       */\n      this.compareWith = (a1, a2) => a1 === a2;\n      this._multiple = true;\n      this._hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n      /** The currently selected options. */\n      this.selectedOptions = new SelectionModel(this._multiple);\n      /** View to model callback that should be called if the list or its options lost focus. */\n      this._onTouched = () => {};\n      this._changeDetectorRef = inject(ChangeDetectorRef);\n      this._selectionListDisabled = false;\n      /** Handles focusout events within the list. */\n      this._handleFocusout = () => {\n        // Focus takes a while to update so we have to wrap our call in a timeout.\n        setTimeout(() => {\n          if (!this._containsFocus()) {\n            this._resetActiveOption();\n          }\n        });\n      };\n      /** Handles focusin events within the list. */\n      this._handleFocusin = event => {\n        if (this.disabled) {\n          return;\n        }\n        const activeIndex = this._items.toArray().findIndex(item => item._elementRef.nativeElement.contains(event.target));\n        if (activeIndex > -1) {\n          this._setActiveOption(activeIndex);\n        } else {\n          this._resetActiveOption();\n        }\n      };\n      this._isNonInteractive = false;\n    }\n    ngAfterViewInit() {\n      // Mark the selection list as initialized so that the `multiple`\n      // binding can no longer be changed.\n      this._initialized = true;\n      this._setupRovingTabindex();\n      // These events are bound outside the zone, because they don't change\n      // any change-detected properties and they can trigger timeouts.\n      this._ngZone.runOutsideAngular(() => {\n        this._element.nativeElement.addEventListener('focusin', this._handleFocusin);\n        this._element.nativeElement.addEventListener('focusout', this._handleFocusout);\n      });\n      if (this._value) {\n        this._setOptionsFromValues(this._value);\n      }\n      this._watchForSelectionChange();\n    }\n    ngOnChanges(changes) {\n      const disabledChanges = changes['disabled'];\n      const disableRippleChanges = changes['disableRipple'];\n      const hideSingleSelectionIndicatorChanges = changes['hideSingleSelectionIndicator'];\n      if (disableRippleChanges && !disableRippleChanges.firstChange || disabledChanges && !disabledChanges.firstChange || hideSingleSelectionIndicatorChanges && !hideSingleSelectionIndicatorChanges.firstChange) {\n        this._markOptionsForCheck();\n      }\n    }\n    ngOnDestroy() {\n      this._keyManager?.destroy();\n      this._element.nativeElement.removeEventListener('focusin', this._handleFocusin);\n      this._element.nativeElement.removeEventListener('focusout', this._handleFocusout);\n      this._destroyed.next();\n      this._destroyed.complete();\n      this._isDestroyed = true;\n    }\n    /** Focuses the selection list. */\n    focus(options) {\n      this._element.nativeElement.focus(options);\n    }\n    /** Selects all of the options. Returns the options that changed as a result. */\n    selectAll() {\n      return this._setAllOptionsSelected(true);\n    }\n    /** Deselects all of the options. Returns the options that changed as a result. */\n    deselectAll() {\n      return this._setAllOptionsSelected(false);\n    }\n    /** Reports a value change to the ControlValueAccessor */\n    _reportValueChange() {\n      // Stop reporting value changes after the list has been destroyed. This avoids\n      // cases where the list might wrongly reset its value once it is removed, but\n      // the form control is still live.\n      if (this.options && !this._isDestroyed) {\n        const value = this._getSelectedOptionValues();\n        this._onChange(value);\n        this._value = value;\n      }\n    }\n    /** Emits a change event if the selected state of an option changed. */\n    _emitChangeEvent(options) {\n      this.selectionChange.emit(new MatSelectionListChange(this, options));\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(values) {\n      this._value = values;\n      if (this.options) {\n        this._setOptionsFromValues(values || []);\n      }\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Whether the *entire* selection list is disabled. When true, each list item is also disabled\n     * and each list item is removed from the tab order (has tabindex=\"-1\").\n     */\n    get disabled() {\n      return this._selectionListDisabled;\n    }\n    set disabled(value) {\n      // Update the disabled state of this list. Write to `this._selectionListDisabled` instead of\n      // `super.disabled`. That is to avoid closure compiler compatibility issues with assigning to\n      // a super property.\n      this._selectionListDisabled = coerceBooleanProperty(value);\n      if (this._selectionListDisabled) {\n        this._keyManager?.setActiveItem(-1);\n      }\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n      this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n    /** Watches for changes in the selected state of the options and updates the list accordingly. */\n    _watchForSelectionChange() {\n      this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe(event => {\n        // Sync external changes to the model back to the options.\n        for (let item of event.added) {\n          item.selected = true;\n        }\n        for (let item of event.removed) {\n          item.selected = false;\n        }\n        if (!this._containsFocus()) {\n          this._resetActiveOption();\n        }\n      });\n    }\n    /** Sets the selected options based on the specified values. */\n    _setOptionsFromValues(values) {\n      this.options.forEach(option => option._setSelected(false));\n      values.forEach(value => {\n        const correspondingOption = this.options.find(option => {\n          // Skip options that are already in the model. This allows us to handle cases\n          // where the same primitive value is selected multiple times.\n          return option.selected ? false : this.compareWith(option.value, value);\n        });\n        if (correspondingOption) {\n          correspondingOption._setSelected(true);\n        }\n      });\n    }\n    /** Returns the values of the selected options. */\n    _getSelectedOptionValues() {\n      return this.options.filter(option => option.selected).map(option => option.value);\n    }\n    /** Marks all the options to be checked in the next change detection run. */\n    _markOptionsForCheck() {\n      if (this.options) {\n        this.options.forEach(option => option._markForCheck());\n      }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     */\n    _setAllOptionsSelected(isSelected, skipDisabled) {\n      // Keep track of whether anything changed, because we only want to\n      // emit the changed event when something actually changed.\n      const changedOptions = [];\n      this.options.forEach(option => {\n        if ((!skipDisabled || !option.disabled) && option._setSelected(isSelected)) {\n          changedOptions.push(option);\n        }\n      });\n      if (changedOptions.length) {\n        this._reportValueChange();\n      }\n      return changedOptions;\n    }\n    // Note: This getter exists for backwards compatibility. The `_items` query list\n    // cannot be named `options` as it will be picked up by the interactive list base.\n    /** The option components contained within this selection-list. */\n    get options() {\n      return this._items;\n    }\n    /** Handles keydown events within the list. */\n    _handleKeydown(event) {\n      const activeItem = this._keyManager.activeItem;\n      if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this._keyManager.isTyping() && activeItem && !activeItem.disabled) {\n        event.preventDefault();\n        activeItem._toggleOnInteraction();\n      } else if (event.keyCode === A && this.multiple && !this._keyManager.isTyping() && hasModifierKey(event, 'ctrlKey')) {\n        const shouldSelect = this.options.some(option => !option.disabled && !option.selected);\n        event.preventDefault();\n        this._emitChangeEvent(this._setAllOptionsSelected(shouldSelect, true));\n      } else {\n        this._keyManager.onKeydown(event);\n      }\n    }\n    /**\n     * Sets up the logic for maintaining the roving tabindex.\n     *\n     * `skipPredicate` determines if key manager should avoid putting a given list item in the tab\n     * index. Allow disabled list items to receive focus to align with WAI ARIA recommendation.\n     * Normally WAI ARIA's instructions are to exclude disabled items from the tab order, but it\n     * makes a few exceptions for compound widgets.\n     *\n     * From [Developing a Keyboard Interface](\n     * https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n     *   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n     *   Listbox...\"\n     */\n    _setupRovingTabindex() {\n      this._keyManager = new FocusKeyManager(this._items).withHomeAndEnd().withTypeAhead().withWrap().skipPredicate(() => this.disabled);\n      // Set the initial focus.\n      this._resetActiveOption();\n      // Move the tabindex to the currently-focused list item.\n      this._keyManager.change.subscribe(activeItemIndex => this._setActiveOption(activeItemIndex));\n      // If the active item is removed from the list, reset back to the first one.\n      this._items.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        const activeItem = this._keyManager.activeItem;\n        if (!activeItem || this._items.toArray().indexOf(activeItem) === -1) {\n          this._resetActiveOption();\n        }\n      });\n    }\n    /**\n     * Sets an option as active.\n     * @param index Index of the active option. If set to -1, no option will be active.\n     */\n    _setActiveOption(index) {\n      this._items.forEach((item, itemIndex) => item._setTabindex(itemIndex === index ? 0 : -1));\n      this._keyManager.updateActiveItem(index);\n    }\n    /**\n     * Resets the active option. When the list is disabled, remove all options from to the tab order.\n     * Otherwise, focus the first selected option.\n     */\n    _resetActiveOption() {\n      if (this.disabled) {\n        this._setActiveOption(-1);\n        return;\n      }\n      const activeItem = this._items.find(item => item.selected && !item.disabled) || this._items.first;\n      this._setActiveOption(activeItem ? this._items.toArray().indexOf(activeItem) : -1);\n    }\n    /** Returns whether the focus is currently within the list. */\n    _containsFocus() {\n      const activeElement = _getFocusedElementPierceShadowDom();\n      return activeElement && this._element.nativeElement.contains(activeElement);\n    }\n    static {\n      this.ɵfac = function MatSelectionList_Factory(t) {\n        return new (t || MatSelectionList)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatSelectionList,\n        selectors: [[\"mat-selection-list\"]],\n        contentQueries: function MatSelectionList_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatListOption, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n          }\n        },\n        hostAttrs: [\"role\", \"listbox\", 1, \"mat-mdc-selection-list\", \"mat-mdc-list-base\", \"mdc-list\"],\n        hostVars: 1,\n        hostBindings: function MatSelectionList_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"keydown\", function MatSelectionList_keydown_HostBindingHandler($event) {\n              return ctx._handleKeydown($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-multiselectable\", ctx.multiple);\n          }\n        },\n        inputs: {\n          color: \"color\",\n          compareWith: \"compareWith\",\n          multiple: \"multiple\",\n          hideSingleSelectionIndicator: \"hideSingleSelectionIndicator\",\n          disabled: \"disabled\"\n        },\n        outputs: {\n          selectionChange: \"selectionChange\"\n        },\n        exportAs: [\"matSelectionList\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_SELECTION_LIST_VALUE_ACCESSOR, {\n          provide: MatListBase,\n          useExisting: MatSelectionList\n        }, {\n          provide: SELECTION_LIST,\n          useExisting: MatSelectionList\n        }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c0,\n        decls: 1,\n        vars: 0,\n        template: function MatSelectionList_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵprojection(0);\n          }\n        },\n        styles: [_c1],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatSelectionList;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatListModule = /*#__PURE__*/(() => {\n  class MatListModule {\n    static {\n      this.ɵfac = function MatListModule_Factory(t) {\n        return new (t || MatListModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatListModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [ObserversModule, CommonModule, MatCommonModule, MatRippleModule, MatPseudoCheckboxModule, MatDividerModule]\n      });\n    }\n  }\n  return MatListModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LIST, MAT_LIST_CONFIG, MAT_NAV_LIST, MAT_SELECTION_LIST_VALUE_ACCESSOR, MatActionList, MatList, MatListItem, MatListItemAvatar, MatListItemIcon, MatListItemLine, MatListItemMeta, MatListItemTitle, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange, SELECTION_LIST, _MatListItemGraphicBase };\n","import * as i2 from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { RIGHT_ARROW, DOWN_ARROW, LEFT_ARROW, UP_ARROW, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, booleanAttribute, Directive, Optional, Inject, ContentChildren, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, ViewChild, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/bidi';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatRipple, MatPseudoCheckbox, MatCommonModule, MatRippleModule } from '@angular/material/core';\n\n/**\n * Injection token that can be used to configure the\n * default options for all button toggles within an app.\n */\nconst _c0 = [\"button\"];\nconst _c1 = [\"*\"];\nfunction MatButtonToggle_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r1.disabled);\n  }\n}\nfunction MatButtonToggle_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r1.disabled);\n  }\n}\nconst MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS', {\n  providedIn: 'root',\n  factory: MAT_BUTTON_TOGGLE_GROUP_DEFAULT_OPTIONS_FACTORY\n});\nfunction MAT_BUTTON_TOGGLE_GROUP_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    hideSingleSelectionIndicator: false,\n    hideMultipleSelectionIndicator: false,\n    disabledInteractive: false\n  };\n}\n/**\n * Injection token that can be used to reference instances of `MatButtonToggleGroup`.\n * It serves as alternative token to the actual `MatButtonToggleGroup` class which\n * could cause unnecessary retention of the class and its component metadata.\n */\nconst MAT_BUTTON_TOGGLE_GROUP = /*#__PURE__*/new InjectionToken('MatButtonToggleGroup');\n/**\n * Provider Expression that allows mat-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => MatButtonToggleGroup),\n  multi: true\n};\n// Counter used to generate unique IDs.\nlet uniqueIdCounter = 0;\n/** Change event object emitted by button toggle. */\nclass MatButtonToggleChange {\n  constructor( /** The button toggle that emits the event. */\n  source, /** The value assigned to the button toggle. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\n/** Exclusive selection button toggle group that behaves like a radio-button group. */\nlet MatButtonToggleGroup = /*#__PURE__*/(() => {\n  class MatButtonToggleGroup {\n    /** `name` attribute for the underlying `input` element. */\n    get name() {\n      return this._name;\n    }\n    set name(value) {\n      this._name = value;\n      this._markButtonsForCheck();\n    }\n    /** Value of the toggle group. */\n    get value() {\n      const selected = this._selectionModel ? this._selectionModel.selected : [];\n      if (this.multiple) {\n        return selected.map(toggle => toggle.value);\n      }\n      return selected[0] ? selected[0].value : undefined;\n    }\n    set value(newValue) {\n      this._setSelectionByValue(newValue);\n      this.valueChange.emit(this.value);\n    }\n    /** Selected button toggles in the group. */\n    get selected() {\n      const selected = this._selectionModel ? this._selectionModel.selected : [];\n      return this.multiple ? selected : selected[0] || null;\n    }\n    /** Whether multiple button toggles can be selected. */\n    get multiple() {\n      return this._multiple;\n    }\n    set multiple(value) {\n      this._multiple = value;\n      this._markButtonsForCheck();\n    }\n    /** Whether multiple button toggle group is disabled. */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = value;\n      this._markButtonsForCheck();\n    }\n    /** Whether buttons in the group should be interactive while they're disabled. */\n    get disabledInteractive() {\n      return this._disabledInteractive;\n    }\n    set disabledInteractive(value) {\n      this._disabledInteractive = value;\n      this._markButtonsForCheck();\n    }\n    /** The layout direction of the toggle button group. */\n    get dir() {\n      return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether checkmark indicator for single-selection button toggle groups is hidden. */\n    get hideSingleSelectionIndicator() {\n      return this._hideSingleSelectionIndicator;\n    }\n    set hideSingleSelectionIndicator(value) {\n      this._hideSingleSelectionIndicator = value;\n      this._markButtonsForCheck();\n    }\n    /** Whether checkmark indicator for multiple-selection button toggle groups is hidden. */\n    get hideMultipleSelectionIndicator() {\n      return this._hideMultipleSelectionIndicator;\n    }\n    set hideMultipleSelectionIndicator(value) {\n      this._hideMultipleSelectionIndicator = value;\n      this._markButtonsForCheck();\n    }\n    constructor(_changeDetector, defaultOptions, _dir) {\n      this._changeDetector = _changeDetector;\n      this._dir = _dir;\n      this._multiple = false;\n      this._disabled = false;\n      this._disabledInteractive = false;\n      /**\n       * The method to be called in order to update ngModel.\n       * Now `ngModel` binding is not supported in multiple selection mode.\n       */\n      this._controlValueAccessorChangeFn = () => {};\n      /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n      this._onTouched = () => {};\n      this._name = `mat-button-toggle-group-${uniqueIdCounter++}`;\n      /**\n       * Event that emits whenever the value of the group changes.\n       * Used to facilitate two-way data binding.\n       * @docs-private\n       */\n      this.valueChange = new EventEmitter();\n      /** Event emitted when the group's value changes. */\n      this.change = new EventEmitter();\n      this.appearance = defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n      this.hideSingleSelectionIndicator = defaultOptions?.hideSingleSelectionIndicator ?? false;\n      this.hideMultipleSelectionIndicator = defaultOptions?.hideMultipleSelectionIndicator ?? false;\n    }\n    ngOnInit() {\n      this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n    }\n    ngAfterContentInit() {\n      this._selectionModel.select(...this._buttonToggles.filter(toggle => toggle.checked));\n      if (!this.multiple) {\n        this._initializeTabIndex();\n      }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value Value to be set to the model.\n     */\n    writeValue(value) {\n      this.value = value;\n      this._changeDetector.markForCheck();\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n      this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n    /** Handle keydown event calling to single-select button toggle. */\n    _keydown(event) {\n      if (this.multiple || this.disabled) {\n        return;\n      }\n      const target = event.target;\n      const buttonId = target.id;\n      const index = this._buttonToggles.toArray().findIndex(toggle => {\n        return toggle.buttonId === buttonId;\n      });\n      let nextButton = null;\n      switch (event.keyCode) {\n        case SPACE:\n        case ENTER:\n          nextButton = this._buttonToggles.get(index) || null;\n          break;\n        case UP_ARROW:\n          nextButton = this._getNextButton(index, -1);\n          break;\n        case LEFT_ARROW:\n          nextButton = this._getNextButton(index, this.dir === 'ltr' ? -1 : 1);\n          break;\n        case DOWN_ARROW:\n          nextButton = this._getNextButton(index, 1);\n          break;\n        case RIGHT_ARROW:\n          nextButton = this._getNextButton(index, this.dir === 'ltr' ? 1 : -1);\n          break;\n        default:\n          return;\n      }\n      if (nextButton) {\n        event.preventDefault();\n        nextButton._onButtonClick();\n        nextButton.focus();\n      }\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent(toggle) {\n      const event = new MatButtonToggleChange(toggle, this.value);\n      this._rawValue = event.value;\n      this._controlValueAccessorChangeFn(event.value);\n      this.change.emit(event);\n    }\n    /**\n     * Syncs a button toggle's selected state with the model value.\n     * @param toggle Toggle to be synced.\n     * @param select Whether the toggle should be selected.\n     * @param isUserInput Whether the change was a result of a user interaction.\n     * @param deferEvents Whether to defer emitting the change events.\n     */\n    _syncButtonToggle(toggle, select, isUserInput = false, deferEvents = false) {\n      // Deselect the currently-selected toggle, if we're in single-selection\n      // mode and the button being toggled isn't selected at the moment.\n      if (!this.multiple && this.selected && !toggle.checked) {\n        this.selected.checked = false;\n      }\n      if (this._selectionModel) {\n        if (select) {\n          this._selectionModel.select(toggle);\n        } else {\n          this._selectionModel.deselect(toggle);\n        }\n      } else {\n        deferEvents = true;\n      }\n      // We need to defer in some cases in order to avoid \"changed after checked errors\", however\n      // the side-effect is that we may end up updating the model value out of sequence in others\n      // The `deferEvents` flag allows us to decide whether to do it on a case-by-case basis.\n      if (deferEvents) {\n        Promise.resolve().then(() => this._updateModelValue(toggle, isUserInput));\n      } else {\n        this._updateModelValue(toggle, isUserInput);\n      }\n    }\n    /** Checks whether a button toggle is selected. */\n    _isSelected(toggle) {\n      return this._selectionModel && this._selectionModel.isSelected(toggle);\n    }\n    /** Determines whether a button toggle should be checked on init. */\n    _isPrechecked(toggle) {\n      if (typeof this._rawValue === 'undefined') {\n        return false;\n      }\n      if (this.multiple && Array.isArray(this._rawValue)) {\n        return this._rawValue.some(value => toggle.value != null && value === toggle.value);\n      }\n      return toggle.value === this._rawValue;\n    }\n    /** Initializes the tabindex attribute using the radio pattern. */\n    _initializeTabIndex() {\n      this._buttonToggles.forEach(toggle => {\n        toggle.tabIndex = -1;\n      });\n      if (this.selected) {\n        this.selected.tabIndex = 0;\n      } else {\n        for (let i = 0; i < this._buttonToggles.length; i++) {\n          const toggle = this._buttonToggles.get(i);\n          if (!toggle.disabled) {\n            toggle.tabIndex = 0;\n            break;\n          }\n        }\n      }\n      this._markButtonsForCheck();\n    }\n    /** Obtain the subsequent toggle to which the focus shifts. */\n    _getNextButton(startIndex, offset) {\n      const items = this._buttonToggles;\n      for (let i = 1; i <= items.length; i++) {\n        const index = (startIndex + offset * i + items.length) % items.length;\n        const item = items.get(index);\n        if (item && !item.disabled) {\n          return item;\n        }\n      }\n      return null;\n    }\n    /** Updates the selection state of the toggles in the group based on a value. */\n    _setSelectionByValue(value) {\n      this._rawValue = value;\n      if (!this._buttonToggles) {\n        return;\n      }\n      if (this.multiple && value) {\n        if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw Error('Value must be an array in multiple-selection mode.');\n        }\n        this._clearSelection();\n        value.forEach(currentValue => this._selectValue(currentValue));\n      } else {\n        this._clearSelection();\n        this._selectValue(value);\n      }\n    }\n    /** Clears the selected toggles. */\n    _clearSelection() {\n      this._selectionModel.clear();\n      this._buttonToggles.forEach(toggle => {\n        toggle.checked = false;\n        // If the button toggle is in single select mode, initialize the tabIndex.\n        if (!this.multiple) {\n          toggle.tabIndex = -1;\n        }\n      });\n    }\n    /** Selects a value if there's a toggle that corresponds to it. */\n    _selectValue(value) {\n      const correspondingOption = this._buttonToggles.find(toggle => {\n        return toggle.value != null && toggle.value === value;\n      });\n      if (correspondingOption) {\n        correspondingOption.checked = true;\n        this._selectionModel.select(correspondingOption);\n        if (!this.multiple) {\n          // If the button toggle is in single select mode, reset the tabIndex.\n          correspondingOption.tabIndex = 0;\n        }\n      }\n    }\n    /** Syncs up the group's value with the model and emits the change event. */\n    _updateModelValue(toggle, isUserInput) {\n      // Only emit the change event for user input.\n      if (isUserInput) {\n        this._emitChangeEvent(toggle);\n      }\n      // Note: we emit this one no matter whether it was a user interaction, because\n      // it is used by Angular to sync up the two-way data binding.\n      this.valueChange.emit(this.value);\n    }\n    /** Marks all of the child button toggles to be checked. */\n    _markButtonsForCheck() {\n      this._buttonToggles?.forEach(toggle => toggle._markForCheck());\n    }\n    static {\n      this.ɵfac = function MatButtonToggleGroup_Factory(t) {\n        return new (t || MatButtonToggleGroup)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, 8), i0.ɵɵdirectiveInject(i1.Directionality, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatButtonToggleGroup,\n        selectors: [[\"mat-button-toggle-group\"]],\n        contentQueries: function MatButtonToggleGroup_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatButtonToggle, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._buttonToggles = _t);\n          }\n        },\n        hostAttrs: [1, \"mat-button-toggle-group\"],\n        hostVars: 6,\n        hostBindings: function MatButtonToggleGroup_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"keydown\", function MatButtonToggleGroup_keydown_HostBindingHandler($event) {\n              return ctx._keydown($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"role\", ctx.multiple ? \"group\" : \"radiogroup\")(\"aria-disabled\", ctx.disabled);\n            i0.ɵɵclassProp(\"mat-button-toggle-vertical\", ctx.vertical)(\"mat-button-toggle-group-appearance-standard\", ctx.appearance === \"standard\");\n          }\n        },\n        inputs: {\n          appearance: \"appearance\",\n          name: \"name\",\n          vertical: [2, \"vertical\", \"vertical\", booleanAttribute],\n          value: \"value\",\n          multiple: [2, \"multiple\", \"multiple\", booleanAttribute],\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          disabledInteractive: [2, \"disabledInteractive\", \"disabledInteractive\", booleanAttribute],\n          hideSingleSelectionIndicator: [2, \"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute],\n          hideMultipleSelectionIndicator: [2, \"hideMultipleSelectionIndicator\", \"hideMultipleSelectionIndicator\", booleanAttribute]\n        },\n        outputs: {\n          valueChange: \"valueChange\",\n          change: \"change\"\n        },\n        exportAs: [\"matButtonToggleGroup\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, {\n          provide: MAT_BUTTON_TOGGLE_GROUP,\n          useExisting: MatButtonToggleGroup\n        }]), i0.ɵɵInputTransformsFeature]\n      });\n    }\n  }\n  return MatButtonToggleGroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Single button inside of a toggle group. */\nlet MatButtonToggle = /*#__PURE__*/(() => {\n  class MatButtonToggle {\n    /** Unique ID for the underlying `button` element. */\n    get buttonId() {\n      return `${this.id}-button`;\n    }\n    /** Tabindex of the toggle. */\n    get tabIndex() {\n      return this._tabIndex;\n    }\n    set tabIndex(value) {\n      this._tabIndex = value;\n      this._markForCheck();\n    }\n    /** The appearance style of the button. */\n    get appearance() {\n      return this.buttonToggleGroup ? this.buttonToggleGroup.appearance : this._appearance;\n    }\n    set appearance(value) {\n      this._appearance = value;\n    }\n    /** Whether the button is checked. */\n    get checked() {\n      return this.buttonToggleGroup ? this.buttonToggleGroup._isSelected(this) : this._checked;\n    }\n    set checked(value) {\n      if (value !== this._checked) {\n        this._checked = value;\n        if (this.buttonToggleGroup) {\n          this.buttonToggleGroup._syncButtonToggle(this, this._checked);\n        }\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /** Whether the button is disabled. */\n    get disabled() {\n      return this._disabled || this.buttonToggleGroup && this.buttonToggleGroup.disabled;\n    }\n    set disabled(value) {\n      this._disabled = value;\n    }\n    /** Whether the button should remain interactive when it is disabled. */\n    get disabledInteractive() {\n      return this._disabledInteractive || this.buttonToggleGroup !== null && this.buttonToggleGroup.disabledInteractive;\n    }\n    set disabledInteractive(value) {\n      this._disabledInteractive = value;\n    }\n    constructor(toggleGroup, _changeDetectorRef, _elementRef, _focusMonitor, defaultTabIndex, defaultOptions) {\n      this._changeDetectorRef = _changeDetectorRef;\n      this._elementRef = _elementRef;\n      this._focusMonitor = _focusMonitor;\n      this._checked = false;\n      /**\n       * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n       */\n      this.ariaLabelledby = null;\n      this._disabled = false;\n      /** Event emitted when the group value changes. */\n      this.change = new EventEmitter();\n      const parsedTabIndex = Number(defaultTabIndex);\n      this.tabIndex = parsedTabIndex || parsedTabIndex === 0 ? parsedTabIndex : null;\n      this.buttonToggleGroup = toggleGroup;\n      this.appearance = defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n      this.disabledInteractive = defaultOptions?.disabledInteractive ?? false;\n    }\n    ngOnInit() {\n      const group = this.buttonToggleGroup;\n      this.id = this.id || `mat-button-toggle-${uniqueIdCounter++}`;\n      if (group) {\n        if (group._isPrechecked(this)) {\n          this.checked = true;\n        } else if (group._isSelected(this) !== this._checked) {\n          // As side effect of the circular dependency between the toggle group and the button,\n          // we may end up in a state where the button is supposed to be checked on init, but it\n          // isn't, because the checked value was assigned too early. This can happen when Ivy\n          // assigns the static input value before the `ngOnInit` has run.\n          group._syncButtonToggle(this, this._checked);\n        }\n      }\n    }\n    ngAfterViewInit() {\n      this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n      const group = this.buttonToggleGroup;\n      this._focusMonitor.stopMonitoring(this._elementRef);\n      // Remove the toggle from the selection once it's destroyed. Needs to happen\n      // on the next tick in order to avoid \"changed after checked\" errors.\n      if (group && group._isSelected(this)) {\n        group._syncButtonToggle(this, false, false, true);\n      }\n    }\n    /** Focuses the button. */\n    focus(options) {\n      this._buttonElement.nativeElement.focus(options);\n    }\n    /** Checks the button toggle due to an interaction with the underlying native button. */\n    _onButtonClick() {\n      if (this.disabled) {\n        return;\n      }\n      const newChecked = this.isSingleSelector() ? true : !this._checked;\n      if (newChecked !== this._checked) {\n        this._checked = newChecked;\n        if (this.buttonToggleGroup) {\n          this.buttonToggleGroup._syncButtonToggle(this, this._checked, true);\n          this.buttonToggleGroup._onTouched();\n        }\n      }\n      if (this.isSingleSelector()) {\n        const focusable = this.buttonToggleGroup._buttonToggles.find(toggle => {\n          return toggle.tabIndex === 0;\n        });\n        // Modify the tabindex attribute of the last focusable button toggle to -1.\n        if (focusable) {\n          focusable.tabIndex = -1;\n        }\n        // Modify the tabindex attribute of the presently selected button toggle to 0.\n        this.tabIndex = 0;\n      }\n      // Emit a change event when it's the single selector\n      this.change.emit(new MatButtonToggleChange(this, this.value));\n    }\n    /**\n     * Marks the button toggle as needing checking for change detection.\n     * This method is exposed because the parent button toggle group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n      // When the group value changes, the button will not be notified.\n      // Use `markForCheck` to explicit update button toggle's status.\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Gets the name that should be assigned to the inner DOM node. */\n    _getButtonName() {\n      if (this.isSingleSelector()) {\n        return this.buttonToggleGroup.name;\n      }\n      return this.name || null;\n    }\n    /** Whether the toggle is in single selection mode. */\n    isSingleSelector() {\n      return this.buttonToggleGroup && !this.buttonToggleGroup.multiple;\n    }\n    static {\n      this.ɵfac = function MatButtonToggle_Factory(t) {\n        return new (t || MatButtonToggle)(i0.ɵɵdirectiveInject(MAT_BUTTON_TOGGLE_GROUP, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.FocusMonitor), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatButtonToggle,\n        selectors: [[\"mat-button-toggle\"]],\n        viewQuery: function MatButtonToggle_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._buttonElement = _t.first);\n          }\n        },\n        hostAttrs: [\"role\", \"presentation\", 1, \"mat-button-toggle\"],\n        hostVars: 14,\n        hostBindings: function MatButtonToggle_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"focus\", function MatButtonToggle_focus_HostBindingHandler() {\n              return ctx.focus();\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-label\", null)(\"aria-labelledby\", null)(\"id\", ctx.id)(\"name\", null);\n            i0.ɵɵclassProp(\"mat-button-toggle-standalone\", !ctx.buttonToggleGroup)(\"mat-button-toggle-checked\", ctx.checked)(\"mat-button-toggle-disabled\", ctx.disabled)(\"mat-button-toggle-disabled-interactive\", ctx.disabledInteractive)(\"mat-button-toggle-appearance-standard\", ctx.appearance === \"standard\");\n          }\n        },\n        inputs: {\n          ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n          ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n          id: \"id\",\n          name: \"name\",\n          value: \"value\",\n          tabIndex: \"tabIndex\",\n          disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n          appearance: \"appearance\",\n          checked: [2, \"checked\", \"checked\", booleanAttribute],\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          disabledInteractive: [2, \"disabledInteractive\", \"disabledInteractive\", booleanAttribute]\n        },\n        outputs: {\n          change: \"change\"\n        },\n        exportAs: [\"matButtonToggle\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c1,\n        decls: 8,\n        vars: 14,\n        consts: [[\"button\", \"\"], [\"type\", \"button\", 1, \"mat-button-toggle-button\", \"mat-focus-indicator\", 3, \"click\", \"id\", \"disabled\"], [1, \"mat-button-toggle-label-content\"], [\"state\", \"checked\", \"aria-hidden\", \"true\", \"appearance\", \"minimal\", 1, \"mat-mdc-option-pseudo-checkbox\", 3, \"disabled\"], [1, \"mat-button-toggle-focus-overlay\"], [\"matRipple\", \"\", 1, \"mat-button-toggle-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"]],\n        template: function MatButtonToggle_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"button\", 1, 0);\n            i0.ɵɵlistener(\"click\", function MatButtonToggle_Template_button_click_0_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._onButtonClick());\n            });\n            i0.ɵɵelementStart(2, \"span\", 2);\n            i0.ɵɵtemplate(3, MatButtonToggle_Conditional_3_Template, 1, 1, \"mat-pseudo-checkbox\", 3)(4, MatButtonToggle_Conditional_4_Template, 1, 1, \"mat-pseudo-checkbox\", 3);\n            i0.ɵɵprojection(5);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelement(6, \"span\", 4)(7, \"span\", 5);\n          }\n          if (rf & 2) {\n            const button_r3 = i0.ɵɵreference(1);\n            i0.ɵɵproperty(\"id\", ctx.buttonId)(\"disabled\", ctx.disabled && !ctx.disabledInteractive || null);\n            i0.ɵɵattribute(\"role\", ctx.isSingleSelector() ? \"radio\" : \"button\")(\"tabindex\", ctx.disabled && !ctx.disabledInteractive ? -1 : ctx.tabIndex)(\"aria-pressed\", !ctx.isSingleSelector() ? ctx.checked : null)(\"aria-checked\", ctx.isSingleSelector() ? ctx.checked : null)(\"name\", ctx._getButtonName())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-disabled\", ctx.disabled && ctx.disabledInteractive ? \"true\" : null);\n            i0.ɵɵadvance(3);\n            i0.ɵɵconditional(ctx.buttonToggleGroup && ctx.checked && !ctx.buttonToggleGroup.multiple && !ctx.buttonToggleGroup.hideSingleSelectionIndicator ? 3 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx.buttonToggleGroup && ctx.checked && ctx.buttonToggleGroup.multiple && !ctx.buttonToggleGroup.hideMultipleSelectionIndicator ? 4 : -1);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"matRippleTrigger\", button_r3)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled);\n          }\n        },\n        dependencies: [MatRipple, MatPseudoCheckbox],\n        styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;-webkit-tap-highlight-color:rgba(0,0,0,0);transform:translateZ(0);border-radius:var(--mat-legacy-button-toggle-shape)}.mat-button-toggle-standalone:not([class*=mat-elevation-z]),.mat-button-toggle-group:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:var(--mat-standard-button-toggle-shape, var(--mat-app-corner-full));border:solid 1px var(--mat-standard-button-toggle-divider-color, var(--mat-app-outline))}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard .mat-pseudo-checkbox,.mat-button-toggle-group-appearance-standard .mat-pseudo-checkbox{--mat-minimal-pseudo-checkbox-selected-checkmark-color: var(--mat-standard-button-toggle-selected-state-text-color, var(--mat-app-on-secondary-container))}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard:not([class*=mat-elevation-z]),.mat-button-toggle-group-appearance-standard:not([class*=mat-elevation-z]){box-shadow:none}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative;color:var(--mat-legacy-button-toggle-text-color);font-family:var(--mat-legacy-button-toggle-label-text-font);font-size:var(--mat-legacy-button-toggle-label-text-size);line-height:var(--mat-legacy-button-toggle-label-text-line-height);font-weight:var(--mat-legacy-button-toggle-label-text-weight);letter-spacing:var(--mat-legacy-button-toggle-label-text-tracking);--mat-minimal-pseudo-checkbox-selected-checkmark-color: var(--mat-legacy-button-toggle-selected-state-text-color)}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:var(--mat-legacy-button-toggle-focus-state-layer-opacity)}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle .mat-pseudo-checkbox{margin-right:12px}[dir=rtl] .mat-button-toggle .mat-pseudo-checkbox{margin-right:0;margin-left:12px}.mat-button-toggle-checked{color:var(--mat-legacy-button-toggle-selected-state-text-color);background-color:var(--mat-legacy-button-toggle-selected-state-background-color)}.mat-button-toggle-disabled{pointer-events:none;color:var(--mat-legacy-button-toggle-disabled-state-text-color);background-color:var(--mat-legacy-button-toggle-disabled-state-background-color);--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: var(--mat-legacy-button-toggle-disabled-state-text-color)}.mat-button-toggle-disabled.mat-button-toggle-checked{background-color:var(--mat-legacy-button-toggle-disabled-selected-state-background-color)}.mat-button-toggle-disabled-interactive{pointer-events:auto}.mat-button-toggle-appearance-standard{color:var(--mat-standard-button-toggle-text-color, var(--mat-app-on-surface));background-color:var(--mat-standard-button-toggle-background-color);font-family:var(--mat-standard-button-toggle-label-text-font, var(--mat-app-label-large-font));font-size:var(--mat-standard-button-toggle-label-text-size, var(--mat-app-label-large-size));line-height:var(--mat-standard-button-toggle-label-text-line-height, var(--mat-app-label-large-line-height));font-weight:var(--mat-standard-button-toggle-label-text-weight, var(--mat-app-label-large-weight));letter-spacing:var(--mat-standard-button-toggle-label-text-tracking, var(--mat-app-label-large-tracking))}.mat-button-toggle-group-appearance-standard .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:solid 1px var(--mat-standard-button-toggle-divider-color, var(--mat-app-outline))}[dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:none;border-right:solid 1px var(--mat-standard-button-toggle-divider-color, var(--mat-app-outline))}.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:none;border-right:none;border-top:solid 1px var(--mat-standard-button-toggle-divider-color, var(--mat-app-outline))}.mat-button-toggle-appearance-standard.mat-button-toggle-checked{color:var(--mat-standard-button-toggle-selected-state-text-color, var(--mat-app-on-secondary-container));background-color:var(--mat-standard-button-toggle-selected-state-background-color, var(--mat-app-secondary-container))}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled{color:var(--mat-standard-button-toggle-disabled-state-text-color);background-color:var(--mat-standard-button-toggle-disabled-state-background-color)}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled .mat-pseudo-checkbox{--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: var(--mat-standard-button-toggle-disabled-selected-state-text-color)}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled.mat-button-toggle-checked{color:var(--mat-standard-button-toggle-disabled-selected-state-text-color);background-color:var(--mat-standard-button-toggle-disabled-selected-state-background-color)}.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{background-color:var(--mat-standard-button-toggle-state-layer-color, var(--mat-app-on-surface))}.mat-button-toggle-appearance-standard:hover .mat-button-toggle-focus-overlay{opacity:var(--mat-standard-button-toggle-hover-state-layer-opacity, var(--mat-app-hover-state-layer-opacity))}.mat-button-toggle-appearance-standard.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:var(--mat-standard-button-toggle-focus-state-layer-opacity, var(--mat-app-focus-state-layer-opacity))}@media(hover: none){.mat-button-toggle-appearance-standard:hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;user-select:none;display:inline-block;padding:0 16px;line-height:var(--mat-legacy-button-toggle-height);position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px;line-height:var(--mat-standard-button-toggle-height)}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;pointer-events:none;opacity:0;background-color:var(--mat-legacy-button-toggle-state-layer-color)}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 500px;opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked:hover .mat-button-toggle-focus-overlay{opacity:.6}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard{--mat-focus-indicator-border-radius:var(--mat-standard-button-toggle-shape, var(--mat-app-corner-full))}.mat-button-toggle-group-appearance-standard .mat-button-toggle:last-of-type .mat-button-toggle-button::before{border-top-right-radius:var(--mat-standard-button-toggle-shape, var(--mat-app-corner-full));border-bottom-right-radius:var(--mat-standard-button-toggle-shape, var(--mat-app-corner-full))}.mat-button-toggle-group-appearance-standard .mat-button-toggle:first-of-type .mat-button-toggle-button::before{border-top-left-radius:var(--mat-standard-button-toggle-shape, var(--mat-app-corner-full));border-bottom-left-radius:var(--mat-standard-button-toggle-shape, var(--mat-app-corner-full))}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatButtonToggle;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatButtonToggleModule = /*#__PURE__*/(() => {\n  class MatButtonToggleModule {\n    static {\n      this.ɵfac = function MatButtonToggleModule_Factory(t) {\n        return new (t || MatButtonToggleModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatButtonToggleModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule, MatRippleModule, MatButtonToggle, MatCommonModule]\n      });\n    }\n  }\n  return MatButtonToggleModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, MAT_BUTTON_TOGGLE_GROUP, MAT_BUTTON_TOGGLE_GROUP_DEFAULT_OPTIONS_FACTORY, MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, MatButtonToggle, MatButtonToggleChange, MatButtonToggleGroup, MatButtonToggleModule };\n","import * as i1 from 'rxjs';\nimport { merge, Observable, Subject, defer } from 'rxjs';\nimport { ignoreElements, materialize, map, catchError, filter, groupBy, mergeMap, exhaustMap, dematerialize, take, concatMap, finalize } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, NgModule, Optional, inject, makeEnvironmentProviders, ENVIRONMENT_INITIALIZER } from '@angular/core';\nimport * as i3 from '@ngrx/store';\nimport { ScannedActionsSubject, createAction, ROOT_STORE_PROVIDER, FEATURE_STATE_PROVIDER, Store } from '@ngrx/store';\nconst DEFAULT_EFFECT_CONFIG = {\n  dispatch: true,\n  functional: false,\n  useEffectsErrorHandler: true\n};\nconst CREATE_EFFECT_METADATA_KEY = '__@ngrx/effects_create__';\n\n/**\n * @description\n *\n * Creates an effect from a source and an `EffectConfig`.\n *\n * @param source A function which returns an observable or observable factory.\n * @param config A `EffectConfig` to configure the effect. By default,\n * `dispatch` is true, `functional` is false, and `useEffectsErrorHandler` is\n * true.\n * @returns If `EffectConfig`#`functional` is true, returns the source function.\n * Else, returns the source function result. When `EffectConfig`#`dispatch` is\n * true, the source function result needs to be `Observable<Action>`.\n *\n * @usageNotes\n *\n * ### Class Effects\n *\n * ```ts\n * @Injectable()\n * export class FeatureEffects {\n *   // mapping to a different action\n *   readonly effect1$ = createEffect(\n *     () => this.actions$.pipe(\n *       ofType(FeatureActions.actionOne),\n *       map(() => FeatureActions.actionTwo())\n *     )\n *   );\n *\n *   // non-dispatching effect\n *   readonly effect2$ = createEffect(\n *     () => this.actions$.pipe(\n *       ofType(FeatureActions.actionTwo),\n *       tap(() => console.log('Action Two Dispatched'))\n *     ),\n *     { dispatch: false } // FeatureActions.actionTwo is not dispatched\n *   );\n *\n *   constructor(private readonly actions$: Actions) {}\n * }\n * ```\n *\n * ### Functional Effects\n *\n * ```ts\n * // mapping to a different action\n * export const loadUsers = createEffect(\n *   (actions$ = inject(Actions), usersService = inject(UsersService)) => {\n *     return actions$.pipe(\n *       ofType(UsersPageActions.opened),\n *       exhaustMap(() => {\n *         return usersService.getAll().pipe(\n *           map((users) => UsersApiActions.usersLoadedSuccess({ users })),\n *           catchError((error) =>\n *             of(UsersApiActions.usersLoadedFailure({ error }))\n *           )\n *         );\n *       })\n *     );\n *   },\n *   { functional: true }\n * );\n *\n * // non-dispatching functional effect\n * export const logDispatchedActions = createEffect(\n *   () => inject(Actions).pipe(tap(console.log)),\n *   { functional: true, dispatch: false }\n * );\n * ```\n */\nfunction createEffect(source, config = {}) {\n  const effect = config.functional ? source : source();\n  const value = {\n    ...DEFAULT_EFFECT_CONFIG,\n    ...config // Overrides any defaults if values are provided\n  };\n  Object.defineProperty(effect, CREATE_EFFECT_METADATA_KEY, {\n    value\n  });\n  return effect;\n}\nfunction getCreateEffectMetadata(instance) {\n  const propertyNames = Object.getOwnPropertyNames(instance);\n  const metadata = propertyNames.filter(propertyName => {\n    if (instance[propertyName] && instance[propertyName].hasOwnProperty(CREATE_EFFECT_METADATA_KEY)) {\n      // If the property type has overridden `hasOwnProperty` we need to ensure\n      // that the metadata is valid (containing a `dispatch` property)\n      // https://github.com/ngrx/platform/issues/2975\n      const property = instance[propertyName];\n      return property[CREATE_EFFECT_METADATA_KEY].hasOwnProperty('dispatch');\n    }\n    return false;\n  }).map(propertyName => {\n    const metaData = instance[propertyName][CREATE_EFFECT_METADATA_KEY];\n    return {\n      propertyName,\n      ...metaData\n    };\n  });\n  return metadata;\n}\nfunction getEffectsMetadata(instance) {\n  return getSourceMetadata(instance).reduce((acc, {\n    propertyName,\n    dispatch,\n    useEffectsErrorHandler\n  }) => {\n    acc[propertyName] = {\n      dispatch,\n      useEffectsErrorHandler\n    };\n    return acc;\n  }, {});\n}\nfunction getSourceMetadata(instance) {\n  return getCreateEffectMetadata(instance);\n}\nfunction getSourceForInstance(instance) {\n  return Object.getPrototypeOf(instance);\n}\nfunction isClassInstance(obj) {\n  return !!obj.constructor && obj.constructor.name !== 'Object' && obj.constructor.name !== 'Function';\n}\nfunction isClass(classOrRecord) {\n  return typeof classOrRecord === 'function';\n}\nfunction getClasses(classesAndRecords) {\n  return classesAndRecords.filter(isClass);\n}\nfunction isToken(tokenOrRecord) {\n  return tokenOrRecord instanceof InjectionToken || isClass(tokenOrRecord);\n}\nfunction mergeEffects(sourceInstance, globalErrorHandler, effectsErrorHandler) {\n  const source = getSourceForInstance(sourceInstance);\n  const isClassBasedEffect = !!source && source.constructor.name !== 'Object';\n  const sourceName = isClassBasedEffect ? source.constructor.name : null;\n  const observables$ = getSourceMetadata(sourceInstance).map(({\n    propertyName,\n    dispatch,\n    useEffectsErrorHandler\n  }) => {\n    const observable$ = typeof sourceInstance[propertyName] === 'function' ? sourceInstance[propertyName]() : sourceInstance[propertyName];\n    const effectAction$ = useEffectsErrorHandler ? effectsErrorHandler(observable$, globalErrorHandler) : observable$;\n    if (dispatch === false) {\n      return effectAction$.pipe(ignoreElements());\n    }\n    const materialized$ = effectAction$.pipe(materialize());\n    return materialized$.pipe(map(notification => ({\n      effect: sourceInstance[propertyName],\n      notification,\n      propertyName,\n      sourceName,\n      sourceInstance\n    })));\n  });\n  return merge(...observables$);\n}\nconst MAX_NUMBER_OF_RETRY_ATTEMPTS = 10;\nfunction defaultEffectsErrorHandler(observable$, errorHandler, retryAttemptLeft = MAX_NUMBER_OF_RETRY_ATTEMPTS) {\n  return observable$.pipe(catchError(error => {\n    if (errorHandler) errorHandler.handleError(error);\n    if (retryAttemptLeft <= 1) {\n      return observable$; // last attempt\n    }\n    // Return observable that produces this particular effect\n    return defaultEffectsErrorHandler(observable$, errorHandler, retryAttemptLeft - 1);\n  }));\n}\nlet Actions = /*#__PURE__*/(() => {\n  class Actions extends Observable {\n    constructor(source) {\n      super();\n      if (source) {\n        this.source = source;\n      }\n    }\n    lift(operator) {\n      const observable = new Actions();\n      observable.source = this;\n      observable.operator = operator;\n      return observable;\n    }\n    /** @nocollapse */\n    static {\n      this.ɵfac = function Actions_Factory(t) {\n        return new (t || Actions)(i0.ɵɵinject(ScannedActionsSubject));\n      };\n    }\n    /** @nocollapse */\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: Actions,\n        factory: Actions.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return Actions;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * `ofType` filters an Observable of `Actions` into an Observable of the actions\n * whose type strings are passed to it.\n *\n * For example, if `actions` has type `Actions<AdditionAction|SubstractionAction>`, and\n * the type of the `Addition` action is `add`, then\n * `actions.pipe(ofType('add'))` returns an `Observable<AdditionAction>`.\n *\n * Properly typing this function is hard and requires some advanced TS tricks\n * below.\n *\n * Type narrowing automatically works, as long as your `actions` object\n * starts with a `Actions<SomeUnionOfActions>` instead of generic `Actions`.\n *\n * For backwards compatibility, when one passes a single type argument\n * `ofType<T>('something')` the result is an `Observable<T>`. Note, that `T`\n * completely overrides any possible inference from 'something'.\n *\n * Unfortunately, for unknown 'actions: Actions' these types will produce\n * 'Observable<never>'. In such cases one has to manually set the generic type\n * like `actions.ofType<AdditionAction>('add')`.\n *\n * @usageNotes\n *\n * Filter the Actions stream on the \"customers page loaded\" action\n *\n * ```ts\n * import { ofType } from '@ngrx/effects';\n * import * fromCustomers from '../customers';\n *\n * this.actions$.pipe(\n *  ofType(fromCustomers.pageLoaded)\n * )\n * ```\n */\nfunction ofType(...allowedTypes) {\n  return filter(action => allowedTypes.some(typeOrActionCreator => {\n    if (typeof typeOrActionCreator === 'string') {\n      // Comparing the string to type\n      return typeOrActionCreator === action.type;\n    }\n    // We are filtering by ActionCreator\n    return typeOrActionCreator.type === action.type;\n  }));\n}\nconst _ROOT_EFFECTS_GUARD = new InjectionToken('@ngrx/effects Internal Root Guard');\nconst USER_PROVIDED_EFFECTS = new InjectionToken('@ngrx/effects User Provided Effects');\nconst _ROOT_EFFECTS = new InjectionToken('@ngrx/effects Internal Root Effects');\nconst _ROOT_EFFECTS_INSTANCES = new InjectionToken('@ngrx/effects Internal Root Effects Instances');\nconst _FEATURE_EFFECTS = new InjectionToken('@ngrx/effects Internal Feature Effects');\nconst _FEATURE_EFFECTS_INSTANCE_GROUPS = new InjectionToken('@ngrx/effects Internal Feature Effects Instance Groups');\nconst EFFECTS_ERROR_HANDLER = new InjectionToken('@ngrx/effects Effects Error Handler', {\n  providedIn: 'root',\n  factory: () => defaultEffectsErrorHandler\n});\nconst ROOT_EFFECTS_INIT = '@ngrx/effects/init';\nconst rootEffectsInit = createAction(ROOT_EFFECTS_INIT);\nfunction reportInvalidActions(output, reporter) {\n  if (output.notification.kind === 'N') {\n    const action = output.notification.value;\n    const isInvalidAction = !isAction(action);\n    if (isInvalidAction) {\n      reporter.handleError(new Error(`Effect ${getEffectName(output)} dispatched an invalid action: ${stringify(action)}`));\n    }\n  }\n}\nfunction isAction(action) {\n  return typeof action !== 'function' && action && action.type && typeof action.type === 'string';\n}\nfunction getEffectName({\n  propertyName,\n  sourceInstance,\n  sourceName\n}) {\n  const isMethod = typeof sourceInstance[propertyName] === 'function';\n  const isClassBasedEffect = !!sourceName;\n  return isClassBasedEffect ? `\"${sourceName}.${String(propertyName)}${isMethod ? '()' : ''}\"` : `\"${String(propertyName)}()\"`;\n}\nfunction stringify(action) {\n  try {\n    return JSON.stringify(action);\n  } catch {\n    return action;\n  }\n}\nconst onIdentifyEffectsKey = 'ngrxOnIdentifyEffects';\nfunction isOnIdentifyEffects(instance) {\n  return isFunction(instance, onIdentifyEffectsKey);\n}\nconst onRunEffectsKey = 'ngrxOnRunEffects';\nfunction isOnRunEffects(instance) {\n  return isFunction(instance, onRunEffectsKey);\n}\nconst onInitEffects = 'ngrxOnInitEffects';\nfunction isOnInitEffects(instance) {\n  return isFunction(instance, onInitEffects);\n}\nfunction isFunction(instance, functionName) {\n  return instance && functionName in instance && typeof instance[functionName] === 'function';\n}\nlet EffectSources = /*#__PURE__*/(() => {\n  class EffectSources extends Subject {\n    constructor(errorHandler, effectsErrorHandler) {\n      super();\n      this.errorHandler = errorHandler;\n      this.effectsErrorHandler = effectsErrorHandler;\n    }\n    addEffects(effectSourceInstance) {\n      this.next(effectSourceInstance);\n    }\n    /**\n     * @internal\n     */\n    toActions() {\n      return this.pipe(groupBy(effectsInstance => isClassInstance(effectsInstance) ? getSourceForInstance(effectsInstance) : effectsInstance), mergeMap(source$ => {\n        return source$.pipe(groupBy(effectsInstance));\n      }), mergeMap(source$ => {\n        const effect$ = source$.pipe(exhaustMap(sourceInstance => {\n          return resolveEffectSource(this.errorHandler, this.effectsErrorHandler)(sourceInstance);\n        }), map(output => {\n          reportInvalidActions(output, this.errorHandler);\n          return output.notification;\n        }), filter(notification => notification.kind === 'N' && notification.value != null), dematerialize());\n        // start the stream with an INIT action\n        // do this only for the first Effect instance\n        const init$ = source$.pipe(take(1), filter(isOnInitEffects), map(instance => instance.ngrxOnInitEffects()));\n        return merge(effect$, init$);\n      }));\n    }\n    /** @nocollapse */\n    static {\n      this.ɵfac = function EffectSources_Factory(t) {\n        return new (t || EffectSources)(i0.ɵɵinject(i0.ErrorHandler), i0.ɵɵinject(EFFECTS_ERROR_HANDLER));\n      };\n    }\n    /** @nocollapse */\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: EffectSources,\n        factory: EffectSources.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return EffectSources;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction effectsInstance(sourceInstance) {\n  if (isOnIdentifyEffects(sourceInstance)) {\n    return sourceInstance.ngrxOnIdentifyEffects();\n  }\n  return '';\n}\nfunction resolveEffectSource(errorHandler, effectsErrorHandler) {\n  return sourceInstance => {\n    const mergedEffects$ = mergeEffects(sourceInstance, errorHandler, effectsErrorHandler);\n    if (isOnRunEffects(sourceInstance)) {\n      return sourceInstance.ngrxOnRunEffects(mergedEffects$);\n    }\n    return mergedEffects$;\n  };\n}\nlet EffectsRunner = /*#__PURE__*/(() => {\n  class EffectsRunner {\n    get isStarted() {\n      return !!this.effectsSubscription;\n    }\n    constructor(effectSources, store) {\n      this.effectSources = effectSources;\n      this.store = store;\n      this.effectsSubscription = null;\n    }\n    start() {\n      if (!this.effectsSubscription) {\n        this.effectsSubscription = this.effectSources.toActions().subscribe(this.store);\n      }\n    }\n    ngOnDestroy() {\n      if (this.effectsSubscription) {\n        this.effectsSubscription.unsubscribe();\n        this.effectsSubscription = null;\n      }\n    }\n    /** @nocollapse */\n    static {\n      this.ɵfac = function EffectsRunner_Factory(t) {\n        return new (t || EffectsRunner)(i0.ɵɵinject(EffectSources), i0.ɵɵinject(i3.Store));\n      };\n    }\n    /** @nocollapse */\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: EffectsRunner,\n        factory: EffectsRunner.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return EffectsRunner;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet EffectsRootModule = /*#__PURE__*/(() => {\n  class EffectsRootModule {\n    constructor(sources, runner, store, rootEffectsInstances, storeRootModule, storeFeatureModule, guard) {\n      this.sources = sources;\n      runner.start();\n      for (const effectsInstance of rootEffectsInstances) {\n        sources.addEffects(effectsInstance);\n      }\n      store.dispatch({\n        type: ROOT_EFFECTS_INIT\n      });\n    }\n    addEffects(effectsInstance) {\n      this.sources.addEffects(effectsInstance);\n    }\n    /** @nocollapse */\n    static {\n      this.ɵfac = function EffectsRootModule_Factory(t) {\n        return new (t || EffectsRootModule)(i0.ɵɵinject(EffectSources), i0.ɵɵinject(EffectsRunner), i0.ɵɵinject(i3.Store), i0.ɵɵinject(_ROOT_EFFECTS_INSTANCES), i0.ɵɵinject(i3.StoreRootModule, 8), i0.ɵɵinject(i3.StoreFeatureModule, 8), i0.ɵɵinject(_ROOT_EFFECTS_GUARD, 8));\n      };\n    }\n    /** @nocollapse */\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: EffectsRootModule\n      });\n    }\n    /** @nocollapse */\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return EffectsRootModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet EffectsFeatureModule = /*#__PURE__*/(() => {\n  class EffectsFeatureModule {\n    constructor(effectsRootModule, effectsInstanceGroups, storeRootModule, storeFeatureModule) {\n      const effectsInstances = effectsInstanceGroups.flat();\n      for (const effectsInstance of effectsInstances) {\n        effectsRootModule.addEffects(effectsInstance);\n      }\n    }\n    /** @nocollapse */\n    static {\n      this.ɵfac = function EffectsFeatureModule_Factory(t) {\n        return new (t || EffectsFeatureModule)(i0.ɵɵinject(EffectsRootModule), i0.ɵɵinject(_FEATURE_EFFECTS_INSTANCE_GROUPS), i0.ɵɵinject(i3.StoreRootModule, 8), i0.ɵɵinject(i3.StoreFeatureModule, 8));\n      };\n    }\n    /** @nocollapse */\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: EffectsFeatureModule\n      });\n    }\n    /** @nocollapse */\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return EffectsFeatureModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet EffectsModule = /*#__PURE__*/(() => {\n  class EffectsModule {\n    static forFeature(...featureEffects) {\n      const effects = featureEffects.flat();\n      const effectsClasses = getClasses(effects);\n      return {\n        ngModule: EffectsFeatureModule,\n        providers: [effectsClasses, {\n          provide: _FEATURE_EFFECTS,\n          multi: true,\n          useValue: effects\n        }, {\n          provide: USER_PROVIDED_EFFECTS,\n          multi: true,\n          useValue: []\n        }, {\n          provide: _FEATURE_EFFECTS_INSTANCE_GROUPS,\n          multi: true,\n          useFactory: createEffectsInstances,\n          deps: [_FEATURE_EFFECTS, USER_PROVIDED_EFFECTS]\n        }]\n      };\n    }\n    static forRoot(...rootEffects) {\n      const effects = rootEffects.flat();\n      const effectsClasses = getClasses(effects);\n      return {\n        ngModule: EffectsRootModule,\n        providers: [effectsClasses, {\n          provide: _ROOT_EFFECTS,\n          useValue: [effects]\n        }, {\n          provide: _ROOT_EFFECTS_GUARD,\n          useFactory: _provideForRootGuard\n        }, {\n          provide: USER_PROVIDED_EFFECTS,\n          multi: true,\n          useValue: []\n        }, {\n          provide: _ROOT_EFFECTS_INSTANCES,\n          useFactory: createEffectsInstances,\n          deps: [_ROOT_EFFECTS, USER_PROVIDED_EFFECTS]\n        }]\n      };\n    }\n    /** @nocollapse */\n    static {\n      this.ɵfac = function EffectsModule_Factory(t) {\n        return new (t || EffectsModule)();\n      };\n    }\n    /** @nocollapse */\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: EffectsModule\n      });\n    }\n    /** @nocollapse */\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return EffectsModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction createEffectsInstances(effectsGroups, userProvidedEffectsGroups) {\n  const effects = [];\n  for (const effectsGroup of effectsGroups) {\n    effects.push(...effectsGroup);\n  }\n  for (const userProvidedEffectsGroup of userProvidedEffectsGroups) {\n    effects.push(...userProvidedEffectsGroup);\n  }\n  return effects.map(effectsTokenOrRecord => isToken(effectsTokenOrRecord) ? inject(effectsTokenOrRecord) : effectsTokenOrRecord);\n}\nfunction _provideForRootGuard() {\n  const runner = inject(EffectsRunner, {\n    optional: true,\n    skipSelf: true\n  });\n  const rootEffects = inject(_ROOT_EFFECTS, {\n    self: true\n  });\n  // check whether any effects are actually passed\n  const hasEffects = !(rootEffects.length === 1 && rootEffects[0].length === 0);\n  if (hasEffects && runner) {\n    throw new TypeError(`EffectsModule.forRoot() called twice. Feature modules should use EffectsModule.forFeature() instead.`);\n  }\n  return 'guarded';\n}\n\n/**\n * Wraps project fn with error handling making it safe to use in Effects.\n * Takes either a config with named properties that represent different possible\n * callbacks or project/error callbacks that are required.\n */\nfunction act( /** Allow to take either config object or project/error functions */\nconfigOrProject, errorFn) {\n  const {\n    project,\n    error,\n    complete,\n    operator,\n    unsubscribe\n  } = typeof configOrProject === 'function' ? {\n    project: configOrProject,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    error: errorFn,\n    operator: concatMap,\n    complete: undefined,\n    unsubscribe: undefined\n  } : {\n    ...configOrProject,\n    operator: configOrProject.operator || concatMap\n  };\n  return source => defer(() => {\n    const subject = new Subject();\n    return merge(source.pipe(operator((input, index) => defer(() => {\n      let completed = false;\n      let errored = false;\n      let projectedCount = 0;\n      return project(input, index).pipe(materialize(), map(notification => {\n        switch (notification.kind) {\n          case 'E':\n            errored = true;\n            return {\n              kind: 'N',\n              value: error(notification.error, input)\n            };\n          case 'C':\n            completed = true;\n            return complete ? {\n              kind: 'N',\n              value: complete(projectedCount, input)\n            } : undefined;\n          default:\n            ++projectedCount;\n            return notification;\n        }\n      }), filter(n => n != null), dematerialize(), finalize(() => {\n        if (!completed && !errored && unsubscribe) {\n          subject.next(unsubscribe(projectedCount, input));\n        }\n      }));\n    }))), subject);\n  });\n}\n\n/**\n * @usageNotes\n *\n * ### Providing effects at the root level\n *\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [provideEffects(RouterEffects)],\n * });\n * ```\n *\n * ### Providing effects at the feature level\n *\n * ```ts\n * const booksRoutes: Route[] = [\n *   {\n *     path: '',\n *     providers: [provideEffects(BooksApiEffects)],\n *     children: [\n *       { path: '', component: BookListComponent },\n *       { path: ':id', component: BookDetailsComponent },\n *     ],\n *   },\n * ];\n * ```\n */\nfunction provideEffects(...effects) {\n  const effectsClassesAndRecords = effects.flat();\n  const effectsClasses = getClasses(effectsClassesAndRecords);\n  return makeEnvironmentProviders([effectsClasses, {\n    provide: ENVIRONMENT_INITIALIZER,\n    multi: true,\n    useValue: () => {\n      inject(ROOT_STORE_PROVIDER);\n      inject(FEATURE_STATE_PROVIDER, {\n        optional: true\n      });\n      const effectsRunner = inject(EffectsRunner);\n      const effectSources = inject(EffectSources);\n      const shouldInitEffects = !effectsRunner.isStarted;\n      if (shouldInitEffects) {\n        effectsRunner.start();\n      }\n      for (const effectsClassOrRecord of effectsClassesAndRecords) {\n        const effectsInstance = isClass(effectsClassOrRecord) ? inject(effectsClassOrRecord) : effectsClassOrRecord;\n        effectSources.addEffects(effectsInstance);\n      }\n      if (shouldInitEffects) {\n        const store = inject(Store);\n        store.dispatch(rootEffectsInit());\n      }\n    }\n  }]);\n}\n\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Actions, EFFECTS_ERROR_HANDLER, EffectSources, EffectsFeatureModule, EffectsModule, EffectsRootModule, EffectsRunner, ROOT_EFFECTS_INIT, USER_PROVIDED_EFFECTS, act, createEffect, defaultEffectsErrorHandler, getEffectsMetadata, mergeEffects, ofType, provideEffects, rootEffectsInit };\n","import { SplitwiseGroup, GroupInvitation, SplitTransaction, SplitSettlement } from '../../../util/models/splitwise.model';\n\nexport interface SplitwiseState {\n  groups: SplitwiseGroup[];\n  invitations: GroupInvitation[];\n  transactions: SplitTransaction[];\n  settlements: SplitSettlement[];\n  selectedGroup: SplitwiseGroup | null;\n  loading: boolean;\n  error: string | null;\n}\n\nexport const initialState: SplitwiseState = {\n  groups: [],\n  invitations: [],\n  transactions: [],\n  settlements: [],\n  selectedGroup: null,\n  loading: false,\n  error: null\n}; ","import { createReducer, on } from '@ngrx/store';\nimport { SplitwiseState, initialState } from './splitwise.state';\nimport * as SplitwiseActions from './splitwise.actions';\n\nexport const splitwiseReducer = createReducer(\n  initialState,\n  \n  // Load Groups\n  on(SplitwiseActions.loadGroups, (state) => ({\n    ...state,\n    loading: true,\n    error: null\n  })),\n  on(SplitwiseActions.loadGroupsSuccess, (state, { groups }) => ({\n    ...state,\n    groups,\n    loading: false,\n    error: null\n  })),\n  on(SplitwiseActions.loadGroupsFailure, (state, { error }) => ({\n    ...state,\n    loading: false,\n    error\n  })),\n\n  // Load Group by ID\n  on(SplitwiseActions.loadGroupById, (state) => ({\n    ...state,\n    loading: true,\n    error: null\n  })),\n  on(SplitwiseActions.loadGroupByIdSuccess, (state, { group }) => ({\n    ...state,\n    groups: state.groups.find(g => g.id === group.id) \n      ? state.groups.map(g => g.id === group.id ? group : g)\n      : [...state.groups, group],\n    selectedGroup: group,\n    loading: false,\n    error: null\n  })),\n  on(SplitwiseActions.loadGroupByIdFailure, (state, { error }) => ({\n    ...state,\n    loading: false,\n    error\n  })),\n\n  // Load Invitations\n  on(SplitwiseActions.loadInvitations, (state) => ({\n    ...state,\n    loading: true,\n    error: null\n  })),\n  on(SplitwiseActions.loadInvitationsSuccess, (state, { invitations }) => ({\n    ...state,\n    invitations,\n    loading: false,\n    error: null\n  })),\n  on(SplitwiseActions.loadInvitationsFailure, (state, { error }) => ({\n    ...state,\n    loading: false,\n    error\n  })),\n\n  // Create Group\n  on(SplitwiseActions.createGroup, (state) => ({\n    ...state,\n    loading: true,\n    error: null\n  })),\n  on(SplitwiseActions.createGroupSuccess, (state, { group }) => ({\n    ...state,\n    groups: [...state.groups, group],\n    loading: false,\n    error: null\n  })),\n  on(SplitwiseActions.createGroupFailure, (state, { error }) => ({\n    ...state,\n    loading: false,\n    error\n  })),\n\n  // Add Member\n  on(SplitwiseActions.addMember, (state) => ({\n    ...state,\n    loading: true,\n    error: null\n  })),\n  on(SplitwiseActions.addMemberSuccess, (state, { group }) => ({\n    ...state,\n    groups: state.groups.map(g => g.id === group.id ? group : g),\n    loading: false,\n    error: null\n  })),\n  on(SplitwiseActions.addMemberFailure, (state, { error }) => ({\n    ...state,\n    loading: false,\n    error\n  })),\n\n  // Accept Invitation\n  on(SplitwiseActions.acceptInvitation, (state) => ({\n    ...state,\n    loading: true,\n    error: null\n  })),\n  on(SplitwiseActions.acceptInvitationSuccess, (state, { invitationId }) => ({\n    ...state,\n    invitations: state.invitations.filter(inv => inv.id !== invitationId),\n    loading: false,\n    error: null\n  })),\n  on(SplitwiseActions.acceptInvitationFailure, (state, { error }) => ({\n    ...state,\n    loading: false,\n    error\n  })),\n\n  // Decline Invitation\n  on(SplitwiseActions.declineInvitation, (state) => ({\n    ...state,\n    loading: true,\n    error: null\n  })),\n  on(SplitwiseActions.declineInvitationSuccess, (state, { invitationId }) => ({\n    ...state,\n    invitations: state.invitations.filter(inv => inv.id !== invitationId),\n    loading: false,\n    error: null\n  })),\n  on(SplitwiseActions.declineInvitationFailure, (state, { error }) => ({\n    ...state,\n    loading: false,\n    error\n  })),\n\n  // Delete Group\n  on(SplitwiseActions.deleteGroup, (state) => ({\n    ...state,\n    loading: true,\n    error: null\n  })),\n  on(SplitwiseActions.deleteGroupSuccess, (state, { groupId }) => ({\n    ...state,\n    groups: state.groups.filter(g => g.id !== groupId),\n    selectedGroup: state.selectedGroup?.id === groupId ? null : state.selectedGroup,\n    loading: false,\n    error: null\n  })),\n  on(SplitwiseActions.deleteGroupFailure, (state, { error }) => ({\n    ...state,\n    loading: false,\n    error\n  })),\n\n  // Select Group\n  on(SplitwiseActions.selectGroup, (state, { group }) => ({\n    ...state,\n    selectedGroup: group\n  })),\n\n  // Load Transactions\n  on(SplitwiseActions.loadTransactions, (state) => ({\n    ...state,\n    loading: true,\n    error: null\n  })),\n  on(SplitwiseActions.loadTransactionsSuccess, (state, { transactions }) => ({\n    ...state,\n    transactions,\n    loading: false,\n    error: null\n  })),\n  on(SplitwiseActions.loadTransactionsFailure, (state, { error }) => ({\n    ...state,\n    loading: false,\n    error\n  })),\n\n  // Load Settlements\n  on(SplitwiseActions.loadSettlements, (state) => ({\n    ...state,\n    loading: true,\n    error: null\n  })),\n  on(SplitwiseActions.loadSettlementsSuccess, (state, { settlements }) => ({\n    ...state,\n    settlements,\n    loading: false,\n    error: null\n  })),\n  on(SplitwiseActions.loadSettlementsFailure, (state, { error }) => ({\n    ...state,\n    loading: false,\n    error\n  })),\n\n  // Create Split Transaction\n  on(SplitwiseActions.createSplitTransaction, (state) => ({\n    ...state,\n    loading: true,\n    error: null\n  })),\n  on(SplitwiseActions.createSplitTransactionSuccess, (state, { transaction }) => ({\n    ...state,\n    transactions: [...state.transactions, transaction],\n    loading: false,\n    error: null\n  })),\n  on(SplitwiseActions.createSplitTransactionFailure, (state, { error }) => ({\n    ...state,\n    loading: false,\n    error\n  })),\n\n  // Update Split Transaction\n  on(SplitwiseActions.updateSplitTransaction, (state) => ({\n    ...state,\n    loading: true,\n    error: null\n  })),\n  on(SplitwiseActions.updateSplitTransactionSuccess, (state, { transaction }) => ({\n    ...state,\n    transactions: state.transactions.map(t => t.id === transaction.id ? transaction : t),\n    loading: false,\n    error: null\n  })),\n  on(SplitwiseActions.updateSplitTransactionFailure, (state, { error }) => ({\n    ...state,\n    loading: false,\n    error\n  })),\n\n  // Create Settlement\n  on(SplitwiseActions.createSettlement, (state) => ({\n    ...state,\n    loading: true,\n    error: null\n  })),\n  on(SplitwiseActions.createSettlementSuccess, (state, { settlement }) => ({\n    ...state,\n    settlements: [...state.settlements, settlement],\n    loading: false,\n    error: null\n  })),\n  on(SplitwiseActions.createSettlementFailure, (state, { error }) => ({\n    ...state,\n    loading: false,\n    error\n  })),\n\n  // Remove Member\n  on(SplitwiseActions.removeMember, (state) => ({\n    ...state,\n    loading: true,\n    error: null\n  })),\n  on(SplitwiseActions.removeMemberSuccess, (state, { groupId }) => ({\n    ...state,\n    loading: false,\n    error: null\n  })),\n  on(SplitwiseActions.removeMemberFailure, (state, { error }) => ({\n    ...state,\n    loading: false,\n    error\n  })),\n\n  // Clear Error\n  on(SplitwiseActions.clearError, (state) => ({\n    ...state,\n    error: null\n  }))\n); ","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { of, from } from 'rxjs';\nimport { map, mergeMap, catchError, switchMap, withLatestFrom } from 'rxjs/operators';\nimport { Auth } from '@angular/fire/auth';\n\nimport * as SplitwiseActions from './splitwise.actions';\nimport { SplitwiseService } from '../services/splitwise.service';\nimport { UserService } from '../../../util/service/user.service';\nimport { AppState } from '../../../store/app.state';\n\n@Injectable()\nexport class SplitwiseEffects {\n\n  loadGroups$ = createEffect(() => this.actions$.pipe(\n    ofType(SplitwiseActions.loadGroups),\n    mergeMap(() => from(this.userService.getCurrentUser()).pipe(\n      mergeMap(user => {\n        if (!user?.uid) {\n          return of(SplitwiseActions.loadGroupsFailure({ error: 'User not authenticated' }));\n        }\n        return this.splitwiseService.getUserGroups(user.uid).pipe(\n          map(groups => SplitwiseActions.loadGroupsSuccess({ groups: groups || [] })),\n          catchError(error => of(SplitwiseActions.loadGroupsFailure({ error: error.message })))\n        );\n      })\n    ))\n  ));\n\n  loadGroupById$ = createEffect(() => this.actions$.pipe(\n    ofType(SplitwiseActions.loadGroupById),\n    mergeMap((action) => from(this.splitwiseService.getGroupById(action.groupId)).pipe(\n      map(group => {\n        if (group) {\n          return SplitwiseActions.loadGroupByIdSuccess({ group });\n        } else {\n          return SplitwiseActions.loadGroupByIdFailure({ error: 'Group not found' });\n        }\n      }),\n      catchError(error => of(SplitwiseActions.loadGroupByIdFailure({ error: error.message })))\n    ))\n  ));\n\n  loadInvitations$ = createEffect(() => this.actions$.pipe(\n    ofType(SplitwiseActions.loadInvitations),\n    mergeMap(() => from(this.userService.getCurrentUser()).pipe(\n      mergeMap(user => {\n        if (!user?.uid) {\n          return of(SplitwiseActions.loadInvitationsFailure({ error: 'User not authenticated' }));\n        }\n        return this.splitwiseService.getUserInvitations(user.uid).pipe(\n          map(invitations => SplitwiseActions.loadInvitationsSuccess({ invitations: invitations || [] })),\n          catchError(error => of(SplitwiseActions.loadInvitationsFailure({ error: error.message })))\n        );\n      })\n    ))\n  ));\n\n  createGroup$ = createEffect(() => this.actions$.pipe(\n    ofType(SplitwiseActions.createGroup),\n    mergeMap((action) => from(this.userService.getCurrentUser()).pipe(\n      mergeMap(user => {\n        if (!user?.uid) {\n          return of(SplitwiseActions.createGroupFailure({ error: 'User not authenticated' }));\n        }\n        return this.splitwiseService.createGroup(action.request, user.uid).pipe(\n          map(group => SplitwiseActions.createGroupSuccess({ group })),\n          catchError(error => of(SplitwiseActions.createGroupFailure({ error: error.message })))\n        );\n      })\n    ))\n  ));\n\n  addMember$ = createEffect(() => this.actions$.pipe(\n    ofType(SplitwiseActions.addMember),\n    mergeMap((action) => from(this.userService.getCurrentUser()).pipe(\n      mergeMap(user => {\n        if (!user?.uid) {\n          return of(SplitwiseActions.addMemberFailure({ error: 'User not authenticated' }));\n        }\n        return from(this.splitwiseService.addMemberToGroup(action.groupId, action.request, user.uid)).pipe(\n          map(group => SplitwiseActions.addMemberSuccess({ group })),\n          catchError(error => of(SplitwiseActions.addMemberFailure({ error: error.message })))\n        );\n      })\n    ))\n  ));\n\n  acceptInvitation$ = createEffect(() => this.actions$.pipe(\n    ofType(SplitwiseActions.acceptInvitation),\n    mergeMap((action) => from(this.userService.getCurrentUser()).pipe(\n      mergeMap(user => {\n        if (!user?.uid) {\n          return of(SplitwiseActions.acceptInvitationFailure({ error: 'User not authenticated' }));\n        }\n        return from(this.splitwiseService.acceptInvitation(action.invitationId, user.uid)).pipe(\n          map(() => SplitwiseActions.acceptInvitationSuccess({ invitationId: action.invitationId })),\n          catchError(error => of(SplitwiseActions.acceptInvitationFailure({ error: error.message })))\n        );\n      })\n    ))\n  ));\n\n  declineInvitation$ = createEffect(() => this.actions$.pipe(\n    ofType(SplitwiseActions.declineInvitation),\n    mergeMap((action) => from(this.userService.getCurrentUser()).pipe(\n      mergeMap(user => {\n        if (!user?.uid) {\n          return of(SplitwiseActions.declineInvitationFailure({ error: 'User not authenticated' }));\n        }\n        return from(this.splitwiseService.declineInvitation(action.invitationId, user.uid)).pipe(\n          map(() => SplitwiseActions.declineInvitationSuccess({ invitationId: action.invitationId })),\n          catchError(error => of(SplitwiseActions.declineInvitationFailure({ error: error.message })))\n        );\n      })\n    ))\n  ));\n\n  deleteGroup$ = createEffect(() => this.actions$.pipe(\n    ofType(SplitwiseActions.deleteGroup),\n    mergeMap((action) => from(this.userService.getCurrentUser()).pipe(\n      mergeMap(user => {\n        if (!user?.uid) {\n          return of(SplitwiseActions.deleteGroupFailure({ error: 'User not authenticated' }));\n        }\n        return this.splitwiseService.deleteGroup(action.groupId, user.uid).pipe(\n          map(() => SplitwiseActions.deleteGroupSuccess({ groupId: action.groupId })),\n          catchError(error => of(SplitwiseActions.deleteGroupFailure({ error: error.message })))\n        );\n      })\n    ))\n  ));\n\n  loadTransactions$ = createEffect(() => this.actions$.pipe(\n    ofType(SplitwiseActions.loadTransactions),\n    mergeMap((action) => from(this.userService.getCurrentUser()).pipe(\n      mergeMap(user => {\n        if (!user?.uid) {\n          return of(SplitwiseActions.loadTransactionsFailure({ error: 'User not authenticated' }));\n        }\n        return this.splitwiseService.getGroupTransactions(action.groupId, user.uid).pipe(\n          map(transactions => SplitwiseActions.loadTransactionsSuccess({ transactions: transactions || [] })),\n          catchError(error => of(SplitwiseActions.loadTransactionsFailure({ error: error.message })))\n        );\n      })\n    ))\n  ));\n\n  loadSettlements$ = createEffect(() => this.actions$.pipe(\n    ofType(SplitwiseActions.loadSettlements),\n    mergeMap((action) => from(this.userService.getCurrentUser()).pipe(\n      mergeMap(user => {\n        if (!user?.uid) {\n          return of(SplitwiseActions.loadSettlementsFailure({ error: 'User not authenticated' }));\n        }\n        return this.splitwiseService.getGroupSettlements(action.groupId, user.uid).pipe(\n          map(settlements => SplitwiseActions.loadSettlementsSuccess({ settlements: settlements || [] })),\n          catchError(error => of(SplitwiseActions.loadSettlementsFailure({ error: error.message })))\n        );\n      })\n    ))\n  ));\n\n  createSplitTransaction$ = createEffect(() => this.actions$.pipe(\n    ofType(SplitwiseActions.createSplitTransaction),\n    mergeMap((action) => from(this.userService.getCurrentUser()).pipe(\n      mergeMap(user => {\n        if (!user?.uid) {\n          return of(SplitwiseActions.createSplitTransactionFailure({ error: 'User not authenticated' }));\n        }\n        return this.splitwiseService.createSplitTransaction(action.request, user.uid).pipe(\n          map(transaction => SplitwiseActions.createSplitTransactionSuccess({ transaction })),\n          catchError(error => of(SplitwiseActions.createSplitTransactionFailure({ error: error.message })))\n        );\n      })\n    ))\n  ));\n\n  updateSplitTransaction$ = createEffect(() => this.actions$.pipe(\n    ofType(SplitwiseActions.updateSplitTransaction),\n    mergeMap((action) => from(this.userService.getCurrentUser()).pipe(\n      mergeMap(user => {\n        if (!user?.uid) {\n          return of(SplitwiseActions.updateSplitTransactionFailure({ error: 'User not authenticated' }));\n        }\n        return from(this.splitwiseService.updateSplitTransaction(action.transactionId, action.updates)).pipe(\n          map(() => {\n            // Return a mock transaction since the service doesn't return the updated transaction\n            return SplitwiseActions.updateSplitTransactionSuccess({ \n              transaction: { id: action.transactionId } as any \n            });\n          }),\n          catchError(error => of(SplitwiseActions.updateSplitTransactionFailure({ error: error.message })))\n        );\n      })\n    ))\n  ));\n\n  createSettlement$ = createEffect(() => this.actions$.pipe(\n    ofType(SplitwiseActions.createSettlement),\n    mergeMap((action) => from(this.userService.getCurrentUser()).pipe(\n      mergeMap(user => {\n        if (!user?.uid) {\n          return of(SplitwiseActions.createSettlementFailure({ error: 'User not authenticated' }));\n        }\n        const request = {\n          groupId: action.groupId,\n          fromUserId: action.fromUserId,\n          toUserId: action.toUserId,\n          amount: action.amount,\n          notes: action.notes,\n          originalTransactionId: action.originalTransactionId\n        };\n        return from(this.splitwiseService.createSettlement(request)).pipe(\n          map(settlementId => {\n            // Return a mock settlement since the service only returns the ID\n            return SplitwiseActions.createSettlementSuccess({ \n              settlement: { id: settlementId } as any \n            });\n          }),\n          catchError(error => of(SplitwiseActions.createSettlementFailure({ error: error.message })))\n        );\n      })\n    ))\n  ));\n\n  removeMember$ = createEffect(() => this.actions$.pipe(\n    ofType(SplitwiseActions.removeMember),\n    mergeMap((action) => from(this.userService.getCurrentUser()).pipe(\n      mergeMap(user => {\n        if (!user?.uid) {\n          return of(SplitwiseActions.removeMemberFailure({ error: 'User not authenticated' }));\n        }\n        return from(this.splitwiseService.removeMemberFromGroup(action.groupId, action.userId, user.uid)).pipe(\n          map(() => SplitwiseActions.removeMemberSuccess({ groupId: action.groupId })),\n          catchError(error => of(SplitwiseActions.removeMemberFailure({ error: error.message })))\n        );\n      })\n    ))\n  ));\n\n  constructor(\n    private actions$: Actions,\n    private splitwiseService: SplitwiseService,\n    private userService: UserService,\n    private store: Store<AppState>,\n    private auth: Auth\n  ) {}\n} ","import { Component, Input } from '@angular/core';\nimport { LoaderService } from '../../service/loader.service';\nimport { AsyncPipe } from '@angular/common';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrl: './loader.component.scss',\n  standalone: true,\n  imports: [AsyncPipe]\n})\nexport class LoaderComponent {\n  @Input() message: string = 'Loading...';\n  \n  loading$ = this.loaderService.loading$;\n\n  constructor(private loaderService: LoaderService) { }\n}\n","@if (loading$ | async) {\n<div class=\"loader-overlay\">\n  <div class=\"loader\">\n    <div class=\"spinner\"></div>\n    <p class=\"loader-message\">{{ message }}</p>\n  </div>\n</div>\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { APP_CONFIG } from '../config/config';\n\nexport type Language = 'en' | 'hi';\n\ninterface Translations {\n  [key: string]: {\n    en: string;\n    hi: string;\n  };\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TranslationService {\n  private currentLanguage = new BehaviorSubject<Language>('en');\n  \n  private translations: Translations = {\n    // Common\n    'loading': { en: 'Loading...', hi: 'लोड हो रहा है...' },\n    'error': { en: 'Error', hi: 'त्रुटि' },\n    'success': { en: 'Success', hi: 'सफलता' },\n    'cancel': { en: 'Cancel', hi: 'रद्द करें' },\n    'save': { en: 'Save', hi: 'सहेजें' },\n    'delete': { en: 'Delete', hi: 'हटाएं' },\n    'edit': { en: 'Edit', hi: 'संपादित करें' },\n    'add': { en: 'Add', hi: 'जोड़ें' },\n    'close': { en: 'Close', hi: 'बंद करें' },\n    'logout': { en: 'Logout', hi: 'लॉगआउट' },\n    'login': { en: 'Login', hi: 'लॉगिन' },\n    'signup': { en: 'Sign Up', hi: 'साइन अप' },\n    'email': { en: 'Email', hi: 'ईमेल' },\n    'password': { en: 'Password', hi: 'पासवर्ड' },\n    'name': { en: 'Name', hi: 'नाम' },\n    'amount': { en: 'Amount', hi: 'राशि' },\n    'date': { en: 'Date', hi: 'तारीख' },\n    'category': { en: 'Category', hi: 'श्रेणी' },\n    'type': { en: 'Type', hi: 'प्रकार' },\n    'income': { en: 'Income', hi: 'आय' },\n    'expense': { en: 'Expense', hi: 'खर्च' },\n    'total': { en: 'Total', hi: 'कुल' },\n    'balance': { en: 'Balance', hi: 'शेष राशि' },\n    'actions': { en: 'Actions', hi: 'कार्रवाई' },\n    'search': { en: 'Search', hi: 'खोजें' },\n    'filter': { en: 'Filter', hi: 'फ़िल्टर' },\n    'clear': { en: 'Clear', hi: 'साफ़ करें' },\n    'settings': { en: 'Settings', hi: 'सेटिंग्स' },\n    \n    // Navigation\n    'dashboard': { en: 'Dashboard', hi: 'डैशबोर्ड' },\n    'home': { en: 'Home', hi: 'होम' },\n    'accounts': { en: 'Accounts', hi: 'खाते' },\n    'transactions': { en: 'Transactions', hi: 'लेन-देन' },\n    'categories': { en: 'Categories', hi: 'श्रेणियां' },\n    'budgets': { en: 'Budgets', hi: 'बजट' },\n    'goals': { en: 'Goals', hi: 'लक्ष्य' },\n    'reports': { en: 'Reports', hi: 'रिपोर्ट्स' },\n    'calendar': { en: 'Calendar', hi: 'कैलेंडर' },\n    'notes': { en: 'Notes', hi: 'नोट्स' },\n    'tax': { en: 'Tax', hi: 'कर' },\n    'tools': { en: 'Tools', hi: 'उपकरण' },\n    \n    // Dashboard\n    'moneyManager': { en: `${APP_CONFIG.APP_NAME}`, hi: 'मनी मैनेजर' },\n    'manageFinances': { en: 'Manage your finances', hi: 'अपने वित्त का प्रबंधन करें' },\n    'welcomeBack': { en: 'Welcome Back!', hi: 'वापसी पर स्वागत है!' },\n    'youSpend': { en: 'You Spend', hi: 'आपका खर्च' },\n    'youEarn': { en: 'You Earn', hi: 'आपकी कमाई' },\n    'netBalance': { en: 'Net Balance', hi: 'शुद्ध शेष' },\n    'thisMonth': { en: 'This Month', hi: 'इस महीने' },\n    'lastMonth': { en: 'Last Month', hi: 'पिछले महीने' },\n    'quickActions': { en: 'Quick Actions', hi: 'त्वरित कार्रवाई' },\n    'recentTransactions': { en: 'Recent Transactions', hi: 'हाल के लेन-देन' },\n    'upcomingBills': { en: 'Upcoming Bills', hi: 'आगामी बिल' },\n    'savingsGoal': { en: 'Savings Goal', hi: 'बचत लक्ष्य' },\n    \n    // Auth\n    'signIn': { en: 'Sign In', hi: 'साइन इन' },\n    'signUp': { en: 'Sign Up', hi: 'साइन अप' },\n    'signOut': { en: 'Sign Out', hi: 'साइन आउट' },\n    'forgotPassword': { en: 'Forgot Password?', hi: 'पासवर्ड भूल गए?' },\n    'resetPassword': { en: 'Reset Password', hi: 'पासवर्ड रीसेट करें' },\n    'emailPlaceholder': { en: 'Enter your email', hi: 'अपना ईमेल दर्ज करें' },\n    'passwordPlaceholder': { en: 'Enter your password', hi: 'अपना पासवर्ड दर्ज करें' },\n    'confirmPassword': { en: 'Confirm Password', hi: 'पासवर्ड की पुष्टि करें' },\n    'namePlaceholder': { en: 'Enter your name', hi: 'अपना नाम दर्ज करें' },\n    'loginSuccess': { en: 'Successfully signed in', hi: 'सफलतापूर्वक साइन इन किया गया' },\n    'loginError': { en: 'Failed to sign in', hi: 'साइन इन करने में विफल' },\n    'signupSuccess': { en: 'Successfully signed up', hi: 'सफलतापूर्वक साइन अप किया गया' },\n    'signupError': { en: 'Failed to sign up', hi: 'साइन अप करने में विफल' },\n    'sessionExpired': { en: 'Session expired. Please sign in again.', hi: 'सत्र समाप्त हो गया। कृपया फिर से साइन इन करें।' },\n    'invalidCredentials': { en: 'Invalid email or password', hi: 'अमान्य ईमेल या पासवर्ड' },\n    'passwordMismatch': { en: 'Passwords do not match', hi: 'पासवर्ड मेल नहीं खाते' },\n    'emailRequired': { en: 'Email is required', hi: 'ईमेल आवश्यक है' },\n    'passwordRequired': { en: 'Password is required', hi: 'पासवर्ड आवश्यक है' },\n    'nameRequired': { en: 'Name is required', hi: 'नाम आवश्यक है' },\n    \n    // Transactions\n    'addTransaction': { en: 'Add Transaction', hi: 'लेन-देन जोड़ें' },\n    'editTransaction': { en: 'Edit Transaction', hi: 'लेन-देन संपादित करें' },\n    'deleteTransaction': { en: 'Delete Transaction', hi: 'लेन-देन हटाएं' },\n    'transactionHistory': { en: 'Transaction History', hi: 'लेन-देन इतिहास' },\n    'manageTransactions': { en: 'Manage and track your financial transactions', hi: 'अपने वित्तीय लेन-देन का प्रबंधन और ट्रैकिंग करें' },\n    'payee': { en: 'Payee', hi: 'प्राप्तकर्ता' },\n    'payeePlaceholder': { en: 'Enter payee name', hi: 'प्राप्तकर्ता का नाम दर्ज करें' },\n    'amountPlaceholder': { en: 'Enter amount', hi: 'राशि दर्ज करें' },\n    'categoryPlaceholder': { en: 'Select category', hi: 'श्रेणी चुनें' },\n    'datePlaceholder': { en: 'Select date', hi: 'तारीख चुनें' },\n    'notesPlaceholder': { en: 'Add notes (optional)', hi: 'नोट्स जोड़ें (वैकल्पिक)' },\n    'noTransactions': { en: 'No transactions yet', hi: 'अभी तक कोई लेन-देन नहीं' },\n    'noTransactionsMessage': { en: 'Start by adding your first transaction to track your finances.', hi: 'अपने वित्त का ट्रैक रखने के लिए अपना पहला लेन-देन जोड़कर शुरू करें।' },\n    'transactionAdded': { en: 'Transaction added successfully', hi: 'लेन-देन सफलतापूर्वक जोड़ा गया' },\n    'transactionUpdated': { en: 'Transaction updated successfully', hi: 'लेन-देन सफलतापूर्वक अपडेट किया गया' },\n    'transactionDeleted': { en: 'Transaction deleted successfully', hi: 'लेन-देन सफलतापूर्वक हटाया गया' },\n    'confirmDelete': { en: 'Delete Transaction', hi: 'लेन-देन हटाएं' },\n    'confirmDeleteMessage': { en: 'Are you sure you want to delete this transaction?', hi: 'क्या आप वाकई इस लेन-देन को हटाना चाहते हैं?' },\n    \n    // Messages\n    'networkError': { en: 'Network error. Please check your connection.', hi: 'नेटवर्क त्रुटि। कृपया अपना कनेक्शन जांचें।' },\n    'serverError': { en: 'Server error. Please try again later.', hi: 'सर्वर त्रुटि। कृपया बाद में पुनः प्रयास करें।' },\n    'validationError': { en: 'Please check your input and try again.', hi: 'कृपया अपना इनपुट जांचें और पुनः प्रयास करें।' },\n    'dataSaved': { en: 'Data saved successfully', hi: 'डेटा सफलतापूर्वक सहेजा गया' },\n    'dataDeleted': { en: 'Data deleted successfully', hi: 'डेटा सफलतापूर्वक हटाया गया' },\n    'changesDiscarded': { en: 'Changes discarded', hi: 'परिवर्तन त्याग दिए गए' },\n    'unsavedChanges': { en: 'You have unsaved changes', hi: 'आपके पास असहेजे परिवर्तन हैं' },\n    'confirmDiscard': { en: 'Discard Changes', hi: 'परिवर्तन त्यागें' },\n    'confirmDiscardMessage': { en: 'Are you sure you want to discard your changes?', hi: 'क्या आप वाकई अपने परिवर्तन त्यागना चाहते हैं?' }\n  };\n\n  constructor() {\n    // Load saved language preference\n    const savedLanguage = localStorage.getItem('app_language') as Language;\n    if (savedLanguage && (savedLanguage === 'en' || savedLanguage === 'hi')) {\n      this.currentLanguage.next(savedLanguage);\n    } else {\n      // Detect browser language\n      const browserLang = navigator.language.split('-')[0];\n      if (browserLang === 'hi') {\n        this.currentLanguage.next('hi');\n      }\n    }\n  }\n\n  // Get current language as observable\n  getCurrentLanguage(): Observable<Language> {\n    return this.currentLanguage.asObservable();\n  }\n\n  // Get current language value\n  getCurrentLanguageValue(): Language {\n    return this.currentLanguage.value;\n  }\n\n  // Change language\n  setLanguage(language: Language): void {\n    this.currentLanguage.next(language);\n    localStorage.setItem('app_language', language);\n  }\n\n  // Get translation\n  translate(key: string): string {\n    const translation = this.translations[key];\n    if (translation) {\n      return translation[this.currentLanguage.value] || translation['en'] || key;\n    }\n    return key;\n  }\n\n  // Get translation with parameters\n  translateWithParams(key: string, params: Record<string, string>): string {\n    let translation = this.translate(key);\n    \n    // Replace parameters in translation\n    Object.keys(params).forEach(param => {\n      translation = translation.replace(`{{${param}}}`, params[param]);\n    });\n\n    return translation;\n  }\n\n  // Get available languages\n  getAvailableLanguages(): { code: Language; name: string; nativeName: string }[] {\n    return [\n      { code: 'en', name: 'English', nativeName: 'English' },\n      { code: 'hi', name: 'Hindi', nativeName: 'हिंदी' }\n    ];\n  }\n} ","import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslationService } from '../service/translation.service';\n\n@Pipe({\n  name: 'translate',\n  standalone: true\n})\nexport class TranslatePipe implements PipeTransform {\n  constructor(private translationService: TranslationService) {}\n\n  transform(key: string, params?: Record<string, string>): string {\n    if (params) {\n      return this.translationService.translateWithParams(key, params);\n    }\n    return this.translationService.translate(key);\n  }\n} ","import { Pipe, PipeTransform } from '@angular/core';\nimport { APP_CONFIG } from '../config/config';\nimport { CurrencyCode } from '../config/enums';\n\nexport interface CurrencyPipeOptions {\n  currency?: string;\n  locale?: string;\n  showSymbol?: boolean;\n  showCode?: boolean;\n  decimalPlaces?: number;\n  compact?: boolean;\n  signDisplay?: 'auto' | 'never' | 'always' | 'exceptZero';\n  notation?: 'standard' | 'scientific' | 'engineering' | 'compact';\n}\n\n@Pipe({\n  name: 'currency',\n  standalone: true,\n  pure: true\n})\nexport class CurrencyPipe implements PipeTransform {\n  \n  /**\n   * Transform a number value to a formatted currency string\n   * @param value - The numeric value to format\n   * @param options - Optional formatting options\n   * @returns Formatted currency string\n   */\n  transform(value: number | string | null | undefined, options?: CurrencyPipeOptions): string {\n    if (value === null || value === undefined || value === '') {\n      return this.formatCurrency(0, options);\n    }\n\n    const numericValue = typeof value === 'string' ? parseFloat(value) : value;\n\n    if (isNaN(numericValue)) {\n      return 'Invalid amount';\n    }\n\n    return this.formatCurrency(numericValue, options);\n  }\n\n  /**\n   * Format currency value with the specified options\n   */\n  private formatCurrency(value: number, options?: CurrencyPipeOptions): string {\n    const {\n      currency = APP_CONFIG.CURRENCY.DEFAULT,\n      locale = APP_CONFIG.LANGUAGE.DEFAULT,\n      showSymbol = true,\n      showCode = false,\n      decimalPlaces,\n      compact = false,\n      signDisplay = 'auto',\n      notation = 'standard'\n    } = options || {};\n\n    const currencyConfig = this.getCurrencyConfig(currency);\n\n    // Determine if value has a decimal part\n    const hasDecimal = value % 1 !== 0;\n\n    const minFractionDigits = decimalPlaces !== undefined\n      ? (hasDecimal ? decimalPlaces : 0)\n      : (hasDecimal ? currencyConfig.decimalPlaces : 0);\n\n    const maxFractionDigits = decimalPlaces !== undefined\n      ? decimalPlaces\n      : currencyConfig.decimalPlaces;\n\n    const formatOptions: Intl.NumberFormatOptions = {\n      style: 'currency',\n      currency: currency,\n      minimumFractionDigits: minFractionDigits,\n      maximumFractionDigits: maxFractionDigits,\n      signDisplay: signDisplay,\n      notation: compact ? 'compact' : notation\n    };\n\n    if (!showSymbol) {\n      formatOptions.currencyDisplay = 'code';\n    } else if (showCode) {\n      formatOptions.currencyDisplay = 'narrowSymbol';\n    }\n\n    try {\n      const formatter = new Intl.NumberFormat(locale, formatOptions);\n      return formatter.format(value);\n    } catch (error) {\n      console.error('Currency formatting error:', error);\n      return this.fallbackFormat(value, currency, currencyConfig);\n    }\n  }\n\n  /**\n   * Get currency configuration from APP_CONFIG\n   */\n  private getCurrencyConfig(currency: string) {\n    const currencyCode = currency as CurrencyCode;\n    return {\n      symbol: APP_CONFIG.CURRENCY.SYMBOLS[currencyCode] || currency,\n      decimalPlaces: APP_CONFIG.CURRENCY.DECIMAL_PLACES[currencyCode] || 2\n    };\n  }\n\n  /**\n   * Fallback formatting when Intl.NumberFormat fails\n   */\n  private fallbackFormat(value: number, currency: string, config: any): string {\n    const symbol = config.symbol;\n    const formattedValue = value % 1 === 0\n      ? value.toFixed(0)\n      : value.toFixed(config.decimalPlaces);\n    return `${symbol}${formattedValue}`;\n  }\n\n  /**\n   * Get currency symbol for a given currency code\n   */\n  static getCurrencySymbol(currencyCode: string): string {\n    const code = currencyCode as CurrencyCode;\n    return APP_CONFIG.CURRENCY.SYMBOLS[code] || currencyCode;\n  }\n\n  /**\n   * Get decimal places for a given currency code\n   */\n  static getDecimalPlaces(currencyCode: string): number {\n    const code = currencyCode as CurrencyCode;\n    return APP_CONFIG.CURRENCY.DECIMAL_PLACES[code] || 2;\n  }\n\n  /**\n   * Check if a currency code is supported\n   */\n  static isSupportedCurrency(currencyCode: string): boolean {\n    return APP_CONFIG.CURRENCY.SUPPORTED.includes(currencyCode as CurrencyCode);\n  }\n\n  /**\n   * Get all supported currencies\n   */\n  static getSupportedCurrencies(): readonly CurrencyCode[] {\n    return APP_CONFIG.CURRENCY.SUPPORTED;\n  }\n} ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n// Routing\nimport { SplitwiseRoutingModule } from './splitwise-routing.module';\n\n// Angular Material Modules\nimport { MatCardModule } from '@angular/material/card';\nimport { MatListModule } from '@angular/material/list';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\n// NgRx\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\n// Components\nimport { SplitwiseComponent } from './splitwise.component';\nimport { CreateGroupDialogComponent } from './create-group-dialog/create-group-dialog.component';\nimport { AddMemberDialogComponent } from './add-member-dialog/add-member-dialog.component';\nimport { GroupComponent } from './group/group.component';\nimport { GroupDetailsComponent } from './group-details/group-details.component';\nimport { MembersPageComponent } from './members-page/members-page.component';\nimport { EditTransactionDialogComponent } from './edit-transaction-dialog/edit-transaction-dialog.component';\n\n// Store\nimport { splitwiseReducer } from './store/splitwise.reducer';\nimport { SplitwiseEffects } from './store/splitwise.effects';\n\n// Services\nimport { SplitwiseService } from './services/splitwise.service';\n\n// Utility Components\nimport { LoaderComponent } from '../../util/components/loader/loader.component';\nimport { TranslatePipe } from '../../util/pipes/translate.pipe';\nimport { CurrencyPipe } from '../../util/pipes/currency.pipe';\nimport { MembersComponent } from './members/members.component';\n\n@NgModule({\n  declarations: [\n    SplitwiseComponent,\n    CreateGroupDialogComponent,\n    AddMemberDialogComponent,\n    GroupComponent,\n    GroupDetailsComponent,\n    MembersComponent,\n    MembersPageComponent,\n    EditTransactionDialogComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    SplitwiseRoutingModule,\n    \n    // Material Modules\n    MatCardModule,\n    MatListModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatDividerModule,\n    MatMenuModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatCheckboxModule,\n    \n    // NgRx\n    StoreModule.forFeature('splitwise', splitwiseReducer),\n    EffectsModule.forFeature([SplitwiseEffects]),\n    \n    // Standalone Components\n    LoaderComponent,\n    TranslatePipe,\n    CurrencyPipe\n  ],\n  providers: [\n    SplitwiseService\n  ],\n  exports: [\n    SplitwiseComponent\n  ]\n})\nexport class SplitwiseModule { } "],"mappings":"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","names":["selectProfileState","createFeatureSelector","selectProfile","createSelector","state","profile","selectProfileLoading","loading","selectProfileError","error","selectUserPreferences","preferences","selectUserCurrency","defaultCurrency","selectUserLanguage","language","selectUserTimezone","timezone","selectUserNotifications","notifications","selectUserEmailUpdates","emailUpdates","selectUserBudgetAlerts","budgetAlerts","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","CreateGroupDialogComponent","constructor","fb","dialogRef","auth","store","isSubmitting","userCurrency$","select","selectUserCurrency","groupForm","group","name","Validators","required","minLength","maxLength","description","initialMembers","ngOnInit","onSubmit","__async","_a","valid","formData","value","userCurrency","currency","subscribe","curr","unsubscribe","request","trim","close","error","console","markAllAsTouched","onCancel","getErrorMessage","controlName","_b","control","get","hasError","charAt","toUpperCase","slice","errors","requiredLength","ɵɵdirectiveInject","FormBuilder","MatDialogRef","Auth","Store","selectors","decls","vars","consts","template","rf","ctx","ɵɵlistener","ɵɵtemplate","CreateGroupDialogComponent_mat_spinner_12_Template","CreateGroupDialogComponent_Conditional_24_Template","CreateGroupDialogComponent_Conditional_25_Template","CreateGroupDialogComponent_Conditional_26_Template","CreateGroupDialogComponent_Conditional_36_Template","ɵɵadvance","ɵɵproperty","invalid","ɵɵtextInterpolate1","ɵɵconditional","tmp_4_0","touched","tmp_5_0","tmp_6_0","tmp_7_0","length","tmp_8_0","tmp_9_0","_CreateGroupDialogComponent","loadGroups","createAction","loadGroupsSuccess","props","loadGroupsFailure","loadGroupById","loadGroupByIdSuccess","loadGroupByIdFailure","loadInvitations","loadInvitationsSuccess","loadInvitationsFailure","createGroup","createGroupSuccess","createGroupFailure","addMember","addMemberSuccess","addMemberFailure","acceptInvitation","acceptInvitationSuccess","acceptInvitationFailure","declineInvitation","declineInvitationSuccess","declineInvitationFailure","deleteGroup","deleteGroupSuccess","deleteGroupFailure","selectGroup","loadTransactions","loadTransactionsSuccess","loadTransactionsFailure","loadSettlements","loadSettlementsSuccess","loadSettlementsFailure","createSplitTransaction","createSplitTransactionSuccess","createSplitTransactionFailure","updateSplitTransaction","updateSplitTransactionSuccess","updateSplitTransactionFailure","createSettlement","createSettlementSuccess","createSettlementFailure","removeMember","removeMemberSuccess","removeMemberFailure","clearError","selectSplitwiseFeature","createFeatureSelector","selectSplitwiseState","createSelector","state","selectGroups","groups","selectInvitations","invitations","selectTransactions","transactions","selectSettlements","settlements","selectSelectedGroup","selectedGroup","selectLoading","loading","selectError","error","selectActiveGroups","filter","group","isActive","selectPendingInvitations","invitation","status","selectGroupTransactions","t","groupId","id","selectGroupSettlements","s","selectGroupMemberCount","members","member","length","selectCurrentUserRole","GroupMemberRole","SettlementStatus","InvitationStatus","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵclassProp","ctx_r0","userExists","checkingUser","ɵɵadvance","ɵɵtextInterpolate1","getUserStatusText","ɵɵproperty","member_r3","photoURL","ɵɵsanitizeUrl","displayName","ɵɵtemplate","AddMemberDialogComponent_div_34_img_2_Template","AddMemberDialogComponent_div_34_mat_icon_3_Template","ɵɵlistener","ɵɵrestoreView","_r2","$implicit","ɵɵnextContext","ɵɵresetView","onDeleteMember","userId","ɵɵtextInterpolate","email","AddMemberDialogComponent","constructor","fb","dialogRef","data","auth","userService","dialog","isSubmitting","group","memberForm","Validators","required","ngOnInit","setTimeout","emailField","document","querySelector","focus","onEmailChange","__async","_a","_b","_c","get","value","isEmailAlreadyMember","setErrors","alreadyMember","valid","user","findUserByEmail","error","console","onSubmit","request","trim","toLowerCase","role","GroupMemberRole","MEMBER","close","markAllAsTouched","onCancel","getErrorMessage","controlName","control","hasError","charAt","toUpperCase","slice","members","some","member","getRoleDisplayName","open","ConfirmDialogComponent","title","message","confirmText","cancelText","afterClosed","subscribe","result","action","ɵɵdirectiveInject","FormBuilder","MatDialogRef","MAT_DIALOG_DATA","Auth","UserService","MatDialog","selectors","decls","vars","consts","template","rf","ctx","AddMemberDialogComponent_mat_spinner_12_Template","AddMemberDialogComponent_Conditional_24_Template","AddMemberDialogComponent_Conditional_25_Template","AddMemberDialogComponent_Conditional_26_Template","AddMemberDialogComponent_Conditional_27_Template","AddMemberDialogComponent_div_34_Template","invalid","ɵɵconditional","tmp_4_0","touched","tmp_5_0","tmp_6_0","length","_AddMemberDialogComponent","GroupComponent","constructor","router","auth","dialog","isSelected","isMobile","groupSelected","EventEmitter","addMember","deleteGroup","onGroupClick","navigate","group","id","openAddMemberDialog","event","stopPropagation","open","AddMemberDialogComponent","width","maxWidth","data","disableClose","panelClass","afterClosed","subscribe","result","emit","groupId","request","onDeleteGroup","getGroupMemberCount","members","filter","member","isActive","length","getCurrentUserRole","currentUser","find","m","userId","uid","role","canManageGroup","formatDate","date","toDate","Date","toLocaleDateString","formatCurrency","amount","currency","Intl","NumberFormat","style","format","ɵɵdirectiveInject","Router","Auth","MatDialog","selectors","inputs","outputs","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵlistener","i0","ɵɵrestoreView","_r1","ɵɵresetView","ɵɵtext","ɵɵelementEnd","$event","ɵɵelement","ɵɵclassProp","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","name","ɵɵtextInterpolate1","createdAt","ɵɵproperty","groupMenu_r2","_GroupComponent","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","invitation_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","acceptInvitation","declineInvitation","ɵɵadvance","ɵɵtextInterpolate","groupName","ɵɵtextInterpolate1","invitedByDisplayName","formatDate","createdAt","ɵɵrepeaterCreate","SplitwiseComponent_div_16_For_10_Template","_forTrack0","ɵɵrepeater","invitations","$event","_r4","handleAddMember","deleteGroup","ɵɵproperty","group_r5","isMobile","SplitwiseComponent","constructor","breakpointObserver","auth","store","dialog","notificationService","groups","currentUser","error","destroy$","Subject","observe","Breakpoints","Handset","pipe","takeUntil","subscribe","result","matches","ngOnInit","loadData","subscribeToStore","ngOnDestroy","next","complete","select","selectSplitwiseState","state","dispatch","clearError","loadGroups","loadInvitations","openCreateGroupDialog","open","CreateGroupDialogComponent","width","maxWidth","disableClose","panelClass","afterClosed","createGroup","request","data","addMember","invitation","invitationId","id","group","ConfirmDialogComponent","title","message","name","confirmText","cancelText","groupId","date","toDate","Date","toLocaleDateString","formatCurrency","amount","currency","Intl","NumberFormat","style","format","ɵɵdirectiveInject","BreakpointObserver","Auth","Store","MatDialog","NotificationService","selectors","decls","vars","consts","template","rf","ctx","ɵɵtemplate","SplitwiseComponent_div_16_Template","SplitwiseComponent_For_20_Template","length","_SplitwiseComponent","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵclassProp","ctx_r0","getTotalSplitAmount","totalAmount","ɵɵtextInterpolate1","formatCurrency","Math","abs","ɵɵtextInterpolate","ɵɵproperty","getMemberPhotoURL","tmp_4_0","split_r3","get","value","ɵɵsanitizeUrl","tmp_5_0","getMemberInitials","ɵɵtemplate","EditTransactionDialogComponent_div_67_img_4_Template","EditTransactionDialogComponent_div_67_div_5_Template","ɵɵlistener","i_r4","ɵɵrestoreView","_r2","index","ɵɵnextContext","ɵɵresetView","removeSplit","tmp_6_0","tmp_7_0","transaction","currency","member_r6","photoURL","displayName","_r5","$implicit","addMemberSplit","EditTransactionDialogComponent_div_68_button_5_img_2_Template","EditTransactionDialogComponent_div_68_button_5_div_3_Template","email","EditTransactionDialogComponent_div_68_button_5_Template","getAvailableMembers","ɵɵpipeBind2","getTotalPercentage","ɵɵtextInterpolate2","EditTransactionDialogComponent_div_69_div_1_Template","EditTransactionDialogComponent_div_69_div_2_Template","EditTransactionDialogComponent","constructor","fb","dialogRef","data","splitMode","isSubmitting","groupMembers","ngOnInit","initForm","_a","editForm","group","Validators","required","min","splits","array","forEach","split","addSplit","valueChanges","subscribe","newTotal","updateSplitPercentages","splitsArray","existingSplit","_b","splitGroup","userId","amount","percentage","max","isPaid","push","undefined","patchValue","round","emitEvent","removeAt","controls","updateSplitAmounts","member","find","control","selectedUserIds","map","filter","includes","reduce","total","isFormValid","totalPercentage","valid","onCancel","close","onSave","formValue","updatedTransaction","Intl","NumberFormat","style","format","setSplitMode","mode","m","name","charAt","join","toUpperCase","slice","ɵɵdirectiveInject","FormBuilder","MatDialogRef","MAT_DIALOG_DATA","selectors","decls","vars","consts","template","rf","ctx","EditTransactionDialogComponent_mat_spinner_12_Template","EditTransactionDialogComponent_mat_icon_13_Template","EditTransactionDialogComponent_Conditional_28_Template","EditTransactionDialogComponent_Conditional_29_Template","EditTransactionDialogComponent_div_65_Template","EditTransactionDialogComponent_div_67_Template","EditTransactionDialogComponent_div_68_Template","EditTransactionDialogComponent_div_69_Template","ɵɵconditional","hasError","touched","length","_EditTransactionDialogComponent","DateService","constructor","toDate","timestamp","Date","Timestamp","seconds","nanoseconds","parsed","isNaN","getTime","error","console","toTimestamp","dateValue","fromDate","date","fromFormDate","formDateValue","now","compare","date1","date2","d1","d2","sortByDate","array","dateField","ascending","sort","a","b","dateA","dateB","comparison","filterByDateRange","startDate","endDate","start","end","filter","item","itemDate","isValidDate","value","formatDate","format","day","getDate","toString","padStart","month","getMonth","year","getFullYear","replace","toISOString","split","getRelativeTime","diffInSeconds","Math","floor","minutes","hours","days","factory","ɵfac","providedIn","_DateService","HapticFeedbackService","constructor","isSupported","navigator","isMobile","test","userAgent","isHapticSupported","isMobileDevice","lightVibration","vibrate","error","console","warn","mediumVibration","heavyVibration","customVibration","pattern","options","duration","intensity","vibrationDuration","successVibration","errorVibration","warningVibration","buttonClick","navigationClick","importantAction","stopVibration","testVibration","log","setTimeout","APP_CONFIG","PERFORMANCE","DEBOUNCE_DELAY","factory","ɵfac","providedIn","_HapticFeedbackService","SplitwiseService","constructor","firestore","auth","notificationService","dateService","userService","hapticFeedback","getUserGroups","userId","currentUser","email","of","groupsRef","collection","q","query","where","orderBy","from","getDocs","pipe","map","snapshot","docs","doc","__spreadValues","id","data","filter","group","members","some","member","_a","toLowerCase","isActive","catchError","error","console","getGroupById","groupId","getDoc","then","exists","createGroup","request","Error","groupData","name","description","createdBy","uid","displayName","photoURL","role","GroupMemberRole","ADMIN","joinedAt","Date","currency","createdAt","updatedAt","syncStatus","SyncStatus","SYNCED","addDoc","docRef","deleteGroup","groupRef","updateDoc","getUserInvitations","invitationsRef","invitations","invitation","isInvitationExpired","expiresAt","Timestamp","toDate","markExpiredInvitations","__async","batch","writeBatch","hasUpdates","forEach","update","ref","status","InvitationStatus","EXPIRED","commit","acceptInvitation","invitationId","invitationRef","invitationDoc","ACCEPTED","groupDoc","updatedMembers","invitedEmail","__spreadProps","split","success","groupName","declineInvitation","DECLINED","addMemberToGroup","find","targetUser","findUserByEmail","sendGroupInvitation","newMember","firstName","MEMBER","message","getGroupTransactions","transactionsRef","getGroupSettlements","settlementsRef","getSettlementsByTransaction","transactionId","createSplitTransaction","splitTransactionData","originalTransactionId","amount","splits","totalAmount","getGroup","updateGroup","updateData","undefined","removeMemberFromGroup","memberUserId","getSplitTransaction","updateSplitTransaction","payee","type","date","toTimestamp","notes","categoryId","category","transactionDoc","transactionData","splitsWithDetails","m","isPaid","deleteSplitTransaction","querySnapshot","empty","reversedSplits","deleteDoc","cleanupSettlementsForTransaction","settlementsQuery","settlementsSnapshot","deletePromises","Promise","all","log","length","createSettlement","settlementData","fromUserId","toUserId","SettlementStatus","PENDING","completeSettlement","settlementId","COMPLETED","settledAt","inviterUserId","invitationData","invitedBy","invitedByEmail","invitedByDisplayName","now","getGroupSummary","transactions","settlements","reduce","sum","transaction","totalTransactions","averageAmount","memberCount","activeMemberCount","pendingSettlements","lastActivity","getMemberBalances","memberBalances","Map","set","totalPaid","totalOwed","netBalance","transactionCount","balance","get","Math","abs","Array","values","sharePWA","buttonClick","shareData","title","text","url","environment","baseUrl","navigator","share","canShare","catch","fallbackShare","clipboard","writeText","alert","textArea","document","createElement","value","body","appendChild","select","execCommand","removeChild","ɵɵinject","Firestore","Auth","NotificationService","DateService","UserService","HapticFeedbackService","factory","ɵfac","providedIn","_SplitwiseService","CurrencyService","constructor","userService","currentCurrencySubject","BehaviorSubject","DEFAULT_CURRENCY","currentCurrency$","asObservable","initializeCurrency","__async","_a","user","getCurrentUser","preferences","defaultCurrency","setCurrentCurrency","error","console","getCurrencies","CURRENCIES","getCurrentCurrency","value","currencyCode","isValidCurrency","next","getCurrencySymbol","code","getCurrencyByCode","some","currency","getDefaultCurrency","formatAmount","amount","Intl","NumberFormat","APP_CONFIG","LANGUAGE","DEFAULT","style","format","ɵɵinject","UserService","factory","ɵfac","providedIn","_CurrencyService","CDK_ACCORDION","InjectionToken","nextId","CdkAccordionItem","_CdkAccordionItem","expanded","accordionId","accordion","_changeDetectorRef","_expansionDispatcher","Subscription","EventEmitter","id","t","ɵɵdirectiveInject","CDK_ACCORDION","ChangeDetectorRef","UniqueSelectionDispatcher","ɵɵdefineDirective","booleanAttribute","ɵɵProvidersFeature","ɵɵInputTransformsFeature","CdkAccordionModule","_CdkAccordionModule","ɵɵdefineNgModule","ɵɵdefineInjector","_c0","_c1","_c2","MatExpansionPanel_ng_template_5_Template","rf","ctx","_c3","_c4","MatExpansionPanelHeader_Conditional_4_Template","ɵɵelementStart","ɵɵnamespaceSVG","ɵɵelement","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵproperty","MAT_ACCORDION","InjectionToken","EXPANSION_PANEL_ANIMATION_TIMING","matExpansionAnimations","trigger","state","style","transition","animate","MAT_EXPANSION_PANEL","MatExpansionPanelContent","_MatExpansionPanelContent","_template","_expansionPanel","t","ɵɵdirectiveInject","TemplateRef","ɵɵdefineDirective","uniqueId","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","MatExpansionPanel","_MatExpansionPanel","CdkAccordionItem","value","accordion","_changeDetectorRef","_uniqueSelectionDispatcher","_viewContainerRef","_document","_animationMode","defaultOptions","EventEmitter","Subject","startWith","filter","take","TemplatePortal","changes","focusedElement","bodyElement","event","_a","isInitialAnimation","ChangeDetectorRef","UniqueSelectionDispatcher","ViewContainerRef","DOCUMENT","ANIMATION_MODULE_TYPE","ɵɵdefineComponent","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵviewQuery","ɵɵclassProp","booleanAttribute","ɵɵProvidersFeature","ɵɵInputTransformsFeature","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","_r1","ɵɵgetCurrentView","ɵɵprojectionDef","ɵɵprojection","ɵɵlistener","$event","ɵɵrestoreView","ɵɵresetView","ɵɵtemplate","ɵɵadvance","ɵɵattribute","CdkPortalOutlet","MatExpansionPanelHeader","_MatExpansionPanelHeader","panel","_element","_focusMonitor","_changeDetectorRef","defaultOptions","_animationMode","tabIndex","Subscription","accordionHideToggleChange","filter","changes","EMPTY","merge","isExpanded","event","hasModifierKey","origin","options","t","ɵɵdirectiveInject","MatExpansionPanel","ElementRef","FocusMonitor","ChangeDetectorRef","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","ANIMATION_MODULE_TYPE","ɵɵinjectAttribute","ɵɵdefineComponent","rf","ctx","ɵɵlistener","$event","ɵɵattribute","ɵɵstyleProp","ɵɵclassProp","value","numberAttribute","ɵɵInputTransformsFeature","ɵɵStandaloneFeature","_c4","ɵɵprojectionDef","_c3","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd","ɵɵtemplate","MatExpansionPanelHeader_Conditional_4_Template","ɵɵadvance","ɵɵconditional","matExpansionAnimations","MatExpansionPanelTitle","_MatExpansionPanelTitle","t","ɵɵdefineDirective","MatExpansionModule","_MatExpansionModule","t","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","CdkAccordionModule","PortalModule","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r1","getCurrentUserStatus","balance_r4","netBalance","ɵɵtemplate","GroupDetailsComponent_div_2_div_42_div_14_span_5_Template","GroupDetailsComponent_div_2_div_42_div_14_span_13_Template","ɵɵclassProp","userId","currentUser","uid","ɵɵpipeBind1","displayName","ɵɵproperty","formatCurrency","totalPaid","totalOwed","ɵɵclassMap","getBalanceColor","breakdown_r5","type","ɵɵtextInterpolate","message","amount","GroupDetailsComponent_div_2_div_42_div_15_span_6_Template","GroupDetailsComponent_div_2_div_42_div_15_span_7_Template","GroupDetailsComponent_div_2_div_42_div_15_div_9_Template","GroupDetailsComponent_div_2_div_42_div_15_div_10_Template","getDetailedBalanceBreakdown","length","ɵɵlistener","ɵɵrestoreView","_r3","ɵɵnextContext","ɵɵresetView","openAddMemberDialog","GroupDetailsComponent_div_2_div_42_div_14_Template","GroupDetailsComponent_div_2_div_42_div_15_Template","getMemberBalances","suggestion_r7","_r6","$implicit","createSettlement","getSettlementMessage","fromUserName","toUserName","GroupDetailsComponent_div_2_div_43_div_12_Template","getSettlementSubtitle","getSettlementSuggestions","transaction_r9","_r8","openEditTransactionDialog","getTransactionTitle","getTransactionCreatorName","formatDate","createdAt","totalAmount","GroupDetailsComponent_div_2_div_55_div_1_Template","transactions","settlement_r10","settledAt","GroupDetailsComponent_div_2_div_57_div_10_div_11_Template","getMemberName","fromUserId","toUserId","GroupDetailsComponent_div_2_div_57_div_10_Template","getCompletedSettlementsCount","getCompletedSettlements","_r1","goBack","deleteGroup","GroupDetailsComponent_div_2_div_42_Template","GroupDetailsComponent_div_2_div_43_Template","GroupDetailsComponent_div_2_div_55_Template","GroupDetailsComponent_div_2_div_56_Template","GroupDetailsComponent_div_2_div_57_Template","group","name","groupMenu_r11","getGroupMemberCount","getTotalBalance","showBalances","getTransactionCount","getTotalTransactionAmount","_r12","GroupDetailsComponent","constructor","route","router","auth","store","dialog","notificationService","breakpointObserver","splitwiseService","currencyService","settlements","error","isMobile","isLoading","Math","destroy$","Subject","observe","Breakpoints","Handset","pipe","takeUntil","subscribe","result","matches","ngOnInit","subscribeToStore","loadGroupDetails","ngOnDestroy","next","complete","select","selectSplitwiseState","state","loading","groupId","snapshot","paramMap","get","groups","find","g","id","getGroupById","then","filter","t","s","console","log","calculateNetBalances","dispatch","clearError","transactionsCount","settlementsCount","reloadData","loadTransactions","loadSettlements","loadGroupById","navigate","open","AddMemberDialogComponent","width","maxWidth","data","disableClose","panelClass","afterClosed","action","removeMember","addMember","request","ConfirmDialogComponent","title","confirmText","cancelText","_a","getCurrentUserRole","member","members","m","role","canManageGroup","isActive","date","toDate","Date","toLocaleDateString","formatAmount","reduce","total","transaction","splits","splitTotal","split","balances","paidBy","createdBy","splitAmount","settlement","status","simplifyBalances","_b","visited","Set","userA","userB","key","reverseKey","has","amountAB","amountBA","net","round","add","simplifiedBalances","forEach","memberBalances","Object","values","memberSplit","push","email","sort","a","b","userBalances","breakdown","entries","otherUserId","otherUserName","keys","owedToUser","getBalanceBetweenUsers","userId1","userId2","balance1to2","balance2to1","getBalanceSummary","owes","owed","suggestions","currentUserBalance","currentUserNetBalance","debtAmount","abs","creditor","availableCredit","exactAmountOwed","settlementAmount","min","currency","originalTransactionId","some","creditAmount","debtor","remainingDebt","suggestion","notes","success","setTimeout","toggleBalanceDisplay","balance","getSettlementStatus","exists","isSettlementPending","isSettlementCompleted","getExistingSettlementsSummary","summary","userSettlements","isFromUser","isInvolvingCurrentUser","isFromCurrentUser","getPendingSettlementsCount","getSettlementCount","getTransactionDetails","map","totalSplitAmount","sum","splitRatio","userName","actualAmount","isPaidBy","toggleMembers","addTransaction","queryParams","splitGroupId","returnUrl","url","EditTransactionDialogComponent","maxHeight","groupMembers","updateSplitTransaction","catch","ɵɵdirectiveInject","ActivatedRoute","Router","Auth","Store","MatDialog","NotificationService","BreakpointObserver","SplitwiseService","CurrencyService","selectors","decls","vars","consts","template","rf","ctx","GroupDetailsComponent_div_1_Template","GroupDetailsComponent_div_2_Template","GroupDetailsComponent_div_3_Template","_GroupDetailsComponent","ɵɵelement","ɵɵproperty","member_r1","photoURL","ɵɵsanitizeUrl","displayName","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","MembersComponent_div_12_img_3_Template","MembersComponent_div_12_mat_icon_4_Template","ɵɵadvance","ɵɵtextInterpolate","email","role","MembersComponent","constructor","isMobile","addMember","EventEmitter","Math","formatCurrency","amount","currency","Intl","NumberFormat","style","format","getGroupMemberCount","_a","group","members","filter","member","isActive","length","getPositiveBalanceMembers","getNegativeBalanceMembers","getNeutralBalanceMembers","onAddMember","emit","selectors","inputs","outputs","decls","vars","consts","template","rf","ctx","MembersComponent_div_12_Template","ɵɵlistener","ɵɵtextInterpolate1","_MembersComponent","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","goBack","openAddMemberDialog","ɵɵadvance","ɵɵproperty","group","isMobile","_r3","MembersPageComponent","constructor","route","router","auth","store","dialog","notificationService","breakpointObserver","isLoading","error","currentUser","destroy$","Subject","observe","Breakpoints","Handset","pipe","takeUntil","subscribe","result","matches","ngOnInit","subscribeToStore","loadGroupDetails","ngOnDestroy","next","complete","select","selectSplitwiseState","state","loading","groupId","snapshot","paramMap","get","groups","find","g","id","dispatch","loadGroupById","clearError","navigate","open","AddMemberDialogComponent","width","maxWidth","data","disableClose","panelClass","afterClosed","action","removeMember","userId","addMember","request","ɵɵdirectiveInject","ActivatedRoute","Router","Auth","Store","MatDialog","NotificationService","BreakpointObserver","selectors","decls","vars","consts","template","rf","ctx","ɵɵtemplate","MembersPageComponent_div_1_Template","MembersPageComponent_div_2_Template","MembersPageComponent_div_3_Template","_MembersPageComponent","routes","path","component","SplitwiseComponent","GroupDetailsComponent","MembersPageComponent","SplitwiseRoutingModule","RouterModule","forChild","_SplitwiseRoutingModule","MatListModule","_MatListModule","t","ɵɵdefineNgModule","ɵɵdefineInjector","ObserversModule","CommonModule","MatCommonModule","MatRippleModule","MatPseudoCheckboxModule","MatDividerModule","_c0","_c1","MatButtonToggle_Conditional_3_Template","rf","ctx","ɵɵelement","ctx_r1","ɵɵnextContext","ɵɵproperty","MatButtonToggle_Conditional_4_Template","MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS","InjectionToken","MAT_BUTTON_TOGGLE_GROUP_DEFAULT_OPTIONS_FACTORY","MAT_BUTTON_TOGGLE_GROUP","MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","MatButtonToggleGroup","uniqueIdCounter","MatButtonToggleChange","source","value","_MatButtonToggleGroup","selected","toggle","newValue","_changeDetector","defaultOptions","_dir","_a","_b","EventEmitter","SelectionModel","fn","isDisabled","event","buttonId","index","nextButton","select","isUserInput","deferEvents","i","startIndex","offset","items","item","currentValue","correspondingOption","t","ɵɵdirectiveInject","ChangeDetectorRef","Directionality","ɵɵdefineDirective","dirIndex","ɵɵcontentQuery","MatButtonToggle","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵlistener","$event","ɵɵattribute","ɵɵclassProp","booleanAttribute","ɵɵProvidersFeature","ɵɵInputTransformsFeature","_MatButtonToggle","toggleGroup","_changeDetectorRef","_elementRef","_focusMonitor","defaultTabIndex","parsedTabIndex","group","options","newChecked","focusable","ElementRef","FocusMonitor","ɵɵinjectAttribute","ɵɵdefineComponent","ɵɵviewQuery","ɵɵStandaloneFeature","_r1","ɵɵgetCurrentView","ɵɵprojectionDef","ɵɵelementStart","ɵɵrestoreView","ɵɵresetView","ɵɵtemplate","ɵɵprojection","ɵɵelementEnd","button_r3","ɵɵreference","ɵɵadvance","ɵɵconditional","MatRipple","MatPseudoCheckbox","MatButtonToggleModule","_MatButtonToggleModule","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","MatRippleModule","DEFAULT_EFFECT_CONFIG","CREATE_EFFECT_METADATA_KEY","createEffect","source","config","effect","value","__spreadValues","getCreateEffectMetadata","instance","propertyName","metaData","getSourceMetadata","instance","getCreateEffectMetadata","getSourceForInstance","isClassInstance","obj","isClass","classOrRecord","getClasses","classesAndRecords","isToken","tokenOrRecord","InjectionToken","mergeEffects","sourceInstance","globalErrorHandler","effectsErrorHandler","source","sourceName","observables$","propertyName","dispatch","useEffectsErrorHandler","observable$","effectAction$","ignoreElements","materialize","map","notification","merge","MAX_NUMBER_OF_RETRY_ATTEMPTS","defaultEffectsErrorHandler","errorHandler","retryAttemptLeft","catchError","error","Actions","_Actions","Observable","operator","observable","t","ɵɵinject","ScannedActionsSubject","ɵɵdefineInjectable","ofType","allowedTypes","filter","action","typeOrActionCreator","_ROOT_EFFECTS_GUARD","USER_PROVIDED_EFFECTS","_ROOT_EFFECTS","_ROOT_EFFECTS_INSTANCES","_FEATURE_EFFECTS","_FEATURE_EFFECTS_INSTANCE_GROUPS","EFFECTS_ERROR_HANDLER","ROOT_EFFECTS_INIT","rootEffectsInit","createAction","reportInvalidActions","output","reporter","isAction","getEffectName","stringify","isMethod","onIdentifyEffectsKey","isOnIdentifyEffects","isFunction","onRunEffectsKey","isOnRunEffects","onInitEffects","isOnInitEffects","functionName","EffectSources","_EffectSources","Subject","effectSourceInstance","groupBy","effectsInstance","mergeMap","source$","effect$","exhaustMap","resolveEffectSource","dematerialize","init$","take","ErrorHandler","mergedEffects$","EffectsRunner","_EffectsRunner","effectSources","store","Store","EffectsRootModule","_EffectsRootModule","sources","runner","rootEffectsInstances","storeRootModule","storeFeatureModule","guard","StoreRootModule","StoreFeatureModule","ɵɵdefineNgModule","ɵɵdefineInjector","EffectsFeatureModule","_EffectsFeatureModule","effectsRootModule","effectsInstanceGroups","effectsInstances","EffectsModule","_EffectsModule","featureEffects","effects","effectsClasses","createEffectsInstances","rootEffects","_provideForRootGuard","effectsGroups","userProvidedEffectsGroups","effectsGroup","userProvidedEffectsGroup","effectsTokenOrRecord","inject","initialState","groups","invitations","transactions","settlements","selectedGroup","loading","error","splitwiseReducer","createReducer","initialState","on","loadGroups","state","__spreadProps","__spreadValues","loading","error","loadGroupsSuccess","groups","loadGroupsFailure","loadGroupById","loadGroupByIdSuccess","group","find","g","id","map","selectedGroup","loadGroupByIdFailure","loadInvitations","loadInvitationsSuccess","invitations","loadInvitationsFailure","createGroup","createGroupSuccess","createGroupFailure","addMember","addMemberSuccess","addMemberFailure","acceptInvitation","acceptInvitationSuccess","invitationId","filter","inv","acceptInvitationFailure","declineInvitation","declineInvitationSuccess","declineInvitationFailure","deleteGroup","deleteGroupSuccess","groupId","_a","deleteGroupFailure","selectGroup","loadTransactions","loadTransactionsSuccess","transactions","loadTransactionsFailure","loadSettlements","loadSettlementsSuccess","settlements","loadSettlementsFailure","createSplitTransaction","createSplitTransactionSuccess","transaction","createSplitTransactionFailure","updateSplitTransaction","updateSplitTransactionSuccess","t","updateSplitTransactionFailure","createSettlement","createSettlementSuccess","settlement","createSettlementFailure","removeMember","removeMemberSuccess","removeMemberFailure","clearError","SplitwiseEffects","constructor","actions$","splitwiseService","userService","store","auth","loadGroups$","createEffect","pipe","ofType","loadGroups","mergeMap","from","getCurrentUser","user","uid","getUserGroups","map","groups","loadGroupsSuccess","catchError","error","of","loadGroupsFailure","message","loadGroupById$","loadGroupById","action","getGroupById","groupId","group","loadGroupByIdSuccess","loadGroupByIdFailure","loadInvitations$","loadInvitations","getUserInvitations","invitations","loadInvitationsSuccess","loadInvitationsFailure","createGroup$","createGroup","request","createGroupSuccess","createGroupFailure","addMember$","addMember","addMemberToGroup","addMemberSuccess","addMemberFailure","acceptInvitation$","acceptInvitation","invitationId","acceptInvitationSuccess","acceptInvitationFailure","declineInvitation$","declineInvitation","declineInvitationSuccess","declineInvitationFailure","deleteGroup$","deleteGroup","deleteGroupSuccess","deleteGroupFailure","loadTransactions$","loadTransactions","getGroupTransactions","transactions","loadTransactionsSuccess","loadTransactionsFailure","loadSettlements$","loadSettlements","getGroupSettlements","settlements","loadSettlementsSuccess","loadSettlementsFailure","createSplitTransaction$","createSplitTransaction","transaction","createSplitTransactionSuccess","createSplitTransactionFailure","updateSplitTransaction$","updateSplitTransaction","transactionId","updates","updateSplitTransactionSuccess","id","updateSplitTransactionFailure","createSettlement$","createSettlement","createSettlementFailure","fromUserId","toUserId","amount","notes","originalTransactionId","settlementId","createSettlementSuccess","settlement","removeMember$","removeMember","removeMemberFromGroup","userId","removeMemberSuccess","removeMemberFailure","ɵɵinject","Actions","SplitwiseService","UserService","Store","Auth","factory","ɵfac","_SplitwiseEffects","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","message","LoaderComponent","constructor","loaderService","loading$","ɵɵdirectiveInject","LoaderService","selectors","inputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","ɵɵtemplate","LoaderComponent_Conditional_0_Template","ɵɵconditional","ɵɵpipeBind1","AsyncPipe","styles","_LoaderComponent","TranslationService","constructor","currentLanguage","BehaviorSubject","translations","en","hi","APP_CONFIG","APP_NAME","savedLanguage","localStorage","getItem","next","navigator","language","split","getCurrentLanguage","asObservable","getCurrentLanguageValue","value","setLanguage","setItem","translate","key","translation","translateWithParams","params","Object","keys","forEach","param","replace","getAvailableLanguages","code","name","nativeName","factory","ɵfac","providedIn","_TranslationService","TranslatePipe","constructor","translationService","transform","key","params","translateWithParams","translate","ɵɵdirectiveInject","TranslationService","pure","standalone","_TranslatePipe","CurrencyPipe","transform","value","options","formatCurrency","numericValue","parseFloat","isNaN","currency","APP_CONFIG","CURRENCY","DEFAULT","locale","LANGUAGE","showSymbol","showCode","decimalPlaces","compact","signDisplay","notation","currencyConfig","getCurrencyConfig","hasDecimal","minFractionDigits","undefined","maxFractionDigits","formatOptions","style","minimumFractionDigits","maximumFractionDigits","currencyDisplay","Intl","NumberFormat","format","error","console","fallbackFormat","currencyCode","symbol","SYMBOLS","DECIMAL_PLACES","config","formattedValue","toFixed","getCurrencySymbol","code","getDecimalPlaces","isSupportedCurrency","SUPPORTED","includes","getSupportedCurrencies","pure","standalone","_CurrencyPipe","SplitwiseModule","SplitwiseService","imports","CommonModule","FormsModule","ReactiveFormsModule","RouterModule","SplitwiseRoutingModule","MatCardModule","MatListModule","MatButtonModule","MatIconModule","MatDialogModule","MatFormFieldModule","MatInputModule","MatSelectModule","MatProgressSpinnerModule","MatTooltipModule","MatChipsModule","MatBadgeModule","MatDividerModule","MatMenuModule","MatExpansionModule","MatButtonToggleModule","MatCheckboxModule","StoreModule","forFeature","splitwiseReducer","EffectsModule","SplitwiseEffects","_SplitwiseModule"],"x_google_ignoreList":[18,19,27,28,29]}